["^ ","~:output",["^ ","~:js","goog.provide('reagent.dom');\nif((typeof reagent !== 'undefined') && (typeof reagent.dom !== 'undefined') && (typeof reagent.dom.roots !== 'undefined')){\n} else {\nreagent.dom.roots = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\n}\nreagent.dom.unmount_comp = (function reagent$dom$unmount_comp(container){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.dom.roots,cljs.core.dissoc,container);\n\nreturn shadow.js.shim.module$react_dom.unmountComponentAtNode(container);\n});\nreagent.dom.render_comp = (function reagent$dom$render_comp(comp,container,callback){\nvar _STAR_always_update_STAR__orig_val__31987 = reagent.impl.util._STAR_always_update_STAR_;\nvar _STAR_always_update_STAR__temp_val__31988 = true;\n(reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__temp_val__31988);\n\ntry{return shadow.js.shim.module$react_dom.render((comp.cljs$core$IFn$_invoke$arity$0 ? comp.cljs$core$IFn$_invoke$arity$0() : comp.call(null)),container,(function (){\nvar _STAR_always_update_STAR__orig_val__31992 = reagent.impl.util._STAR_always_update_STAR_;\nvar _STAR_always_update_STAR__temp_val__31993 = false;\n(reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__temp_val__31993);\n\ntry{cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reagent.dom.roots,cljs.core.assoc,container,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [comp,container], null));\n\nreagent.impl.batching.flush_after_render();\n\nif((!((callback == null)))){\nreturn (callback.cljs$core$IFn$_invoke$arity$0 ? callback.cljs$core$IFn$_invoke$arity$0() : callback.call(null));\n} else {\nreturn null;\n}\n}finally {(reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__orig_val__31992);\n}}));\n}finally {(reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__orig_val__31987);\n}});\nreagent.dom.re_render_component = (function reagent$dom$re_render_component(comp,container){\nreturn reagent.dom.render_comp(comp,container,null);\n});\n/**\n * Render a Reagent component into the DOM. The first argument may be\n *   either a vector (using Reagent's Hiccup syntax), or a React element.\n *   The second argument should be a DOM node.\n * \n *   Optionally takes a callback that is called when the component is in place.\n * \n *   Returns the mounted component instance.\n */\nreagent.dom.render = (function reagent$dom$render(var_args){\nvar G__31999 = arguments.length;\nswitch (G__31999) {\ncase 2:\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(reagent.dom.render.cljs$core$IFn$_invoke$arity$2 = (function (comp,container){\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$3(comp,container,null);\n}));\n\n(reagent.dom.render.cljs$core$IFn$_invoke$arity$3 = (function (comp,container,callback){\nreagent.ratom.flush_BANG_();\n\nvar f = (function (){\nreturn reagent.impl.template.as_element(((cljs.core.fn_QMARK_(comp))?(comp.cljs$core$IFn$_invoke$arity$0 ? comp.cljs$core$IFn$_invoke$arity$0() : comp.call(null)):comp));\n});\nreturn reagent.dom.render_comp(f,container,callback);\n}));\n\n(reagent.dom.render.cljs$lang$maxFixedArity = 3);\n\n/**\n * Remove a component from the given DOM node.\n */\nreagent.dom.unmount_component_at_node = (function reagent$dom$unmount_component_at_node(container){\nreturn reagent.dom.unmount_comp(container);\n});\n/**\n * Returns the root DOM node of a mounted component.\n */\nreagent.dom.dom_node = (function reagent$dom$dom_node(this$){\nreturn shadow.js.shim.module$react_dom.findDOMNode(this$);\n});\n(reagent.impl.template.find_dom_node = reagent.dom.dom_node);\n/**\n * Force re-rendering of all mounted Reagent components. This is\n *   probably only useful in a development environment, when you want to\n *   update components in response to some dynamic changes to code.\n * \n *   Note that force-update-all may not update root components. This\n *   happens if a component 'foo' is mounted with `(render [foo])` (since\n *   functions are passed by value, and not by reference, in\n *   ClojureScript). To get around this you'll have to introduce a layer\n *   of indirection, for example by using `(render [#'foo])` instead.\n */\nreagent.dom.force_update_all = (function reagent$dom$force_update_all(){\nreagent.ratom.flush_BANG_();\n\nvar seq__32005_32018 = cljs.core.seq(cljs.core.vals(cljs.core.deref(reagent.dom.roots)));\nvar chunk__32006_32019 = null;\nvar count__32007_32020 = (0);\nvar i__32008_32021 = (0);\nwhile(true){\nif((i__32008_32021 < count__32007_32020)){\nvar v_32022 = chunk__32006_32019.cljs$core$IIndexed$_nth$arity$2(null,i__32008_32021);\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2(reagent.dom.re_render_component,v_32022);\n\n\nvar G__32023 = seq__32005_32018;\nvar G__32024 = chunk__32006_32019;\nvar G__32025 = count__32007_32020;\nvar G__32026 = (i__32008_32021 + (1));\nseq__32005_32018 = G__32023;\nchunk__32006_32019 = G__32024;\ncount__32007_32020 = G__32025;\ni__32008_32021 = G__32026;\ncontinue;\n} else {\nvar temp__5753__auto___32027 = cljs.core.seq(seq__32005_32018);\nif(temp__5753__auto___32027){\nvar seq__32005_32028__$1 = temp__5753__auto___32027;\nif(cljs.core.chunked_seq_QMARK_(seq__32005_32028__$1)){\nvar c__4638__auto___32029 = cljs.core.chunk_first(seq__32005_32028__$1);\nvar G__32030 = cljs.core.chunk_rest(seq__32005_32028__$1);\nvar G__32031 = c__4638__auto___32029;\nvar G__32032 = cljs.core.count(c__4638__auto___32029);\nvar G__32033 = (0);\nseq__32005_32018 = G__32030;\nchunk__32006_32019 = G__32031;\ncount__32007_32020 = G__32032;\ni__32008_32021 = G__32033;\ncontinue;\n} else {\nvar v_32034 = cljs.core.first(seq__32005_32028__$1);\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2(reagent.dom.re_render_component,v_32034);\n\n\nvar G__32035 = cljs.core.next(seq__32005_32028__$1);\nvar G__32036 = null;\nvar G__32037 = (0);\nvar G__32038 = (0);\nseq__32005_32018 = G__32035;\nchunk__32006_32019 = G__32036;\ncount__32007_32020 = G__32037;\ni__32008_32021 = G__32038;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn reagent.impl.batching.flush_after_render();\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/dom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$shadow.js.shim.module$react","~$react-dom","~$shadow.js.shim.module$react_dom"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$reagent.dom","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^K","~$reagent.ratom","^L","~$cljs.core","^M","~$goog","^N","^A","^A","~$reagent.impl.template","^O","~$reagent.impl.batching","^P","~$util","^K","~$tmpl","^O","~$ratom","^L","~$batch","^P","^@","^A"],"~:seen",["^D",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^M","^M","^L","^L","^S","^L"],"~:form",["~#list",["~$ns","^F",["^Z",["^V",["^@","~:as","^@"],["^K","^10","^Q"],["^O","^10","^R"],["^P","^10","^T"],["^L","^10","^S"]]]]],"~:flags",["^ ","^V",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^N","^M","^A","^K","^O","^P","^L"]],"^H","^F","~:resource-id",["~:shadow.build.classpath/resource","reagent/dom.cljs"],"~:compiled-at",1629284453484,"~:resource-name","reagent/dom.cljs","~:warnings",[],"~:source","(ns reagent.dom\n  (:require [react-dom :as react-dom]\n            [reagent.impl.util :as util]\n            [reagent.impl.template :as tmpl]\n            [reagent.impl.batching :as batch]\n            [reagent.ratom :as ratom]))\n\n(defonce ^:private roots (atom {}))\n\n(defn- unmount-comp [container]\n  (swap! roots dissoc container)\n  (react-dom/unmountComponentAtNode container))\n\n(defn- render-comp [comp container callback]\n  (binding [util/*always-update* true]\n    (react-dom/render (comp) container\n      (fn []\n        (binding [util/*always-update* false]\n          (swap! roots assoc container [comp container])\n          (batch/flush-after-render)\n          (if (some? callback)\n            (callback)))))))\n\n(defn- re-render-component [comp container]\n  (render-comp comp container nil))\n\n(defn render\n  \"Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element.\n  The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance.\"\n  ([comp container]\n   (render comp container nil))\n  ([comp container callback]\n   (ratom/flush!)\n   (let [f (fn []\n             (tmpl/as-element (if (fn? comp) (comp) comp)))]\n     (render-comp f container callback))))\n\n(defn unmount-component-at-node\n  \"Remove a component from the given DOM node.\"\n  [container]\n  (unmount-comp container))\n\n(defn dom-node\n  \"Returns the root DOM node of a mounted component.\"\n  [this]\n  (react-dom/findDOMNode this))\n\n(set! tmpl/find-dom-node dom-node)\n\n(defn force-update-all\n  \"Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead.\"\n  []\n  (ratom/flush!)\n  (doseq [v (vals @roots)]\n    (apply re-render-component v))\n  (batch/flush-after-render))\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";AAOA,GAAA,QAAAA,oCAAAC,wCAAAC;AAAA;AAAA,AAAA,AAAmBC,oBAAM,6CAAA,7CAACC;;AAE1B,2BAAA,3BAAOC,8DAAcC;AAArB,AACE,AAACC,mDAAMJ,kBAAMK,iBAAOF;;AACpB,OAACG,uDAAiCH;;AAEpC,0BAAA,1BAAOI,4DAAaC,KAAKL,UAAUM;AAAnC,AACE,IAAAC,4CAAUE;IAAVD,4CAAA;AAAA,AAAA,+CAAAA,9CAAUC;;AAAV,IAAA,AACE,OAACC,uCAAiB,CAACL,qCAAAA,uCAAAA,iBAAML,UACvB;AAAA,AACE,IAAAW,4CAAUF;IAAVG,4CAAA;AAAA,AAAA,+CAAAA,9CAAUH;;AAAV,IAAA,AACE,+FAAA,/FAACR,mDAAMJ,kBAAMgB,gBAAMb,6FAAWK,KAAKL;;AACnC,AAACc;;AACD,GAAI,GAAA,aAAA,ZAAOR;AACT,QAACA,yCAAAA,2CAAAA;;AADH;;UAHF,AAAA,+CAAAK,9CAAUF;;UAHhB,AAAA,+CAAAF,9CAAUE;;AASZ,kCAAA,lCAAOM,4EAAqBV,KAAKL;AAAjC,AACE,8CAAA,vCAACI,wBAAYC,KAAKL;;AAEpB,AAAA;;;;;;;;;qBAAA,6BAAAgB,lDAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,iDAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,iDAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,mDAAA,nDAAMD,8DAQFb,KAAKL;AART,AASG,uEAAA,hEAACoB,iDAAOf,KAAKL;;;AAThB,CAAA,mDAAA,nDAAMkB,8DAUFb,KAAKL,UAAUM;AAVnB,AAWG,AAACe;;AACD,IAAMC,IAAE;AAAA,AACE,OAACC,iCAAgB,EAAI,AAACC,oBAAInB,OAAM,CAACA,qCAAAA,uCAAAA,iBAAMA;;AADjD,AAEE,OAACD,wBAAYkB,EAAEtB,UAAUM;;;AAd9B,CAAA,6CAAA,7CAAMY;;AAAN,AAgBA;;;wCAAA,xCAAMO,wFAEHzB;AAFH,AAGE,OAACD,yBAAaC;;AAEhB;;;uBAAA,vBAAM0B,sDAEHC;AAFH,AAGE,OAACC,4CAAsBD;;AAEzB,CAAME,sCAAmBH;AAEzB;;;;;;;;;;;+BAAA,/BAAMI;AAAN,AAWE,AAACT;;AACD,IAAAU,mBAAA,AAAAC,cAAU,eAAA,AAAAa,fAACC,+BAAMjD;IAAjBoC,qBAAA;IAAAC,qBAAA;IAAAC,iBAAA;;AAAA,AAAA,GAAA,AAAA,CAAAA,iBAAAD;AAAA,cAAA,AAAAD,wDAAAE,lEAAQS;AAAR,AAAA,AACE,AAACG,8CAAMhC,gCAAoB6B;;AAD7B;AAAA,eAAAb;eAAAE;eAAAC;eAAA,CAAAC,iBAAA;;;;;;;AAAA,IAAAC,2BAAA,AAAAJ,cAAAD;AAAA,AAAA,GAAAK;AAAA,AAAA,IAAAL,uBAAAK;AAAA,AAAA,GAAA,AAAAC,6BAAAN;AAAA,IAAAO,wBAAA,AAAAC,sBAAAR;AAAA,AAAA,eAAA,AAAAS,qBAAAT;eAAAO;eAAA,AAAAG,gBAAAH;eAAA;;;;;;;AAAA,cAAA,AAAAI,gBAAAX,1BAAQa;AAAR,AAAA,AACE,AAACG,8CAAMhC,gCAAoB6B;;AAD7B;AAAA,eAAA,AAAAD,eAAAZ;eAAA;eAAA;eAAA;;;;;;;;AAAA;;;;;AAEA,OAACjB","names",["js/reagent","js/reagent.dom","js/reagent.dom.roots","reagent.dom/roots","cljs.core.atom","reagent.dom/unmount-comp","container","cljs.core.swap_BANG_","cljs.core/dissoc","js/shadow.js.shim.module$react_dom.unmountComponentAtNode","reagent.dom/render-comp","comp","callback","*always-update*-orig-val__31987","*always-update*-temp-val__31988","reagent.impl.util/*always-update*","js/shadow.js.shim.module$react_dom.render","*always-update*-orig-val__31992","*always-update*-temp-val__31993","cljs.core/assoc","reagent.impl.batching/flush-after-render","reagent.dom/re-render-component","var_args","G__31999","reagent.dom/render","js/Error","reagent.dom.render","reagent.ratom/flush!","f","reagent.impl.template/as-element","cljs.core/fn?","reagent.dom/unmount-component-at-node","reagent.dom/dom-node","this","js/shadow.js.shim.module$react_dom.findDOMNode","reagent.impl.template/find-dom-node","reagent.dom/force-update-all","seq__32005","cljs.core/seq","chunk__32006","count__32007","i__32008","temp__5753__auto__","cljs.core/chunked-seq?","c__4638__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","v","cljs.core/deref","cljs.core/vals","cljs.core.apply"]],"~:used-vars",["^D",["~$reagent.impl.template/find-dom-node","~$reagent.dom/unmount-component-at-node","~$js/reagent.dom.roots","~$cljs.core/count","~$cljs.core/deref","~$cljs.core/seq","~$cljs.core/chunk-first","~$cljs.core/apply","~$reagent.ratom/flush!","~$cljs.core/dissoc","~$cljs.core/chunk-rest","~$cljs.core/atom","~$js/reagent","~$reagent.impl.batching/flush-after-render","~$reagent.dom/roots","~$cljs.core/fn?","~$cljs.core/vals","~$cljs.core/swap!","~$reagent.impl.util/*always-update*","~$cljs.core/-nth","~$reagent.dom/unmount-comp","~$reagent.dom/render","~$js/shadow.js.shim.module$react_dom.unmountComponentAtNode","~$js/shadow.js.shim.module$react_dom.render","~$js/reagent.dom","~$cljs.core/next","~$js/shadow.js.shim.module$react_dom.findDOMNode","~$reagent.dom/re-render-component","~$reagent.dom/dom-node","~$cljs.core/not","~$cljs.core/assoc","~$cljs.core/first","~$reagent.dom/force-update-all","~$js/Error","~$reagent.dom/render-comp","~$cljs.core/chunked-seq?","~$reagent.impl.template/as-element"]]],"~:cache-keys",["~#cmap",[["^15","reagent/impl/batching.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^D",[]],"~:deps-syms",["^N","^M","~$reagent.debug","^K"]]],["^15","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","~$goog.dom.HtmlElement"]]],["^15","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","~$goog.array","~$goog.asserts"]]],["^15","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N"]]],["^15","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2B","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^15","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2C","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2F"]]],["^15","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2C"]]],["^15","reagent/impl/util.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^M","~$clojure.string"]]],["^15","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N"]]],["^15","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N"]]],["^15","reagent/ratom.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^M","^K","^2@","^P","~$clojure.set","^2E"]]],["^15","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N"]]],["^15","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N"]]],["^15","reagent/impl/template.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^M","^?","^2M","~$clojure.walk","^K","~$reagent.impl.component","^P","^L","^2@","^2E"]]],["^15","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2C"]]],"~:SHADOW-TIMESTAMP",[1627822722000,1627822722000,1627822708000],["^15","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2C","~$goog.reflect"]]],["^15","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2C","~$goog.fs.blob","^2G","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2I","^2J","^2K","^2L"]]],["^15","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N"]]],["^15","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N"]]],["^15","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2B","^2C","~$goog.html.SafeUrl","^2K","^2L","^2F"]]],["^15","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2C","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^2T","~$goog.html.SafeStyle","^2V","^2H","~$goog.html.uncheckedconversions","^2K","^2F"]]],["^15","reagent/impl/component.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^M","^2E","^?","^K","^P","^L","^2@"]]],["^15","clojure/walk.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^M"]]],["^15","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^15","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2B","^2C","~$goog.dom.TagName","~$goog.dom.tags","^2T","^2Z","~$goog.html.SafeStyleSheet","^2V","^2H","^2U","^2I","^2J","~$goog.labs.userAgent.browser","^2E","^2K","^2L","^2F"]]],["^15","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2E"]]],["^15","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2B"]]],["^15","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^15","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2B","^2C","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^15","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N"]]],["^15","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N"]]],["^15","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",[]]],["^15","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2B","^2E"]]],["^15","clojure/string.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^M","^38","~$goog.string.StringBuffer"]]],["~:shadow.build.js-support/require","react"],["^?","shadow.js.shim.module$react.js","require","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N"]]],["^15","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","~$goog.dom.safe","^2[","^2K","^2F"]]],["^15","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N"]]],["^15","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2F"]]],["^15","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N"]]],["^15","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2B","^2C","^2X","~$goog.math"]]],["^15","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2C","^2Y","^2T","^2Z","^34","^2V","^2H","^2K","^2F","^2I"]]],["^15","reagent/dom.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^M","^A","^K","^O","^P","^L"]]],["^15","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N"]]],["^15","cljs/core.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","~$goog.math.Long","~$goog.math.Integer","^38","^2E","^2B","~$goog.Uri","^3>"]]],["^15","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2K","^2L","^2U","^2C"]]],["^15","reagent/debug.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^M"]]],["^15","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2K","^2Z","^2L","^2B","^2E","^2C","^2F"]]],["^15","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2R"]]],["^3?","react-dom"],["^A","shadow.js.shim.module$react_dom.js","require","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N"]]],["^15","clojure/set.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^M"]]],["^15","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2C","^38"]]],["^15","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2<",["^ ","^2=",null,"^2>",["^D",[]],"^2?",["^N","^2C","^2L"]]]]],"~:clj-info",["^ ","jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1617974188000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1620039399000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes/and_or.cljc",1627822708000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer.cljc",1627822708000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1627822699000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/compiler.cljc",1627822708000,"jar:file:/Users/margoobraztsova/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/ratom.clj",1617974198000,"jar:file:/Users/margoobraztsova/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/interop.clj",1617974198000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1620039399000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/impl.cljc",1627822708000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1627822699000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1627822699000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1620039399000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/js_deps.cljc",1627822708000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1620039399000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64_vlq.clj",1627822708000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map.clj",1627822708000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1620039399000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/externs.clj",1627822708000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64.clj",1627822708000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1620039399000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes.cljc",1627822708000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/core.cljc",1627822708000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1620039399000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1627822699000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1627822699000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/instant.clj",1627822708000,"jar:file:/Users/margoobraztsova/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/debug.clj",1617974198000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/tagged_literals.cljc",1627822708000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/util.cljc",1627822708000,"jar:file:/Users/margoobraztsova/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/env.cljc",1627822708000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/dom.cljs","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"~:shadow/js-access-properties",["^D",["findDOMNode","render","unmountComponentAtNode"]],"^E","^F","^I",null,"^J",["^ ","^K","^K","^L","^L","^M","^M","^N","^N","^A","^A","^O","^O","^P","^P","^Q","^K","^R","^O","^S","^L","^T","^P","^@","^A"],"^U",["^D",["^V"]],"~:shadow/js-access-global",["^D",["Error"]],"^W",null,"~:defs",["^ ","~$roots",["^ ","^5",["^ ","^6","reagent/dom.cljs","^7",8,"^8",20,"^9",8,"^:",25,"~:private",true],"^4>",true,"^E","^1O","^6","reagent/dom.cljs","^:",25,"^8",1,"^7",8,"^9",8,"~:tag","~$cljs.core/Atom"],"~$unmount-comp",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/dom.cljs","^7",10,"^8",8,"^9",10,"^:",20,"^4>",true,"~:arglists",["^Z",["~$quote",["^Z",[["~$container"]]]]]],"^4>",true,"^E","^1U","^6","reagent/dom.cljs","^:",20,"~:method-params",["^Z",[["^4E"]]],"~:protocol-impl",null,"~:arglists-meta",["^Z",[null,null]],"^8",1,"~:variadic?",false,"^7",10,"~:ret-tag","~$js","^9",10,"~:max-fixed-arity",1,"~:fn-var",true,"^4C",["^Z",["^4D",["^Z",[["^4E"]]]]]],"~$render-comp",["^ ","^4B",null,"^5",["^ ","^6","reagent/dom.cljs","^7",14,"^8",8,"^9",14,"^:",19,"^4>",true,"^4C",["^Z",["^4D",["^Z",[["~$comp","^4E","~$callback"]]]]]],"^4>",true,"^E","^27","^6","reagent/dom.cljs","^:",19,"^4F",["^Z",[["^4O","^4E","^4P"]]],"^4G",null,"^4H",["^Z",[null,null]],"^8",1,"^4I",false,"^7",14,"^9",14,"^4L",3,"^4M",true,"^4C",["^Z",["^4D",["^Z",[["^4O","^4E","^4P"]]]]]],"~$re-render-component",["^ ","^4B",null,"^5",["^ ","^6","reagent/dom.cljs","^7",24,"^8",8,"^9",24,"^:",27,"^4>",true,"^4C",["^Z",["^4D",["^Z",[["^4O","^4E"]]]]]],"^4>",true,"^E","^20","^6","reagent/dom.cljs","^:",27,"^4F",["^Z",[["^4O","^4E"]]],"^4G",null,"^4H",["^Z",[null,null]],"^8",1,"^4I",false,"^7",24,"^4J","~$any","^9",24,"^4L",2,"^4M",true,"^4C",["^Z",["^4D",["^Z",[["^4O","^4E"]]]]]],"~$render",["^ ","^4B",null,"^5",["^ ","^6","reagent/dom.cljs","^7",27,"^8",7,"^9",27,"^:",13,"^4C",["^Z",["^4D",["^Z",[["^4O","^4E"],["^4O","^4E","^4P"]]]]],"~:doc","Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element.\n  The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance.","~:top-fn",["^ ","^4I",false,"~:fixed-arity",3,"^4L",3,"^4F",[["^4O","^4E"],["^4O","^4E","^4P"]],"^4C",["^Z",[["^4O","^4E"],["^4O","^4E","^4P"]]],"^4H",["^Z",[null,null]]]],"^E","^1V","^6","reagent/dom.cljs","^:",13,"^4U",["^ ","^4I",false,"^4V",3,"^4L",3,"^4F",[["^4O","^4E"],["^4O","^4E","^4P"]],"^4C",["^Z",[["^4O","^4E"],["^4O","^4E","^4P"]]],"^4H",["^Z",[null,null]]],"^4F",[["^4O","^4E"],["^4O","^4E","^4P"]],"^4G",null,"^4V",3,"^4H",["^Z",[null,null]],"^8",1,"^4I",false,"~:methods",[["^ ","^4V",2,"^4I",false,"^4?","^4R"],["^ ","^4V",3,"^4I",false,"^4?","^4R"]],"^7",27,"^9",27,"^4L",3,"^4M",true,"^4C",["^Z",[["^4O","^4E"],["^4O","^4E","^4P"]]],"^4T","Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element.\n  The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance."],"~$unmount-component-at-node",["^ ","^4B",null,"^5",["^ ","^6","reagent/dom.cljs","^7",43,"^8",7,"^9",43,"^:",32,"^4C",["^Z",["^4D",["^Z",[["^4E"]]]]],"^4T","Remove a component from the given DOM node."],"^E","^1B","^6","reagent/dom.cljs","^:",32,"^4F",["^Z",[["^4E"]]],"^4G",null,"^4H",["^Z",[null,null]],"^8",1,"^4I",false,"^7",43,"^4J","^4K","^9",43,"^4L",1,"^4M",true,"^4C",["^Z",["^4D",["^Z",[["^4E"]]]]],"^4T","Remove a component from the given DOM node."],"~$dom-node",["^ ","^4B",null,"^5",["^ ","^6","reagent/dom.cljs","^7",48,"^8",7,"^9",48,"^:",15,"^4C",["^Z",["^4D",["^Z",[["~$this"]]]]],"^4T","Returns the root DOM node of a mounted component."],"^E","^21","^6","reagent/dom.cljs","^:",15,"^4F",["^Z",[["^4Z"]]],"^4G",null,"^4H",["^Z",[null,null]],"^8",1,"^4I",false,"^7",48,"^4J","^4K","^9",48,"^4L",1,"^4M",true,"^4C",["^Z",["^4D",["^Z",[["^4Z"]]]]],"^4T","Returns the root DOM node of a mounted component."],"~$force-update-all",["^ ","^4B",null,"^5",["^ ","^6","reagent/dom.cljs","^7",55,"^8",7,"^9",55,"^:",23,"^4C",["^Z",["^4D",["^Z",[[]]]]],"^4T","Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead."],"^E","^25","^6","reagent/dom.cljs","^:",23,"^4F",["^Z",[[]]],"^4G",null,"^4H",["^Z",[null,null]],"^8",1,"^4I",false,"^7",55,"^4J","^4R","^9",55,"^4L",0,"^4M",true,"^4C",["^Z",["^4D",["^Z",[[]]]]],"^4T","Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead."]],"^X",["^ ","^M","^M","^L","^L","^S","^L"],"^11",["^ ","^V",["^D",[]]],"^12",["^ "],"^13",["^N","^M","^A","^K","^O","^P","^L"]],"^H","^F","~:ns-specs",["^ "],"~:ns-spec-vars",["^D",[]],"~:compiler-options",["^2;",[["^52","~:static-fns"],true,["^52","~:shadow-tweaks"],null,["^52","~:source-map-inline"],null,["^52","~:elide-asserts"],false,["^52","~:optimize-constants"],null,["^52","^18"],null,["^52","~:external-config"],null,["^52","~:tooling-config"],null,["^52","~:emit-constants"],null,["^52","~:load-tests"],true,["^52","~:form-size-threshold"],null,["^52","~:data-readers"],null,["^52","~:infer-externs"],"~:auto",["^52","^1:"],null,["~:js-options","~:js-provider"],"^V",["~:mode"],"~:dev",["^52","~:fn-invoke-direct"],null,["^52","~:source-map"],"/dev/null"]]]