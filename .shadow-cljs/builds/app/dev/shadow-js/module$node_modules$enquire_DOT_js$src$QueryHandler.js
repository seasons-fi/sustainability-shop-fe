["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/enquire_DOT_js/src/QueryHandler.js"],"~:js","shadow$provide.module$node_modules$enquire_DOT_js$src$QueryHandler=function(global,require,module,exports){function QueryHandler(options){this.options=options;!options.deferSetup&&this.setup()}QueryHandler.prototype={constructor:QueryHandler,setup:function(){this.options.setup&&this.options.setup();this.initialised=!0},on:function(){!this.initialised&&this.setup();this.options.match&&this.options.match()},off:function(){this.options.unmatch&&this.options.unmatch()},destroy:function(){this.options.destroy?\nthis.options.destroy():this.off()},equals:function(target){return this.options===target||this.options.match===target}};module.exports=QueryHandler}","~:source","shadow$provide[\"module$node_modules$enquire_DOT_js$src$QueryHandler\"] = function(global,require,module,exports) {\n/**\n * Delegate to handle a media query being matched and unmatched.\n *\n * @param {object} options\n * @param {function} options.match callback for when the media query is matched\n * @param {function} [options.unmatch] callback for when the media query is unmatched\n * @param {function} [options.setup] one-time callback triggered the first time a query is matched\n * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?\n * @constructor\n */\nfunction QueryHandler(options) {\n    this.options = options;\n    !options.deferSetup && this.setup();\n}\n\nQueryHandler.prototype = {\n\n    constructor : QueryHandler,\n\n    /**\n     * coordinates setup of the handler\n     *\n     * @function\n     */\n    setup : function() {\n        if(this.options.setup) {\n            this.options.setup();\n        }\n        this.initialised = true;\n    },\n\n    /**\n     * coordinates setup and triggering of the handler\n     *\n     * @function\n     */\n    on : function() {\n        !this.initialised && this.setup();\n        this.options.match && this.options.match();\n    },\n\n    /**\n     * coordinates the unmatch event for the handler\n     *\n     * @function\n     */\n    off : function() {\n        this.options.unmatch && this.options.unmatch();\n    },\n\n    /**\n     * called when a handler is to be destroyed.\n     * delegates to the destroy or unmatch callbacks, depending on availability.\n     *\n     * @function\n     */\n    destroy : function() {\n        this.options.destroy ? this.options.destroy() : this.off();\n    },\n\n    /**\n     * determines equality by reference.\n     * if object is supplied compare options, if function, compare match callback\n     *\n     * @function\n     * @param {object || function} [target] the target for comparison\n     */\n    equals : function(target) {\n        return this.options === target || this.options.match === target;\n    }\n\n};\n\nmodule.exports = QueryHandler;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["off","prototype","destroy","setup","on","options","equals","initialised","constructor"]],"~:compiled-at",1627822784996,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$enquire_DOT_js$src$QueryHandler.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,mDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAWhHC,QAASA,aAAY,CAACC,OAAD,CAAU,CAC3B,IAAKA,CAAAA,OAAL,CAAeA,OACf,EAACA,OAAQC,CAAAA,UAAT,EAAuB,IAAKC,CAAAA,KAAL,EAFI,CAK/BH,YAAaI,CAAAA,SAAb,CAAyB,CAErBC,YAAcL,YAFO,CASrBG,MAAQA,QAAQ,EAAG,CACZ,IAAKF,CAAAA,OAAQE,CAAAA,KAAhB,EACI,IAAKF,CAAAA,OAAQE,CAAAA,KAAb,EAEJ,KAAKG,CAAAA,WAAL,CAAmB,CAAA,CAJJ,CATE,CAqBrBC,GAAKA,QAAQ,EAAG,CACZ,CAAC,IAAKD,CAAAA,WAAN,EAAqB,IAAKH,CAAAA,KAAL,EACrB,KAAKF,CAAAA,OAAQO,CAAAA,KAAb,EAAsB,IAAKP,CAAAA,OAAQO,CAAAA,KAAb,EAFV,CArBK,CA+BrBC,IAAMA,QAAQ,EAAG,CACb,IAAKR,CAAAA,OAAQS,CAAAA,OAAb,EAAwB,IAAKT,CAAAA,OAAQS,CAAAA,OAAb,EADX,CA/BI,CAyCrBC,QAAUA,QAAQ,EAAG,CACjB,IAAKV,CAAAA,OAAQU,CAAAA,OAAb;AAAuB,IAAKV,CAAAA,OAAQU,CAAAA,OAAb,EAAvB,CAAgD,IAAKF,CAAAA,GAAL,EAD/B,CAzCA,CAoDrBG,OAASA,QAAQ,CAACC,MAAD,CAAS,CACtB,MAAO,KAAKZ,CAAAA,OAAZ,GAAwBY,MAAxB,EAAkC,IAAKZ,CAAAA,OAAQO,CAAAA,KAA/C,GAAyDK,MADnC,CApDL,CA0DzBf,OAAOC,CAAAA,OAAP,CAAiBC,YA1E+F;\",\n\"sources\":[\"node_modules/enquire_DOT_js/src/QueryHandler.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$enquire_DOT_js$src$QueryHandler\\\"] = function(global,require,module,exports) {\\n/**\\n * Delegate to handle a media query being matched and unmatched.\\n *\\n * @param {object} options\\n * @param {function} options.match callback for when the media query is matched\\n * @param {function} [options.unmatch] callback for when the media query is unmatched\\n * @param {function} [options.setup] one-time callback triggered the first time a query is matched\\n * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?\\n * @constructor\\n */\\nfunction QueryHandler(options) {\\n    this.options = options;\\n    !options.deferSetup && this.setup();\\n}\\n\\nQueryHandler.prototype = {\\n\\n    constructor : QueryHandler,\\n\\n    /**\\n     * coordinates setup of the handler\\n     *\\n     * @function\\n     */\\n    setup : function() {\\n        if(this.options.setup) {\\n            this.options.setup();\\n        }\\n        this.initialised = true;\\n    },\\n\\n    /**\\n     * coordinates setup and triggering of the handler\\n     *\\n     * @function\\n     */\\n    on : function() {\\n        !this.initialised && this.setup();\\n        this.options.match && this.options.match();\\n    },\\n\\n    /**\\n     * coordinates the unmatch event for the handler\\n     *\\n     * @function\\n     */\\n    off : function() {\\n        this.options.unmatch && this.options.unmatch();\\n    },\\n\\n    /**\\n     * called when a handler is to be destroyed.\\n     * delegates to the destroy or unmatch callbacks, depending on availability.\\n     *\\n     * @function\\n     */\\n    destroy : function() {\\n        this.options.destroy ? this.options.destroy() : this.off();\\n    },\\n\\n    /**\\n     * determines equality by reference.\\n     * if object is supplied compare options, if function, compare match callback\\n     *\\n     * @function\\n     * @param {object || function} [target] the target for comparison\\n     */\\n    equals : function(target) {\\n        return this.options === target || this.options.match === target;\\n    }\\n\\n};\\n\\nmodule.exports = QueryHandler;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"QueryHandler\",\"options\",\"deferSetup\",\"setup\",\"prototype\",\"constructor\",\"initialised\",\"on\",\"match\",\"off\",\"unmatch\",\"destroy\",\"equals\",\"target\"]\n}\n"]