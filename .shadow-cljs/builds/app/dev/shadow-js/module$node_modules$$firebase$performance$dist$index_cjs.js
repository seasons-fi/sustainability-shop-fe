["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@firebase/performance/dist/index.cjs.js"],"~:js","shadow$provide.module$node_modules$$firebase$performance$dist$index_cjs=function(global,require,module,exports){function mergeStrings(part1,part2){var sizeDiff=part1.length-part2.length;if(0>sizeDiff||1<sizeDiff)throw ERROR_FACTORY.create(\"invalid String merger input\");sizeDiff=[];for(var i=0;i<part1.length;i++)sizeDiff.push(part1.charAt(i)),part2.length>i&&sizeDiff.push(part2.charAt(i));return sizeDiff.join(\"\")}function getIidPromise(){var iidPromise=SettingsService.getInstance().installationsService.getId();\niidPromise.then(function(iidVal){iid=iidVal});return iidPromise}function getAuthTokenPromise(){var authTokenPromise=SettingsService.getInstance().installationsService.getToken();authTokenPromise.then(function(authTokenVal){});return authTokenPromise}function getVisibilityState(){switch(Api.getInstance().document.visibilityState){case \"visible\":return VisibilityState$jscomp$0.VISIBLE;case \"hidden\":return VisibilityState$jscomp$0.HIDDEN;default:return VisibilityState$jscomp$0.UNKNOWN}}function getEffectiveConnectionType(){var navigatorConnection=\nApi.getInstance().navigator.connection;switch(navigatorConnection&&navigatorConnection.effectiveType){case \"slow-2g\":return 1;case \"2g\":return 2;case \"3g\":return 3;case \"4g\":return 4;default:return 0}}function isValidCustomAttributeName(name){return 0===name.length||40<name.length?!1:!RESERVED_ATTRIBUTE_PREFIXES.some(function(prefix){return name.startsWith(prefix)})&&!!name.match(ATTRIBUTE_FORMAT_REGEX)}function getConfig(iid){var config$jscomp$0=getStoredConfig();return config$jscomp$0?(processConfig(config$jscomp$0),\nPromise.resolve()):getRemoteConfig(iid).then(processConfig).then(function(config){var localStorage=Api.getInstance().localStorage;config&&localStorage&&(localStorage.setItem(\"@firebase/performance/config\",JSON.stringify(config)),localStorage.setItem(\"@firebase/performance/configexpire\",String(Date.now()+36E5*SettingsService.getInstance().configTimeToLive)))},function(){})}function getStoredConfig(){var localStorage=Api.getInstance().localStorage;if(localStorage){var expiryString=localStorage.getItem(\"@firebase/performance/configexpire\");\nif(expiryString&&Number(expiryString)>Date.now()&&(localStorage=localStorage.getItem(\"@firebase/performance/config\")))try{return JSON.parse(localStorage)}catch(_a){}}}function getRemoteConfig(iid){return getAuthTokenPromise().then(function(authToken){var configEndPoint=\"https://firebaseremoteconfig.googleapis.com/v1/projects/\"+SettingsService.getInstance().getProjectId()+\"/namespaces/fireperf:fetch?key\\x3d\"+SettingsService.getInstance().getApiKey();authToken=new Request(configEndPoint,{method:\"POST\",\nheaders:{Authorization:\"FIREBASE_INSTALLATIONS_AUTH \"+authToken},body:JSON.stringify({app_instance_id:iid,app_instance_id_token:authToken,app_id:SettingsService.getInstance().getAppId(),app_version:\"0.4.2\",sdk_version:\"0.0.1\"})});return fetch(authToken).then(function(response){if(response.ok)return response.json();throw ERROR_FACTORY.create(\"RC response not ok\");})}).catch(function(){consoleLogger.info(COULD_NOT_GET_CONFIG_MSG)})}function processConfig(config){if(!config)return config;var settingsServiceInstance=\nSettingsService.getInstance(),entries=config.entries||{};settingsServiceInstance.loggingEnabled=void 0!==entries.fpr_enabled?\"true\"===String(entries.fpr_enabled):DEFAULT_CONFIGS.loggingEnabled;entries.fpr_log_source&&(settingsServiceInstance.logSource=Number(entries.fpr_log_source));entries.fpr_log_endpoint_url&&(settingsServiceInstance.logEndPointUrl=entries.fpr_log_endpoint_url);entries.fpr_log_transport_key&&(settingsServiceInstance.transportKey=entries.fpr_log_transport_key);void 0!==entries.fpr_vc_network_request_sampling_rate&&\n(settingsServiceInstance.networkRequestsSamplingRate=Number(entries.fpr_vc_network_request_sampling_rate));void 0!==entries.fpr_vc_trace_sampling_rate&&(settingsServiceInstance.tracesSamplingRate=Number(entries.fpr_vc_trace_sampling_rate));settingsServiceInstance.logTraceAfterSampling=Math.random()<=settingsServiceInstance.tracesSamplingRate;settingsServiceInstance.logNetworkAfterSampling=Math.random()<=settingsServiceInstance.networkRequestsSamplingRate;return config}function getInitializationPromise(){initializationStatus=\n2;return initializationPromise=initializationPromise||initializePerf()}function initializePerf(){return getDocumentReadyComplete().then(function(){return getIidPromise()}).then(function(iid){return getConfig(iid)}).then(function(){initializationStatus=3},function(){initializationStatus=3})}function getDocumentReadyComplete(){var document=Api.getInstance().document;return new Promise(function(resolve){if(document&&\"complete\"!==document.readyState){var handler_1=function(){\"complete\"===document.readyState&&\n(document.removeEventListener(\"readystatechange\",handler_1),resolve())};document.addEventListener(\"readystatechange\",handler_1)}else resolve()})}function processQueue(timeOffset){setTimeout(function(){if(0!==remainingTries){if(!queue.length)return processQueue(1E4);dispatchQueueEvents()}},timeOffset)}function dispatchQueueEvents(){var staged=tslib.__spreadArrays(queue);queue=[];var log_event=staged.map(function(evt){return{source_extension_json_proto3:evt.message,event_time_ms:String(evt.eventTime)}});\nlog_event={request_time_ms:String(Date.now()),client_info:{client_type:1,js_client_info:{}},log_source:SettingsService.getInstance().logSource,log_event};sendEventsToFl(log_event,staged).catch(function(){queue=tslib.__spreadArrays(staged,queue);remainingTries--;consoleLogger.info(\"Tries left: \"+remainingTries+\".\");processQueue(1E4)})}function sendEventsToFl(data,staged){return postToFlEndpoint(data).then(function(res){res.ok||consoleLogger.info(\"Call to Firebase backend failed.\");return res.json()}).then(function(res){var transportWait=\nNumber(res.nextRequestWaitMillis),requestOffset=1E4;isNaN(transportWait)||(requestOffset=Math.max(transportWait,requestOffset));res=res.logResponseDetails;Array.isArray(res)&&0<res.length&&\"RETRY_REQUEST_LATER\"===res[0].responseAction&&(queue=tslib.__spreadArrays(staged,queue),consoleLogger.info(\"Retry transport request later.\"));remainingTries=3;processQueue(requestOffset)})}function postToFlEndpoint(data){var flTransportFullUrl=SettingsService.getInstance().getFlTransportFullUrl();return fetch(flTransportFullUrl,\n{method:\"POST\",body:JSON.stringify(data)})}function transportHandler(serializer){return function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];args={message:serializer.apply(void 0,args),eventTime:Date.now()};if(!args.eventTime||!args.message)throw ERROR_FACTORY.create(\"invalid cc log\");queue=tslib.__spreadArrays(queue,[args])}}function logTrace(trace){var settingsService=SettingsService.getInstance();(settingsService.instrumentationEnabled||!trace.isAuto)&&(settingsService.dataCollectionEnabled||\ntrace.isAuto)&&Api.getInstance().requiredApisAvailable()&&(trace.isAuto&&getVisibilityState()!==VisibilityState$jscomp$0.VISIBLE||(3===initializationStatus?sendTraceLog(trace):getInitializationPromise().then(function(){return sendTraceLog(trace)},function(){return sendTraceLog(trace)})))}function sendTraceLog(trace){if(iid){var settingsService=SettingsService.getInstance();settingsService.loggingEnabled&&settingsService.logTraceAfterSampling&&setTimeout(function(){logger||(logger=transportHandler(serializer$jscomp$0));\nlogger(trace,1)},0)}}function logNetworkRequest(networkRequest){var settingsService=SettingsService.getInstance();if(settingsService.instrumentationEnabled){var networkRequestUrl=networkRequest.url,logEndpointUrl=settingsService.logEndPointUrl.split(\"?\")[0],flEndpointUrl=settingsService.flTransportEndpointUrl.split(\"?\")[0];networkRequestUrl!==logEndpointUrl&&networkRequestUrl!==flEndpointUrl&&settingsService.loggingEnabled&&settingsService.logNetworkAfterSampling&&setTimeout(function(){logger||(logger=\ntransportHandler(serializer$jscomp$0));logger(networkRequest,0)},0)}}function serializer$jscomp$0(resource,resourceType){if(0===resourceType)return resource={url:resource.url,http_method:resource.httpMethod||0,http_response_code:200,response_payload_bytes:resource.responsePayloadBytes,client_start_time_us:resource.startTimeUs,time_to_response_initiated_us:resource.timeToResponseInitiatedUs,time_to_response_completed_us:resource.timeToResponseCompletedUs},resource={application_info:getApplicationInfo(),\nnetwork_request_metric:resource},JSON.stringify(resource);resourceType={name:resource.name,is_auto:resource.isAuto,client_start_time_us:resource.startTimeUs,duration_us:resource.durationUs};0!==Object.keys(resource.counters).length&&(resourceType.counters=resource.counters);resource=resource.getAttributes();0!==Object.keys(resource).length&&(resourceType.custom_attributes=resource);resource={application_info:getApplicationInfo(),trace_metric:resourceType};return JSON.stringify(resource)}function getApplicationInfo(){var JSCompiler_temp_const=\nSettingsService.getInstance().getAppId(),JSCompiler_temp_const$jscomp$0=iid,JSCompiler_temp_const$jscomp$1=Api.getInstance().getUrl(),navigator=Api.getInstance().navigator;return{google_app_id:JSCompiler_temp_const,app_instance_id:JSCompiler_temp_const$jscomp$0,web_app_info:{sdk_version:\"0.4.2\",page_url:JSCompiler_temp_const$jscomp$1,service_worker_status:\"serviceWorker\"in navigator?navigator.serviceWorker.controller?2:3:1,visibility_state:getVisibilityState(),effective_connection_type:getEffectiveConnectionType()},\napplication_process_state:0}}function createNetworkRequestEntry(entry){if(entry&&void 0!==entry.responseStart){var timeOrigin=Api.getInstance().getTimeOrigin();timeOrigin=Math.floor(1E3*(entry.startTime+timeOrigin));var timeToResponseInitiatedUs=entry.responseStart?Math.floor(1E3*(entry.responseStart-entry.startTime)):void 0,timeToResponseCompletedUs=Math.floor(1E3*(entry.responseEnd-entry.startTime));entry={url:entry.name&&entry.name.split(\"?\")[0],responsePayloadBytes:entry.transferSize,startTimeUs:timeOrigin,\ntimeToResponseInitiatedUs,timeToResponseCompletedUs};logNetworkRequest(entry)}}function setupOobResources(){iid&&(setTimeout(function(){return setupOobTraces()},0),setTimeout(function(){for(var api=Api.getInstance(),_i=0,resources_1=api.getEntriesByType(\"resource\");_i<resources_1.length;_i++)createNetworkRequestEntry(resources_1[_i]);api.setupObserver(\"resource\",createNetworkRequestEntry)},0),setTimeout(function(){for(var api=Api.getInstance(),_i=0,measures_1=api.getEntriesByType(\"measure\");_i<measures_1.length;_i++)createUserTimingTrace(measures_1[_i]);\napi.setupObserver(\"measure\",createUserTimingTrace)},0))}function setupOobTraces(){var api=Api.getInstance(),navigationTimings=api.getEntriesByType(\"navigation\"),paintTimings=api.getEntriesByType(\"paint\");if(api.onFirstInputDelay){var timeoutId_1=setTimeout(function(){Trace.createOobTrace(navigationTimings,paintTimings);timeoutId_1=void 0},5E3);api.onFirstInputDelay(function(fid){timeoutId_1&&(clearTimeout(timeoutId_1),Trace.createOobTrace(navigationTimings,paintTimings,fid))})}else Trace.createOobTrace(navigationTimings,\npaintTimings)}function createUserTimingTrace(measure){measure=measure.name;\"FB-PERF-TRACE-MEASURE\"!==measure.substring(0,21)&&Trace.createUserTimingTrace(measure)}function registerPerformance(instance){instance.INTERNAL.registerComponent(new component.Component(\"performance\",function(container){var app=container.getProvider(\"app\").getImmediate();container=container.getProvider(\"installations\").getImmediate();if(\"[DEFAULT]\"!==app.name)throw ERROR_FACTORY.create(\"FB not default\");if(\"undefined\"===typeof window)throw ERROR_FACTORY.create(\"no window\");\nwindowInstance=window;SettingsService.getInstance().firebaseAppInstance=app;SettingsService.getInstance().installationsService=container;return new PerformanceController(app)},\"PUBLIC\"));instance.registerVersion(\"@firebase/performance\",\"0.4.2\")}Object.defineProperty(exports,\"__esModule\",{value:!0});module=require(\"module$node_modules$$firebase$app$dist$index_cjs\");require(\"module$node_modules$$firebase$installations$dist$index_cjs\");var tslib=require(\"module$node_modules$tslib$tslib\"),util=require(\"module$node_modules$$firebase$util$dist$index_cjs\");\nglobal=require(\"module$node_modules$$firebase$logger$dist$index_cjs\");var component=require(\"module$node_modules$$firebase$component$dist$index_cjs\");require=module&&\"object\"===typeof module&&\"default\"in module?module:{\"default\":module};var _a$jscomp$0;module=(_a$jscomp$0={},_a$jscomp$0[\"trace started\"]=\"Trace {$traceName} was started before.\",_a$jscomp$0[\"trace stopped\"]=\"Trace {$traceName} is not running.\",_a$jscomp$0[\"nonpositive trace startTime\"]=\"Trace {$traceName} startTime should be positive.\",\n_a$jscomp$0[\"nonpositive trace duration\"]=\"Trace {$traceName} duration should be positive.\",_a$jscomp$0[\"no window\"]=\"Window is not available.\",_a$jscomp$0[\"no app id\"]=\"App id is not available.\",_a$jscomp$0[\"no project id\"]=\"Project id is not available.\",_a$jscomp$0[\"no api key\"]=\"Api key is not available.\",_a$jscomp$0[\"invalid cc log\"]=\"Attempted to queue invalid cc event\",_a$jscomp$0[\"FB not default\"]=\"Performance can only start when Firebase app instance is the default one.\",_a$jscomp$0[\"RC response not ok\"]=\n\"RC response is not ok\",_a$jscomp$0[\"invalid attribute name\"]=\"Attribute name {$attributeName} is invalid.\",_a$jscomp$0[\"invalid attribute value\"]=\"Attribute value {$attributeValue} is invalid.\",_a$jscomp$0[\"invalid custom metric name\"]=\"Custom metric name {$customMetricName} is invalid\",_a$jscomp$0[\"invalid String merger input\"]=\"Input for String merger is invalid, contact support team to resolve.\",_a$jscomp$0);var ERROR_FACTORY=new util.ErrorFactory(\"performance\",\"Performance\",module),consoleLogger=\nnew global.Logger(\"Performance\");consoleLogger.logLevel=global.LogLevel.INFO;var apiInstance,windowInstance,Api=function(){function Api(window){this.window=window;if(!window)throw ERROR_FACTORY.create(\"no window\");this.performance=window.performance;this.PerformanceObserver=window.PerformanceObserver;this.windowLocation=window.location;this.navigator=window.navigator;this.document=window.document;this.navigator&&this.navigator.cookieEnabled&&(this.localStorage=window.localStorage);window.perfMetrics&&\nwindow.perfMetrics.onFirstInputDelay&&(this.onFirstInputDelay=window.perfMetrics.onFirstInputDelay)}Api.prototype.getUrl=function(){return this.windowLocation.href.split(\"?\")[0]};Api.prototype.mark=function(name){this.performance&&this.performance.mark&&this.performance.mark(name)};Api.prototype.measure=function(measureName,mark1,mark2){this.performance&&this.performance.measure&&this.performance.measure(measureName,mark1,mark2)};Api.prototype.getEntriesByType=function(type){return this.performance&&\nthis.performance.getEntriesByType?this.performance.getEntriesByType(type):[]};Api.prototype.getEntriesByName=function(name){return this.performance&&this.performance.getEntriesByName?this.performance.getEntriesByName(name):[]};Api.prototype.getTimeOrigin=function(){return this.performance&&(this.performance.timeOrigin||this.performance.timing.navigationStart)};Api.prototype.requiredApisAvailable=function(){return fetch&&Promise&&this.navigator&&this.navigator.cookieEnabled?util.isIndexedDBAvailable()?\n!0:(consoleLogger.info(\"IndexedDB is not supported by current browswer\"),!1):(consoleLogger.info(\"Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.\"),!1)};Api.prototype.setupObserver=function(entryType,callback){this.PerformanceObserver&&(new this.PerformanceObserver(function(list){var _i=0;for(list=list.getEntries();_i<list.length;_i++)callback(list[_i])})).observe({entryTypes:[entryType]})};Api.getInstance=function(){void 0===apiInstance&&(apiInstance=\nnew Api(windowInstance));return apiInstance};return Api}(),settingsServiceInstance,SettingsService=function(){function SettingsService(){this.dataCollectionEnabled=this.instrumentationEnabled=!0;this.loggingEnabled=!1;this.networkRequestsSamplingRate=this.tracesSamplingRate=1;this.logEndPointUrl=\"https://firebaselogging.googleapis.com/v0cc/log?format\\x3djson_proto\";this.flTransportEndpointUrl=mergeStrings(\"hts/frbslgigp.ogepscmv/ieo/eaylg\",\"tp:/ieaeogn-agolai.o/1frlglgc/o\");this.transportKey=mergeStrings(\"AzSC8r6ReiGqFMyfvgow\",\n\"Iayx0u-XT3vksVM-pIV\");this.logSource=462;this.logNetworkAfterSampling=this.logTraceAfterSampling=!1;this.configTimeToLive=12}SettingsService.prototype.getAppId=function(){var appId=this.firebaseAppInstance&&this.firebaseAppInstance.options&&this.firebaseAppInstance.options.appId;if(!appId)throw ERROR_FACTORY.create(\"no app id\");return appId};SettingsService.prototype.getProjectId=function(){var projectId=this.firebaseAppInstance&&this.firebaseAppInstance.options&&this.firebaseAppInstance.options.projectId;\nif(!projectId)throw ERROR_FACTORY.create(\"no project id\");return projectId};SettingsService.prototype.getApiKey=function(){var apiKey=this.firebaseAppInstance&&this.firebaseAppInstance.options&&this.firebaseAppInstance.options.apiKey;if(!apiKey)throw ERROR_FACTORY.create(\"no api key\");return apiKey};SettingsService.prototype.getFlTransportFullUrl=function(){return this.flTransportEndpointUrl.concat(\"?key\\x3d\",this.transportKey)};SettingsService.getInstance=function(){void 0===settingsServiceInstance&&\n(settingsServiceInstance=new SettingsService);return settingsServiceInstance};return SettingsService}(),iid,VisibilityState$jscomp$0;(function(VisibilityState){VisibilityState[VisibilityState.UNKNOWN=0]=\"UNKNOWN\";VisibilityState[VisibilityState.VISIBLE=1]=\"VISIBLE\";VisibilityState[VisibilityState.HIDDEN=2]=\"HIDDEN\"})(VisibilityState$jscomp$0||(VisibilityState$jscomp$0={}));var RESERVED_ATTRIBUTE_PREFIXES=[\"firebase_\",\"google_\",\"ga_\"],ATTRIBUTE_FORMAT_REGEX=/^[a-zA-Z]\\w*$/,DEFAULT_CONFIGS={loggingEnabled:!0},\nCOULD_NOT_GET_CONFIG_MSG=\"Could not fetch config, will use default configs\",initializationStatus=1,initializationPromise,remainingTries=3,queue=[],isTransportSetup=!1,logger,oobMetrics=[\"_fp\",\"_fcp\",\"_fid\"],Trace=function(){function Trace(name,isAuto,traceMeasureName){void 0===isAuto&&(isAuto=!1);this.name=name;this.isAuto=isAuto;this.state=1;this.customAttributes={};this.counters={};this.api=Api.getInstance();this.randomId=Math.floor(1E6*Math.random());this.isAuto||(this.traceStartMark=\"FB-PERF-TRACE-START-\"+\nthis.randomId+\"-\"+this.name,this.traceStopMark=\"FB-PERF-TRACE-STOP-\"+this.randomId+\"-\"+this.name,this.traceMeasure=traceMeasureName||\"FB-PERF-TRACE-MEASURE-\"+this.randomId+\"-\"+this.name,traceMeasureName&&this.calculateTraceMetrics())}Trace.prototype.start=function(){if(1!==this.state)throw ERROR_FACTORY.create(\"trace started\",{traceName:this.name});this.api.mark(this.traceStartMark);this.state=2};Trace.prototype.stop=function(){if(2!==this.state)throw ERROR_FACTORY.create(\"trace stopped\",{traceName:this.name});\nthis.state=3;this.api.mark(this.traceStopMark);this.api.measure(this.traceMeasure,this.traceStartMark,this.traceStopMark);this.calculateTraceMetrics();logTrace(this)};Trace.prototype.record=function(startTime,duration,options){if(0>=startTime)throw ERROR_FACTORY.create(\"nonpositive trace startTime\",{traceName:this.name});if(0>=duration)throw ERROR_FACTORY.create(\"nonpositive trace duration\",{traceName:this.name});this.durationUs=Math.floor(1E3*duration);this.startTimeUs=Math.floor(1E3*startTime);\noptions&&options.attributes&&(this.customAttributes=tslib.__assign({},options.attributes));if(options&&options.metrics)for(startTime=0,duration=Object.keys(options.metrics);startTime<duration.length;startTime++){var metric=duration[startTime];isNaN(Number(options.metrics[metric]))||(this.counters[metric]=Number(Math.floor(options.metrics[metric])))}logTrace(this)};Trace.prototype.incrementMetric=function(counter,numAsInteger){void 0===numAsInteger&&(numAsInteger=1);void 0===this.counters[counter]?\nthis.putMetric(counter,numAsInteger):this.putMetric(counter,this.counters[counter]+numAsInteger)};Trace.prototype.putMetric=function(counter,numAsInteger){var JSCompiler_inline_result=this.name;JSCompiler_inline_result=0===counter.length||100<counter.length?!1:JSCompiler_inline_result&&JSCompiler_inline_result.startsWith(\"_wt_\")&&-1<oobMetrics.indexOf(counter)||!counter.startsWith(\"_\");if(JSCompiler_inline_result){JSCompiler_inline_result=this.counters;var valueAsInteger=Math.floor(numAsInteger);\nvalueAsInteger<numAsInteger&&consoleLogger.info(\"Metric value should be an Integer, setting the value as : \"+valueAsInteger+\".\");JSCompiler_inline_result[counter]=valueAsInteger}else throw ERROR_FACTORY.create(\"invalid custom metric name\",{customMetricName:counter});};Trace.prototype.getMetric=function(counter){return this.counters[counter]||0};Trace.prototype.putAttribute=function(attr,value){var isValidName=isValidCustomAttributeName(attr),isValidValue=0!==value.length&&100>=value.length;if(isValidName&&\nisValidValue)this.customAttributes[attr]=value;else{if(!isValidName)throw ERROR_FACTORY.create(\"invalid attribute name\",{attributeName:attr});if(!isValidValue)throw ERROR_FACTORY.create(\"invalid attribute value\",{attributeValue:value});}};Trace.prototype.getAttribute=function(attr){return this.customAttributes[attr]};Trace.prototype.removeAttribute=function(attr){void 0!==this.customAttributes[attr]&&delete this.customAttributes[attr]};Trace.prototype.getAttributes=function(){return tslib.__assign({},\nthis.customAttributes)};Trace.prototype.setStartTime=function(startTime){this.startTimeUs=startTime};Trace.prototype.setDuration=function(duration){this.durationUs=duration};Trace.prototype.calculateTraceMetrics=function(){var perfMeasureEntries=this.api.getEntriesByName(this.traceMeasure);if(perfMeasureEntries=perfMeasureEntries&&perfMeasureEntries[0])this.durationUs=Math.floor(1E3*perfMeasureEntries.duration),this.startTimeUs=Math.floor(1E3*(perfMeasureEntries.startTime+this.api.getTimeOrigin()))};\nTrace.createOobTrace=function(navigationTimings,paintTimings,firstInputDelay){var route=Api.getInstance().getUrl();if(route){route=new Trace(\"_wt_\"+route,!0);var timeOriginUs=Math.floor(1E3*Api.getInstance().getTimeOrigin());route.setStartTime(timeOriginUs);navigationTimings&&navigationTimings[0]&&(route.setDuration(Math.floor(1E3*navigationTimings[0].duration)),route.putMetric(\"domInteractive\",Math.floor(1E3*navigationTimings[0].domInteractive)),route.putMetric(\"domContentLoadedEventEnd\",Math.floor(1E3*\nnavigationTimings[0].domContentLoadedEventEnd)),route.putMetric(\"loadEventEnd\",Math.floor(1E3*navigationTimings[0].loadEventEnd)));paintTimings&&((navigationTimings=paintTimings.find(function(paintObject){return\"first-paint\"===paintObject.name}))&&navigationTimings.startTime&&route.putMetric(\"_fp\",Math.floor(1E3*navigationTimings.startTime)),(paintTimings=paintTimings.find(function(paintObject){return\"first-contentful-paint\"===paintObject.name}))&&paintTimings.startTime&&route.putMetric(\"_fcp\",Math.floor(1E3*\npaintTimings.startTime)),firstInputDelay&&route.putMetric(\"_fid\",Math.floor(1E3*firstInputDelay)));logTrace(route)}};Trace.createUserTimingTrace=function(measureName){measureName=new Trace(measureName,!1,measureName);logTrace(measureName)};return Trace}(),PerformanceController=function(){function PerformanceController(app){this.app=app;Api.getInstance().requiredApisAvailable()&&util.validateIndexedDBOpenable().then(function(isAvailable){isAvailable&&(isTransportSetup||(processQueue(5500),isTransportSetup=\n!0),getInitializationPromise().then(setupOobResources,setupOobResources))}).catch(function(error){consoleLogger.info(\"Environment doesn't support IndexedDB: \"+error)})}PerformanceController.prototype.trace=function(name){return new Trace(name)};Object.defineProperty(PerformanceController.prototype,\"instrumentationEnabled\",{get:function(){return SettingsService.getInstance().instrumentationEnabled},set:function(val){SettingsService.getInstance().instrumentationEnabled=val},enumerable:!1,configurable:!0});\nObject.defineProperty(PerformanceController.prototype,\"dataCollectionEnabled\",{get:function(){return SettingsService.getInstance().dataCollectionEnabled},set:function(val){SettingsService.getInstance().dataCollectionEnabled=val},enumerable:!1,configurable:!0});return PerformanceController}();registerPerformance(require[\"default\"]);exports.registerPerformance=registerPerformance}","~:source","shadow$provide[\"module$node_modules$$firebase$performance$dist$index_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar firebase = require('@firebase/app');\nrequire('@firebase/installations');\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar logger$1 = require('@firebase/logger');\nvar component = require('@firebase/component');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\n\nvar name = \"@firebase/performance\";\nvar version = \"0.4.2\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SDK_VERSION = version;\r\n/** The prefix for start User Timing marks used for creating Traces. */\r\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\r\n/** The prefix for stop User Timing marks used for creating Traces. */\r\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\r\n/** The prefix for User Timing measure used for creating Traces. */\r\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\r\n/** The prefix for out of the box page load Trace name. */\r\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\r\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\r\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\r\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\r\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\r\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\r\nvar SERVICE = 'performance';\r\nvar SERVICE_NAME = 'Performance';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"trace started\" /* TRACE_STARTED_BEFORE */] = 'Trace {$traceName} was started before.',\r\n    _a[\"trace stopped\" /* TRACE_STOPPED_BEFORE */] = 'Trace {$traceName} is not running.',\r\n    _a[\"nonpositive trace startTime\" /* NONPOSITIVE_TRACE_START_TIME */] = 'Trace {$traceName} startTime should be positive.',\r\n    _a[\"nonpositive trace duration\" /* NONPOSITIVE_TRACE_DURATION */] = 'Trace {$traceName} duration should be positive.',\r\n    _a[\"no window\" /* NO_WINDOW */] = 'Window is not available.',\r\n    _a[\"no app id\" /* NO_APP_ID */] = 'App id is not available.',\r\n    _a[\"no project id\" /* NO_PROJECT_ID */] = 'Project id is not available.',\r\n    _a[\"no api key\" /* NO_API_KEY */] = 'Api key is not available.',\r\n    _a[\"invalid cc log\" /* INVALID_CC_LOG */] = 'Attempted to queue invalid cc event',\r\n    _a[\"FB not default\" /* FB_NOT_DEFAULT */] = 'Performance can only start when Firebase app instance is the default one.',\r\n    _a[\"RC response not ok\" /* RC_NOT_OK */] = 'RC response is not ok',\r\n    _a[\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */] = 'Attribute name {$attributeName} is invalid.',\r\n    _a[\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */] = 'Attribute value {$attributeValue} is invalid.',\r\n    _a[\"invalid custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */] = 'Custom metric name {$customMetricName} is invalid',\r\n    _a[\"invalid String merger input\" /* INVALID_STRING_MERGER_PARAMETER */] = 'Input for String merger is invalid, contact support team to resolve.',\r\n    _a);\r\nvar ERROR_FACTORY = new util.ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar consoleLogger = new logger$1.Logger(SERVICE_NAME);\r\nconsoleLogger.logLevel = logger$1.LogLevel.INFO;\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar apiInstance;\r\nvar windowInstance;\r\n/**\r\n * This class holds a reference to various browser related objects injected by\r\n * set methods.\r\n */\r\nvar Api = /** @class */ (function () {\r\n    function Api(window) {\r\n        this.window = window;\r\n        if (!window) {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        this.performance = window.performance;\r\n        this.PerformanceObserver = window.PerformanceObserver;\r\n        this.windowLocation = window.location;\r\n        this.navigator = window.navigator;\r\n        this.document = window.document;\r\n        if (this.navigator && this.navigator.cookieEnabled) {\r\n            // If user blocks cookies on the browser, accessing localStorage will\r\n            // throw an exception.\r\n            this.localStorage = window.localStorage;\r\n        }\r\n        if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\r\n            this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\r\n        }\r\n    }\r\n    Api.prototype.getUrl = function () {\r\n        // Do not capture the string query part of url.\r\n        return this.windowLocation.href.split('?')[0];\r\n    };\r\n    Api.prototype.mark = function (name) {\r\n        if (!this.performance || !this.performance.mark) {\r\n            return;\r\n        }\r\n        this.performance.mark(name);\r\n    };\r\n    Api.prototype.measure = function (measureName, mark1, mark2) {\r\n        if (!this.performance || !this.performance.measure) {\r\n            return;\r\n        }\r\n        this.performance.measure(measureName, mark1, mark2);\r\n    };\r\n    Api.prototype.getEntriesByType = function (type) {\r\n        if (!this.performance || !this.performance.getEntriesByType) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByType(type);\r\n    };\r\n    Api.prototype.getEntriesByName = function (name) {\r\n        if (!this.performance || !this.performance.getEntriesByName) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByName(name);\r\n    };\r\n    Api.prototype.getTimeOrigin = function () {\r\n        // Polyfill the time origin with performance.timing.navigationStart.\r\n        return (this.performance &&\r\n            (this.performance.timeOrigin || this.performance.timing.navigationStart));\r\n    };\r\n    Api.prototype.requiredApisAvailable = function () {\r\n        if (!fetch ||\r\n            !Promise ||\r\n            !this.navigator ||\r\n            !this.navigator.cookieEnabled) {\r\n            consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\r\n            return false;\r\n        }\r\n        if (!util.isIndexedDBAvailable()) {\r\n            consoleLogger.info('IndexedDB is not supported by current browswer');\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    Api.prototype.setupObserver = function (entryType, callback) {\r\n        if (!this.PerformanceObserver) {\r\n            return;\r\n        }\r\n        var observer = new this.PerformanceObserver(function (list) {\r\n            for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                // `entry` is a PerformanceEntry instance.\r\n                callback(entry);\r\n            }\r\n        });\r\n        // Start observing the entry types you care about.\r\n        observer.observe({ entryTypes: [entryType] });\r\n    };\r\n    Api.getInstance = function () {\r\n        if (apiInstance === undefined) {\r\n            apiInstance = new Api(windowInstance);\r\n        }\r\n        return apiInstance;\r\n    };\r\n    return Api;\r\n}());\r\nfunction setupApi(window) {\r\n    windowInstance = window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction mergeStrings(part1, part2) {\r\n    var sizeDiff = part1.length - part2.length;\r\n    if (sizeDiff < 0 || sizeDiff > 1) {\r\n        throw ERROR_FACTORY.create(\"invalid String merger input\" /* INVALID_STRING_MERGER_PARAMETER */);\r\n    }\r\n    var resultArray = [];\r\n    for (var i = 0; i < part1.length; i++) {\r\n        resultArray.push(part1.charAt(i));\r\n        if (part2.length > i) {\r\n            resultArray.push(part2.charAt(i));\r\n        }\r\n    }\r\n    return resultArray.join('');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar settingsServiceInstance;\r\nvar SettingsService = /** @class */ (function () {\r\n    function SettingsService() {\r\n        // The variable which controls logging of automatic traces and HTTP/S network monitoring.\r\n        this.instrumentationEnabled = true;\r\n        // The variable which controls logging of custom traces.\r\n        this.dataCollectionEnabled = true;\r\n        // Configuration flags set through remote config.\r\n        this.loggingEnabled = false;\r\n        // Sampling rate between 0 and 1.\r\n        this.tracesSamplingRate = 1;\r\n        this.networkRequestsSamplingRate = 1;\r\n        // Address of logging service.\r\n        this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\r\n        // Performance event transport endpoint URL which should be compatible with proto3.\r\n        // New Address for transport service, not configurable via Remote Config.\r\n        this.flTransportEndpointUrl = mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\r\n        this.transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV');\r\n        // Source type for performance event logs.\r\n        this.logSource = 462;\r\n        // Flags which control per session logging of traces and network requests.\r\n        this.logTraceAfterSampling = false;\r\n        this.logNetworkAfterSampling = false;\r\n        // TTL of config retrieved from remote config in hours.\r\n        this.configTimeToLive = 12;\r\n    }\r\n    SettingsService.prototype.getAppId = function () {\r\n        var appId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.appId;\r\n        if (!appId) {\r\n            throw ERROR_FACTORY.create(\"no app id\" /* NO_APP_ID */);\r\n        }\r\n        return appId;\r\n    };\r\n    SettingsService.prototype.getProjectId = function () {\r\n        var projectId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.projectId;\r\n        if (!projectId) {\r\n            throw ERROR_FACTORY.create(\"no project id\" /* NO_PROJECT_ID */);\r\n        }\r\n        return projectId;\r\n    };\r\n    SettingsService.prototype.getApiKey = function () {\r\n        var apiKey = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.apiKey;\r\n        if (!apiKey) {\r\n            throw ERROR_FACTORY.create(\"no api key\" /* NO_API_KEY */);\r\n        }\r\n        return apiKey;\r\n    };\r\n    SettingsService.prototype.getFlTransportFullUrl = function () {\r\n        return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\r\n    };\r\n    SettingsService.getInstance = function () {\r\n        if (settingsServiceInstance === undefined) {\r\n            settingsServiceInstance = new SettingsService();\r\n        }\r\n        return settingsServiceInstance;\r\n    };\r\n    return SettingsService;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar iid;\r\nfunction getIidPromise() {\r\n    var iidPromise = SettingsService.getInstance().installationsService.getId();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    iidPromise.then(function (iidVal) {\r\n        iid = iidVal;\r\n    });\r\n    return iidPromise;\r\n}\r\n// This method should be used after the iid is retrieved by getIidPromise method.\r\nfunction getIid() {\r\n    return iid;\r\n}\r\nfunction getAuthTokenPromise() {\r\n    var authTokenPromise = SettingsService.getInstance().installationsService.getToken();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    authTokenPromise.then(function (authTokenVal) {\r\n    });\r\n    return authTokenPromise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityState;\r\n(function (VisibilityState) {\r\n    VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\r\n    VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\r\n})(VisibilityState || (VisibilityState = {}));\r\nvar RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\r\nvar ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\r\nvar MAX_ATTRIBUTE_NAME_LENGTH = 40;\r\nvar MAX_ATTRIBUTE_VALUE_LENGTH = 100;\r\nfunction getServiceWorkerStatus() {\r\n    var navigator = Api.getInstance().navigator;\r\n    if ('serviceWorker' in navigator) {\r\n        if (navigator.serviceWorker.controller) {\r\n            return 2 /* CONTROLLED */;\r\n        }\r\n        else {\r\n            return 3 /* UNCONTROLLED */;\r\n        }\r\n    }\r\n    else {\r\n        return 1 /* UNSUPPORTED */;\r\n    }\r\n}\r\nfunction getVisibilityState() {\r\n    var document = Api.getInstance().document;\r\n    var visibilityState = document.visibilityState;\r\n    switch (visibilityState) {\r\n        case 'visible':\r\n            return VisibilityState.VISIBLE;\r\n        case 'hidden':\r\n            return VisibilityState.HIDDEN;\r\n        default:\r\n            return VisibilityState.UNKNOWN;\r\n    }\r\n}\r\nfunction getEffectiveConnectionType() {\r\n    var navigator = Api.getInstance().navigator;\r\n    var navigatorConnection = navigator.connection;\r\n    var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\r\n    switch (effectiveType) {\r\n        case 'slow-2g':\r\n            return 1 /* CONNECTION_SLOW_2G */;\r\n        case '2g':\r\n            return 2 /* CONNECTION_2G */;\r\n        case '3g':\r\n            return 3 /* CONNECTION_3G */;\r\n        case '4g':\r\n            return 4 /* CONNECTION_4G */;\r\n        default:\r\n            return 0 /* UNKNOWN */;\r\n    }\r\n}\r\nfunction isValidCustomAttributeName(name) {\r\n    if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    var matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(function (prefix) {\r\n        return name.startsWith(prefix);\r\n    });\r\n    return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\r\n}\r\nfunction isValidCustomAttributeValue(value) {\r\n    return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1';\r\n// These values will be used if the remote config object is successfully\r\n// retrieved, but the template does not have these fields.\r\nvar DEFAULT_CONFIGS = {\r\n    loggingEnabled: true\r\n};\r\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\r\nfunction getConfig(iid) {\r\n    var config = getStoredConfig();\r\n    if (config) {\r\n        processConfig(config);\r\n        return Promise.resolve();\r\n    }\r\n    return getRemoteConfig(iid)\r\n        .then(processConfig)\r\n        .then(function (config) { return storeConfig(config); }, \r\n    /** Do nothing for error, use defaults set in settings service. */\r\n    function () { });\r\n}\r\nfunction getStoredConfig() {\r\n    var localStorage = Api.getInstance().localStorage;\r\n    if (!localStorage) {\r\n        return;\r\n    }\r\n    var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\r\n    if (!expiryString || !configValid(expiryString)) {\r\n        return;\r\n    }\r\n    var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\r\n    if (!configStringified) {\r\n        return;\r\n    }\r\n    try {\r\n        var configResponse = JSON.parse(configStringified);\r\n        return configResponse;\r\n    }\r\n    catch (_a) {\r\n        return;\r\n    }\r\n}\r\nfunction storeConfig(config) {\r\n    var localStorage = Api.getInstance().localStorage;\r\n    if (!config || !localStorage) {\r\n        return;\r\n    }\r\n    localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\r\n    localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() +\r\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\r\n}\r\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\r\nfunction getRemoteConfig(iid) {\r\n    // Perf needs auth token only to retrieve remote config.\r\n    return getAuthTokenPromise()\r\n        .then(function (authToken) {\r\n        var projectId = SettingsService.getInstance().getProjectId();\r\n        var configEndPoint = \"https://firebaseremoteconfig.googleapis.com/v1/projects/\" + projectId + \"/namespaces/fireperf:fetch?key=\" + SettingsService.getInstance().getApiKey();\r\n        var request = new Request(configEndPoint, {\r\n            method: 'POST',\r\n            headers: { Authorization: FIS_AUTH_PREFIX + \" \" + authToken },\r\n            /* eslint-disable camelcase */\r\n            body: JSON.stringify({\r\n                app_instance_id: iid,\r\n                app_instance_id_token: authToken,\r\n                app_id: SettingsService.getInstance().getAppId(),\r\n                app_version: SDK_VERSION,\r\n                sdk_version: REMOTE_CONFIG_SDK_VERSION\r\n            })\r\n            /* eslint-enable camelcase */\r\n        });\r\n        return fetch(request).then(function (response) {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            // In case response is not ok. This will be caught by catch.\r\n            throw ERROR_FACTORY.create(\"RC response not ok\" /* RC_NOT_OK */);\r\n        });\r\n    })\r\n        .catch(function () {\r\n        consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\r\n        return undefined;\r\n    });\r\n}\r\n/**\r\n * Processes config coming either from calling RC or from local storage.\r\n * This method only runs if call is successful or config in storage\r\n * is valid.\r\n */\r\nfunction processConfig(config) {\r\n    if (!config) {\r\n        return config;\r\n    }\r\n    var settingsServiceInstance = SettingsService.getInstance();\r\n    var entries = config.entries || {};\r\n    if (entries.fpr_enabled !== undefined) {\r\n        // TODO: Change the assignment of loggingEnabled once the received type is\r\n        // known.\r\n        settingsServiceInstance.loggingEnabled =\r\n            String(entries.fpr_enabled) === 'true';\r\n    }\r\n    else {\r\n        // Config retrieved successfully, but there is no fpr_enabled in template.\r\n        // Use secondary configs value.\r\n        settingsServiceInstance.loggingEnabled = DEFAULT_CONFIGS.loggingEnabled;\r\n    }\r\n    if (entries.fpr_log_source) {\r\n        settingsServiceInstance.logSource = Number(entries.fpr_log_source);\r\n    }\r\n    if (entries.fpr_log_endpoint_url) {\r\n        settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\r\n    }\r\n    // Key from Remote Config has to be non-empty string, otherwsie use local value.\r\n    if (entries.fpr_log_transport_key) {\r\n        settingsServiceInstance.transportKey = entries.fpr_log_transport_key;\r\n    }\r\n    if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\r\n        settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\r\n    }\r\n    if (entries.fpr_vc_trace_sampling_rate !== undefined) {\r\n        settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\r\n    }\r\n    // Set the per session trace and network logging flags.\r\n    settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\r\n    settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\r\n    return config;\r\n}\r\nfunction configValid(expiry) {\r\n    return Number(expiry) > Date.now();\r\n}\r\nfunction shouldLogAfterSampling(samplingRate) {\r\n    return Math.random() <= samplingRate;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar initializationStatus = 1 /* notInitialized */;\r\nvar initializationPromise;\r\nfunction getInitializationPromise() {\r\n    initializationStatus = 2 /* initializationPending */;\r\n    initializationPromise = initializationPromise || initializePerf();\r\n    return initializationPromise;\r\n}\r\nfunction isPerfInitialized() {\r\n    return initializationStatus === 3 /* initialized */;\r\n}\r\nfunction initializePerf() {\r\n    return getDocumentReadyComplete()\r\n        .then(function () { return getIidPromise(); })\r\n        .then(function (iid) { return getConfig(iid); })\r\n        .then(function () { return changeInitializationStatus(); }, function () { return changeInitializationStatus(); });\r\n}\r\n/**\r\n * Returns a promise which resolves whenever the document readystate is complete or\r\n * immediately if it is called after page load complete.\r\n */\r\nfunction getDocumentReadyComplete() {\r\n    var document = Api.getInstance().document;\r\n    return new Promise(function (resolve) {\r\n        if (document && document.readyState !== 'complete') {\r\n            var handler_1 = function () {\r\n                if (document.readyState === 'complete') {\r\n                    document.removeEventListener('readystatechange', handler_1);\r\n                    resolve();\r\n                }\r\n            };\r\n            document.addEventListener('readystatechange', handler_1);\r\n        }\r\n        else {\r\n            resolve();\r\n        }\r\n    });\r\n}\r\nfunction changeInitializationStatus() {\r\n    initializationStatus = 3 /* initialized */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\r\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\r\n// If end point does not work, the call will be tried for these many times.\r\nvar DEFAULT_REMAINING_TRIES = 3;\r\nvar remainingTries = DEFAULT_REMAINING_TRIES;\r\n/* eslint-enable camelcase */\r\nvar queue = [];\r\nvar isTransportSetup = false;\r\nfunction setupTransportService() {\r\n    if (!isTransportSetup) {\r\n        processQueue(INITIAL_SEND_TIME_DELAY_MS);\r\n        isTransportSetup = true;\r\n    }\r\n}\r\nfunction processQueue(timeOffset) {\r\n    setTimeout(function () {\r\n        // If there is no remainingTries left, stop retrying.\r\n        if (remainingTries === 0) {\r\n            return;\r\n        }\r\n        // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\r\n        if (!queue.length) {\r\n            return processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n        }\r\n        dispatchQueueEvents();\r\n    }, timeOffset);\r\n}\r\nfunction dispatchQueueEvents() {\r\n    // Capture a snapshot of the queue and empty the \"official queue\".\r\n    var staged = tslib.__spreadArrays(queue);\r\n    queue = [];\r\n    /* eslint-disable camelcase */\r\n    // We will pass the JSON serialized event to the backend.\r\n    var log_event = staged.map(function (evt) { return ({\r\n        source_extension_json_proto3: evt.message,\r\n        event_time_ms: String(evt.eventTime)\r\n    }); });\r\n    var data = {\r\n        request_time_ms: String(Date.now()),\r\n        client_info: {\r\n            client_type: 1,\r\n            js_client_info: {}\r\n        },\r\n        log_source: SettingsService.getInstance().logSource,\r\n        log_event: log_event\r\n    };\r\n    /* eslint-enable camelcase */\r\n    sendEventsToFl(data, staged).catch(function () {\r\n        // If the request fails for some reason, add the events that were attempted\r\n        // back to the primary queue to retry later.\r\n        queue = tslib.__spreadArrays(staged, queue);\r\n        remainingTries--;\r\n        consoleLogger.info(\"Tries left: \" + remainingTries + \".\");\r\n        processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n    });\r\n}\r\nfunction sendEventsToFl(data, staged) {\r\n    return postToFlEndpoint(data)\r\n        .then(function (res) {\r\n        if (!res.ok) {\r\n            consoleLogger.info('Call to Firebase backend failed.');\r\n        }\r\n        return res.json();\r\n    })\r\n        .then(function (res) {\r\n        // Find the next call wait time from the response.\r\n        var transportWait = Number(res.nextRequestWaitMillis);\r\n        var requestOffset = DEFAULT_SEND_INTERVAL_MS;\r\n        if (!isNaN(transportWait)) {\r\n            requestOffset = Math.max(transportWait, requestOffset);\r\n        }\r\n        // Delete request if response include RESPONSE_ACTION_UNKNOWN or DELETE_REQUEST action.\r\n        // Otherwise, retry request using normal scheduling if response include RETRY_REQUEST_LATER.\r\n        var logResponseDetails = res.logResponseDetails;\r\n        if (Array.isArray(logResponseDetails) &&\r\n            logResponseDetails.length > 0 &&\r\n            logResponseDetails[0].responseAction === 'RETRY_REQUEST_LATER') {\r\n            queue = tslib.__spreadArrays(staged, queue);\r\n            consoleLogger.info(\"Retry transport request later.\");\r\n        }\r\n        remainingTries = DEFAULT_REMAINING_TRIES;\r\n        // Schedule the next process.\r\n        processQueue(requestOffset);\r\n    });\r\n}\r\nfunction postToFlEndpoint(data) {\r\n    var flTransportFullUrl = SettingsService.getInstance().getFlTransportFullUrl();\r\n    return fetch(flTransportFullUrl, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data)\r\n    });\r\n}\r\nfunction addToQueue(evt) {\r\n    if (!evt.eventTime || !evt.message) {\r\n        throw ERROR_FACTORY.create(\"invalid cc log\" /* INVALID_CC_LOG */);\r\n    }\r\n    // Add the new event to the queue.\r\n    queue = tslib.__spreadArrays(queue, [evt]);\r\n}\r\n/** Log handler for cc service to send the performance logs to the server. */\r\nfunction transportHandler(\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nserializer) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var message = serializer.apply(void 0, args);\r\n        addToQueue({\r\n            message: message,\r\n            eventTime: Date.now()\r\n        });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-enble camelcase */\r\nvar logger;\r\n// This method is not called before initialization.\r\nfunction sendLog(resource, resourceType) {\r\n    if (!logger) {\r\n        logger = transportHandler(serializer);\r\n    }\r\n    logger(resource, resourceType);\r\n}\r\nfunction logTrace(trace) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log if trace is auto generated and instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled && trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if trace is custom and data collection is disabled.\r\n    if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if required apis are not available.\r\n    if (!Api.getInstance().requiredApisAvailable()) {\r\n        return;\r\n    }\r\n    // Only log the page load auto traces if page is visible.\r\n    if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\r\n        return;\r\n    }\r\n    if (isPerfInitialized()) {\r\n        sendTraceLog(trace);\r\n    }\r\n    else {\r\n        // Custom traces can be used before the initialization but logging\r\n        // should wait until after.\r\n        getInitializationPromise().then(function () { return sendTraceLog(trace); }, function () { return sendTraceLog(trace); });\r\n    }\r\n}\r\nfunction sendTraceLog(trace) {\r\n    if (!getIid()) {\r\n        return;\r\n    }\r\n    var settingsService = SettingsService.getInstance();\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logTraceAfterSampling) {\r\n        return;\r\n    }\r\n    setTimeout(function () { return sendLog(trace, 1 /* Trace */); }, 0);\r\n}\r\nfunction logNetworkRequest(networkRequest) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log network requests if instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled) {\r\n        return;\r\n    }\r\n    // Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.\r\n    // Need to blacklist both old and new endpoints to avoid migration gap.\r\n    var networkRequestUrl = networkRequest.url;\r\n    // Blacklist old log endpoint and new transport endpoint.\r\n    // Because Performance SDK doesn't instrument requests sent from SDK itself.\r\n    var logEndpointUrl = settingsService.logEndPointUrl.split('?')[0];\r\n    var flEndpointUrl = settingsService.flTransportEndpointUrl.split('?')[0];\r\n    if (networkRequestUrl === logEndpointUrl ||\r\n        networkRequestUrl === flEndpointUrl) {\r\n        return;\r\n    }\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logNetworkAfterSampling) {\r\n        return;\r\n    }\r\n    setTimeout(function () { return sendLog(networkRequest, 0 /* NetworkRequest */); }, 0);\r\n}\r\nfunction serializer(resource, resourceType) {\r\n    if (resourceType === 0 /* NetworkRequest */) {\r\n        return serializeNetworkRequest(resource);\r\n    }\r\n    return serializeTrace(resource);\r\n}\r\nfunction serializeNetworkRequest(networkRequest) {\r\n    var networkRequestMetric = {\r\n        url: networkRequest.url,\r\n        http_method: networkRequest.httpMethod || 0,\r\n        http_response_code: 200,\r\n        response_payload_bytes: networkRequest.responsePayloadBytes,\r\n        client_start_time_us: networkRequest.startTimeUs,\r\n        time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\r\n        time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\r\n    };\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        network_request_metric: networkRequestMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction serializeTrace(trace) {\r\n    var traceMetric = {\r\n        name: trace.name,\r\n        is_auto: trace.isAuto,\r\n        client_start_time_us: trace.startTimeUs,\r\n        duration_us: trace.durationUs\r\n    };\r\n    if (Object.keys(trace.counters).length !== 0) {\r\n        traceMetric.counters = trace.counters;\r\n    }\r\n    var customAttributes = trace.getAttributes();\r\n    if (Object.keys(customAttributes).length !== 0) {\r\n        traceMetric.custom_attributes = customAttributes;\r\n    }\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        trace_metric: traceMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction getApplicationInfo() {\r\n    return {\r\n        google_app_id: SettingsService.getInstance().getAppId(),\r\n        app_instance_id: getIid(),\r\n        web_app_info: {\r\n            sdk_version: SDK_VERSION,\r\n            page_url: Api.getInstance().getUrl(),\r\n            service_worker_status: getServiceWorkerStatus(),\r\n            visibility_state: getVisibilityState(),\r\n            effective_connection_type: getEffectiveConnectionType()\r\n        },\r\n        application_process_state: 0\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_METRIC_NAME_LENGTH = 100;\r\nvar RESERVED_AUTO_PREFIX = '_';\r\nvar oobMetrics = [\r\n    FIRST_PAINT_COUNTER_NAME,\r\n    FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\r\n    FIRST_INPUT_DELAY_COUNTER_NAME\r\n];\r\n/**\r\n * Returns true if the metric is custom and does not start with reserved prefix, or if\r\n * the metric is one of out of the box page load trace metrics.\r\n */\r\nfunction isValidMetricName(name, traceName) {\r\n    if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    return ((traceName &&\r\n        traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) &&\r\n        oobMetrics.indexOf(name) > -1) ||\r\n        !name.startsWith(RESERVED_AUTO_PREFIX));\r\n}\r\n/**\r\n * Converts the provided value to an integer value to be used in case of a metric.\r\n * @param providedValue Provided number value of the metric that needs to be converted to an integer.\r\n *\r\n * @returns Converted integer number to be set for the metric.\r\n */\r\nfunction convertMetricValueToInteger(providedValue) {\r\n    var valueAsInteger = Math.floor(providedValue);\r\n    if (valueAsInteger < providedValue) {\r\n        consoleLogger.info(\"Metric value should be an Integer, setting the value as : \" + valueAsInteger + \".\");\r\n    }\r\n    return valueAsInteger;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Trace = /** @class */ (function () {\r\n    /**\r\n     * @param name The name of the trace.\r\n     * @param isAuto If the trace is auto-instrumented.\r\n     * @param traceMeasureName The name of the measure marker in user timing specification. This field\r\n     * is only set when the trace is built for logging when the user directly uses the user timing\r\n     * api (performance.mark and performance.measure).\r\n     */\r\n    function Trace(name, isAuto, traceMeasureName) {\r\n        if (isAuto === void 0) { isAuto = false; }\r\n        this.name = name;\r\n        this.isAuto = isAuto;\r\n        this.state = 1 /* UNINITIALIZED */;\r\n        this.customAttributes = {};\r\n        this.counters = {};\r\n        this.api = Api.getInstance();\r\n        this.randomId = Math.floor(Math.random() * 1000000);\r\n        if (!this.isAuto) {\r\n            this.traceStartMark = TRACE_START_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceStopMark = TRACE_STOP_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceMeasure =\r\n                traceMeasureName ||\r\n                    TRACE_MEASURE_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            if (traceMeasureName) {\r\n                // For the case of direct user timing traces, no start stop will happen. The measure object\r\n                // is already available.\r\n                this.calculateTraceMetrics();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Starts a trace. The measurement of the duration starts at this point.\r\n     */\r\n    Trace.prototype.start = function () {\r\n        if (this.state !== 1 /* UNINITIALIZED */) {\r\n            throw ERROR_FACTORY.create(\"trace started\" /* TRACE_STARTED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.api.mark(this.traceStartMark);\r\n        this.state = 2 /* RUNNING */;\r\n    };\r\n    /**\r\n     * Stops the trace. The measurement of the duration of the trace stops at this point and trace\r\n     * is logged.\r\n     */\r\n    Trace.prototype.stop = function () {\r\n        if (this.state !== 2 /* RUNNING */) {\r\n            throw ERROR_FACTORY.create(\"trace stopped\" /* TRACE_STOPPED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.state = 3 /* TERMINATED */;\r\n        this.api.mark(this.traceStopMark);\r\n        this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\r\n        this.calculateTraceMetrics();\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Records a trace with predetermined values. If this method is used a trace is created and logged\r\n     * directly. No need to use start and stop methods.\r\n     * @param startTime Trace start time since epoch in millisec\r\n     * @param duration The duraction of the trace in millisec\r\n     * @param options An object which can optionally hold maps of custom metrics and custom attributes\r\n     */\r\n    Trace.prototype.record = function (startTime, duration, options) {\r\n        if (startTime <= 0) {\r\n            throw ERROR_FACTORY.create(\"nonpositive trace startTime\" /* NONPOSITIVE_TRACE_START_TIME */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        if (duration <= 0) {\r\n            throw ERROR_FACTORY.create(\"nonpositive trace duration\" /* NONPOSITIVE_TRACE_DURATION */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.durationUs = Math.floor(duration * 1000);\r\n        this.startTimeUs = Math.floor(startTime * 1000);\r\n        if (options && options.attributes) {\r\n            this.customAttributes = tslib.__assign({}, options.attributes);\r\n        }\r\n        if (options && options.metrics) {\r\n            for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\r\n                var metric = _a[_i];\r\n                if (!isNaN(Number(options.metrics[metric]))) {\r\n                    this.counters[metric] = Number(Math.floor(options.metrics[metric]));\r\n                }\r\n            }\r\n        }\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\r\n     * custom metric if one with the given name does not exist. The value will be floored down to an\r\n     * integer.\r\n     * @param counter Name of the custom metric\r\n     * @param numAsInteger Increment by value\r\n     */\r\n    Trace.prototype.incrementMetric = function (counter, numAsInteger) {\r\n        if (numAsInteger === void 0) { numAsInteger = 1; }\r\n        if (this.counters[counter] === undefined) {\r\n            this.putMetric(counter, numAsInteger);\r\n        }\r\n        else {\r\n            this.putMetric(counter, this.counters[counter] + numAsInteger);\r\n        }\r\n    };\r\n    /**\r\n     * Sets a custom metric to a specified value. Will create a new custom metric if one with the\r\n     * given name does not exist. The value will be floored down to an integer.\r\n     * @param counter Name of the custom metric\r\n     * @param numAsInteger Set custom metric to this value\r\n     */\r\n    Trace.prototype.putMetric = function (counter, numAsInteger) {\r\n        if (isValidMetricName(counter, this.name)) {\r\n            this.counters[counter] = convertMetricValueToInteger(numAsInteger);\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"invalid custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */, {\r\n                customMetricName: counter\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns the value of the custom metric by that name. If a custom metric with that name does\r\n     * not exist will return zero.\r\n     * @param counter\r\n     */\r\n    Trace.prototype.getMetric = function (counter) {\r\n        return this.counters[counter] || 0;\r\n    };\r\n    /**\r\n     * Sets a custom attribute of a trace to a certain value.\r\n     * @param attr\r\n     * @param value\r\n     */\r\n    Trace.prototype.putAttribute = function (attr, value) {\r\n        var isValidName = isValidCustomAttributeName(attr);\r\n        var isValidValue = isValidCustomAttributeValue(value);\r\n        if (isValidName && isValidValue) {\r\n            this.customAttributes[attr] = value;\r\n            return;\r\n        }\r\n        // Throw appropriate error when the attribute name or value is invalid.\r\n        if (!isValidName) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */, {\r\n                attributeName: attr\r\n            });\r\n        }\r\n        if (!isValidValue) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */, {\r\n                attributeValue: value\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Retrieves the value a custom attribute of a trace is set to.\r\n     * @param attr\r\n     */\r\n    Trace.prototype.getAttribute = function (attr) {\r\n        return this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.removeAttribute = function (attr) {\r\n        if (this.customAttributes[attr] === undefined) {\r\n            return;\r\n        }\r\n        delete this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.getAttributes = function () {\r\n        return tslib.__assign({}, this.customAttributes);\r\n    };\r\n    Trace.prototype.setStartTime = function (startTime) {\r\n        this.startTimeUs = startTime;\r\n    };\r\n    Trace.prototype.setDuration = function (duration) {\r\n        this.durationUs = duration;\r\n    };\r\n    /**\r\n     * Calculates and assigns the duration and start time of the trace using the measure performance\r\n     * entry.\r\n     */\r\n    Trace.prototype.calculateTraceMetrics = function () {\r\n        var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\r\n        var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\r\n        if (perfMeasureEntry) {\r\n            this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\r\n            this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\r\n        }\r\n    };\r\n    /**\r\n     * @param navigationTimings A single element array which contains the navigationTIming object of\r\n     * the page load\r\n     * @param paintTimings A array which contains paintTiming object of the page load\r\n     * @param firstInputDelay First input delay in millisec\r\n     */\r\n    Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\r\n        var route = Api.getInstance().getUrl();\r\n        if (!route) {\r\n            return;\r\n        }\r\n        var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\r\n        var timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\r\n        trace.setStartTime(timeOriginUs);\r\n        // navigationTimings includes only one element.\r\n        if (navigationTimings && navigationTimings[0]) {\r\n            trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\r\n            trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\r\n            trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\r\n            trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\r\n        }\r\n        var FIRST_PAINT = 'first-paint';\r\n        var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\r\n        if (paintTimings) {\r\n            var firstPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_PAINT; });\r\n            if (firstPaint && firstPaint.startTime) {\r\n                trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\r\n            }\r\n            var firstContentfulPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_CONTENTFUL_PAINT; });\r\n            if (firstContentfulPaint && firstContentfulPaint.startTime) {\r\n                trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\r\n            }\r\n            if (firstInputDelay) {\r\n                trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\r\n            }\r\n        }\r\n        logTrace(trace);\r\n    };\r\n    Trace.createUserTimingTrace = function (measureName) {\r\n        var trace = new Trace(measureName, false, measureName);\r\n        logTrace(trace);\r\n    };\r\n    return Trace;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createNetworkRequestEntry(entry) {\r\n    var performanceEntry = entry;\r\n    if (!performanceEntry || performanceEntry.responseStart === undefined) {\r\n        return;\r\n    }\r\n    var timeOrigin = Api.getInstance().getTimeOrigin();\r\n    var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\r\n    var timeToResponseInitiatedUs = performanceEntry.responseStart\r\n        ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000)\r\n        : undefined;\r\n    var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000);\r\n    // Remove the query params from logged network request url.\r\n    var url = performanceEntry.name && performanceEntry.name.split('?')[0];\r\n    var networkRequest = {\r\n        url: url,\r\n        responsePayloadBytes: performanceEntry.transferSize,\r\n        startTimeUs: startTimeUs,\r\n        timeToResponseInitiatedUs: timeToResponseInitiatedUs,\r\n        timeToResponseCompletedUs: timeToResponseCompletedUs\r\n    };\r\n    logNetworkRequest(networkRequest);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FID_WAIT_TIME_MS = 5000;\r\nfunction setupOobResources() {\r\n    // Do not initialize unless iid is available.\r\n    if (!getIid()) {\r\n        return;\r\n    }\r\n    // The load event might not have fired yet, and that means performance navigation timing\r\n    // object has a duration of 0. The setup should run after all current tasks in js queue.\r\n    setTimeout(function () { return setupOobTraces(); }, 0);\r\n    setTimeout(function () { return setupNetworkRequests(); }, 0);\r\n    setTimeout(function () { return setupUserTimingTraces(); }, 0);\r\n}\r\nfunction setupNetworkRequests() {\r\n    var api = Api.getInstance();\r\n    var resources = api.getEntriesByType('resource');\r\n    for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\r\n        var resource = resources_1[_i];\r\n        createNetworkRequestEntry(resource);\r\n    }\r\n    api.setupObserver('resource', createNetworkRequestEntry);\r\n}\r\nfunction setupOobTraces() {\r\n    var api = Api.getInstance();\r\n    var navigationTimings = api.getEntriesByType('navigation');\r\n    var paintTimings = api.getEntriesByType('paint');\r\n    // If First Input Desly polyfill is added to the page, report the fid value.\r\n    // https://github.com/GoogleChromeLabs/first-input-delay\r\n    if (api.onFirstInputDelay) {\r\n        // If the fid call back is not called for certain time, continue without it.\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        var timeoutId_1 = setTimeout(function () {\r\n            Trace.createOobTrace(navigationTimings, paintTimings);\r\n            timeoutId_1 = undefined;\r\n        }, FID_WAIT_TIME_MS);\r\n        api.onFirstInputDelay(function (fid) {\r\n            if (timeoutId_1) {\r\n                clearTimeout(timeoutId_1);\r\n                Trace.createOobTrace(navigationTimings, paintTimings, fid);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        Trace.createOobTrace(navigationTimings, paintTimings);\r\n    }\r\n}\r\nfunction setupUserTimingTraces() {\r\n    var api = Api.getInstance();\r\n    // Run through the measure performance entries collected up to this point.\r\n    var measures = api.getEntriesByType('measure');\r\n    for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\r\n        var measure = measures_1[_i];\r\n        createUserTimingTrace(measure);\r\n    }\r\n    // Setup an observer to capture the measures from this point on.\r\n    api.setupObserver('measure', createUserTimingTrace);\r\n}\r\nfunction createUserTimingTrace(measure) {\r\n    var measureName = measure.name;\r\n    // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\r\n    if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\r\n        TRACE_MEASURE_PREFIX) {\r\n        return;\r\n    }\r\n    Trace.createUserTimingTrace(measureName);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PerformanceController = /** @class */ (function () {\r\n    function PerformanceController(app) {\r\n        this.app = app;\r\n        if (Api.getInstance().requiredApisAvailable()) {\r\n            util.validateIndexedDBOpenable()\r\n                .then(function (isAvailable) {\r\n                if (isAvailable) {\r\n                    setupTransportService();\r\n                    getInitializationPromise().then(setupOobResources, setupOobResources);\r\n                }\r\n            })\r\n                .catch(function (error) {\r\n                consoleLogger.info(\"Environment doesn't support IndexedDB: \" + error);\r\n            });\r\n        }\r\n    }\r\n    PerformanceController.prototype.trace = function (name) {\r\n        return new Trace(name);\r\n    };\r\n    Object.defineProperty(PerformanceController.prototype, \"instrumentationEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().instrumentationEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().instrumentationEnabled = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PerformanceController.prototype, \"dataCollectionEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().dataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().dataCollectionEnabled = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return PerformanceController;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nfunction registerPerformance(instance) {\r\n    var factoryMethod = function (app, installations) {\r\n        if (app.name !== DEFAULT_ENTRY_NAME) {\r\n            throw ERROR_FACTORY.create(\"FB not default\" /* FB_NOT_DEFAULT */);\r\n        }\r\n        if (typeof window === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        setupApi(window);\r\n        SettingsService.getInstance().firebaseAppInstance = app;\r\n        SettingsService.getInstance().installationsService = installations;\r\n        return new PerformanceController(app);\r\n    };\r\n    // Register performance with firebase-app.\r\n    instance.INTERNAL.registerComponent(new component.Component('performance', function (container) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        // The following call will always succeed because perf has `import '@firebase/installations'`\r\n        var installations = container\r\n            .getProvider('installations')\r\n            .getImmediate();\r\n        return factoryMethod(app, installations);\r\n    }, \"PUBLIC\" /* PUBLIC */));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterPerformance(firebase__default['default']);\n\nexports.registerPerformance = registerPerformance;\n//# sourceMappingURL=index.cjs.js.map\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$tslib$tslib","~$shadow.js","~$module$node_modules$$firebase$installations$dist$index_cjs","~$module$node_modules$$firebase$component$dist$index_cjs","~$module$node_modules$$firebase$app$dist$index_cjs","~$module$node_modules$$firebase$util$dist$index_cjs","~$module$node_modules$$firebase$logger$dist$index_cjs"]],"~:properties",["^5",["stop","getProjectId","startTimeUs","window","message","source_extension_json_proto3","createOobTrace","traceMeasure","event_time_ms","time_to_response_initiated_us","incrementMetric","navigator","js_client_info","attributeName","url","flTransportEndpointUrl","app_version","body","getUrl","Authorization","traceStartMark","setDuration","client_type","logLevel","getEntriesByType","tracesSamplingRate","logNetworkAfterSampling","getEntriesByName","network_request_metric","record","customAttributes","installationsService","trace","method","http_method","measure","__esModule","getTimeOrigin","getMetric","putMetric","durationUs","timeToResponseInitiatedUs","client_start_time_us","counters","setStartTime","logTraceAfterSampling","getAttribute","document","firebaseAppInstance","name","configurable","visibility_state","value","entryTypes","service_worker_status","removeAttribute","enumerable","custom_attributes","instrumentationEnabled","web_app_info","getInstance","effective_connection_type","start","networkRequestsSamplingRate","calculateTraceMetrics","createUserTimingTrace","configTimeToLive","log_source","client_info","isAuto","timeToResponseCompletedUs","traceName","requiredApisAvailable","PerformanceObserver","getApiKey","localStorage","app_instance_id_token","onFirstInputDelay","time_to_response_completed_us","responsePayloadBytes","app","api","request_time_ms","state","logEndPointUrl","log_event","is_auto","getAppId","application_process_state","application_info","getFlTransportFullUrl","set","trace_metric","google_app_id","transportKey","traceStopMark","registerPerformance","performance","app_id","app_instance_id","page_url","mark","windowLocation","logSource","get","attributeValue","setupObserver","http_response_code","eventTime","getAttributes","dataCollectionEnabled","customMetricName","sdk_version","duration_us","putAttribute","loggingEnabled","randomId","headers","response_payload_bytes"]],"~:compiled-at",1627829695421,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$firebase$performance$dist$index_cjs.js\",\n\"lineCount\":47,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@firebase/performance/dist/index.cjs.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$firebase$performance$dist$index_cjs\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nObject.defineProperty(exports, '__esModule', { value: true });\\n\\nvar firebase = require('@firebase/app');\\nrequire('@firebase/installations');\\nvar tslib = require('tslib');\\nvar util = require('@firebase/util');\\nvar logger$1 = require('@firebase/logger');\\nvar component = require('@firebase/component');\\n\\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\\n\\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\\n\\nvar name = \\\"@firebase/performance\\\";\\nvar version = \\\"0.4.2\\\";\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar SDK_VERSION = version;\\r\\n/** The prefix for start User Timing marks used for creating Traces. */\\r\\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\\r\\n/** The prefix for stop User Timing marks used for creating Traces. */\\r\\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\\r\\n/** The prefix for User Timing measure used for creating Traces. */\\r\\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\\r\\n/** The prefix for out of the box page load Trace name. */\\r\\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\\r\\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\\r\\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\\r\\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\\r\\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\\r\\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\\r\\nvar SERVICE = 'performance';\\r\\nvar SERVICE_NAME = 'Performance';\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar _a;\\r\\nvar ERROR_DESCRIPTION_MAP = (_a = {},\\r\\n    _a[\\\"trace started\\\" /* TRACE_STARTED_BEFORE */] = 'Trace {$traceName} was started before.',\\r\\n    _a[\\\"trace stopped\\\" /* TRACE_STOPPED_BEFORE */] = 'Trace {$traceName} is not running.',\\r\\n    _a[\\\"nonpositive trace startTime\\\" /* NONPOSITIVE_TRACE_START_TIME */] = 'Trace {$traceName} startTime should be positive.',\\r\\n    _a[\\\"nonpositive trace duration\\\" /* NONPOSITIVE_TRACE_DURATION */] = 'Trace {$traceName} duration should be positive.',\\r\\n    _a[\\\"no window\\\" /* NO_WINDOW */] = 'Window is not available.',\\r\\n    _a[\\\"no app id\\\" /* NO_APP_ID */] = 'App id is not available.',\\r\\n    _a[\\\"no project id\\\" /* NO_PROJECT_ID */] = 'Project id is not available.',\\r\\n    _a[\\\"no api key\\\" /* NO_API_KEY */] = 'Api key is not available.',\\r\\n    _a[\\\"invalid cc log\\\" /* INVALID_CC_LOG */] = 'Attempted to queue invalid cc event',\\r\\n    _a[\\\"FB not default\\\" /* FB_NOT_DEFAULT */] = 'Performance can only start when Firebase app instance is the default one.',\\r\\n    _a[\\\"RC response not ok\\\" /* RC_NOT_OK */] = 'RC response is not ok',\\r\\n    _a[\\\"invalid attribute name\\\" /* INVALID_ATTRIBUTE_NAME */] = 'Attribute name {$attributeName} is invalid.',\\r\\n    _a[\\\"invalid attribute value\\\" /* INVALID_ATTRIBUTE_VALUE */] = 'Attribute value {$attributeValue} is invalid.',\\r\\n    _a[\\\"invalid custom metric name\\\" /* INVALID_CUSTOM_METRIC_NAME */] = 'Custom metric name {$customMetricName} is invalid',\\r\\n    _a[\\\"invalid String merger input\\\" /* INVALID_STRING_MERGER_PARAMETER */] = 'Input for String merger is invalid, contact support team to resolve.',\\r\\n    _a);\\r\\nvar ERROR_FACTORY = new util.ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar consoleLogger = new logger$1.Logger(SERVICE_NAME);\\r\\nconsoleLogger.logLevel = logger$1.LogLevel.INFO;\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar apiInstance;\\r\\nvar windowInstance;\\r\\n/**\\r\\n * This class holds a reference to various browser related objects injected by\\r\\n * set methods.\\r\\n */\\r\\nvar Api = /** @class */ (function () {\\r\\n    function Api(window) {\\r\\n        this.window = window;\\r\\n        if (!window) {\\r\\n            throw ERROR_FACTORY.create(\\\"no window\\\" /* NO_WINDOW */);\\r\\n        }\\r\\n        this.performance = window.performance;\\r\\n        this.PerformanceObserver = window.PerformanceObserver;\\r\\n        this.windowLocation = window.location;\\r\\n        this.navigator = window.navigator;\\r\\n        this.document = window.document;\\r\\n        if (this.navigator && this.navigator.cookieEnabled) {\\r\\n            // If user blocks cookies on the browser, accessing localStorage will\\r\\n            // throw an exception.\\r\\n            this.localStorage = window.localStorage;\\r\\n        }\\r\\n        if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\\r\\n            this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\\r\\n        }\\r\\n    }\\r\\n    Api.prototype.getUrl = function () {\\r\\n        // Do not capture the string query part of url.\\r\\n        return this.windowLocation.href.split('?')[0];\\r\\n    };\\r\\n    Api.prototype.mark = function (name) {\\r\\n        if (!this.performance || !this.performance.mark) {\\r\\n            return;\\r\\n        }\\r\\n        this.performance.mark(name);\\r\\n    };\\r\\n    Api.prototype.measure = function (measureName, mark1, mark2) {\\r\\n        if (!this.performance || !this.performance.measure) {\\r\\n            return;\\r\\n        }\\r\\n        this.performance.measure(measureName, mark1, mark2);\\r\\n    };\\r\\n    Api.prototype.getEntriesByType = function (type) {\\r\\n        if (!this.performance || !this.performance.getEntriesByType) {\\r\\n            return [];\\r\\n        }\\r\\n        return this.performance.getEntriesByType(type);\\r\\n    };\\r\\n    Api.prototype.getEntriesByName = function (name) {\\r\\n        if (!this.performance || !this.performance.getEntriesByName) {\\r\\n            return [];\\r\\n        }\\r\\n        return this.performance.getEntriesByName(name);\\r\\n    };\\r\\n    Api.prototype.getTimeOrigin = function () {\\r\\n        // Polyfill the time origin with performance.timing.navigationStart.\\r\\n        return (this.performance &&\\r\\n            (this.performance.timeOrigin || this.performance.timing.navigationStart));\\r\\n    };\\r\\n    Api.prototype.requiredApisAvailable = function () {\\r\\n        if (!fetch ||\\r\\n            !Promise ||\\r\\n            !this.navigator ||\\r\\n            !this.navigator.cookieEnabled) {\\r\\n            consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\\r\\n            return false;\\r\\n        }\\r\\n        if (!util.isIndexedDBAvailable()) {\\r\\n            consoleLogger.info('IndexedDB is not supported by current browswer');\\r\\n            return false;\\r\\n        }\\r\\n        return true;\\r\\n    };\\r\\n    Api.prototype.setupObserver = function (entryType, callback) {\\r\\n        if (!this.PerformanceObserver) {\\r\\n            return;\\r\\n        }\\r\\n        var observer = new this.PerformanceObserver(function (list) {\\r\\n            for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\\r\\n                var entry = _a[_i];\\r\\n                // `entry` is a PerformanceEntry instance.\\r\\n                callback(entry);\\r\\n            }\\r\\n        });\\r\\n        // Start observing the entry types you care about.\\r\\n        observer.observe({ entryTypes: [entryType] });\\r\\n    };\\r\\n    Api.getInstance = function () {\\r\\n        if (apiInstance === undefined) {\\r\\n            apiInstance = new Api(windowInstance);\\r\\n        }\\r\\n        return apiInstance;\\r\\n    };\\r\\n    return Api;\\r\\n}());\\r\\nfunction setupApi(window) {\\r\\n    windowInstance = window;\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nfunction mergeStrings(part1, part2) {\\r\\n    var sizeDiff = part1.length - part2.length;\\r\\n    if (sizeDiff < 0 || sizeDiff > 1) {\\r\\n        throw ERROR_FACTORY.create(\\\"invalid String merger input\\\" /* INVALID_STRING_MERGER_PARAMETER */);\\r\\n    }\\r\\n    var resultArray = [];\\r\\n    for (var i = 0; i < part1.length; i++) {\\r\\n        resultArray.push(part1.charAt(i));\\r\\n        if (part2.length > i) {\\r\\n            resultArray.push(part2.charAt(i));\\r\\n        }\\r\\n    }\\r\\n    return resultArray.join('');\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar settingsServiceInstance;\\r\\nvar SettingsService = /** @class */ (function () {\\r\\n    function SettingsService() {\\r\\n        // The variable which controls logging of automatic traces and HTTP/S network monitoring.\\r\\n        this.instrumentationEnabled = true;\\r\\n        // The variable which controls logging of custom traces.\\r\\n        this.dataCollectionEnabled = true;\\r\\n        // Configuration flags set through remote config.\\r\\n        this.loggingEnabled = false;\\r\\n        // Sampling rate between 0 and 1.\\r\\n        this.tracesSamplingRate = 1;\\r\\n        this.networkRequestsSamplingRate = 1;\\r\\n        // Address of logging service.\\r\\n        this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\\r\\n        // Performance event transport endpoint URL which should be compatible with proto3.\\r\\n        // New Address for transport service, not configurable via Remote Config.\\r\\n        this.flTransportEndpointUrl = mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\\r\\n        this.transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV');\\r\\n        // Source type for performance event logs.\\r\\n        this.logSource = 462;\\r\\n        // Flags which control per session logging of traces and network requests.\\r\\n        this.logTraceAfterSampling = false;\\r\\n        this.logNetworkAfterSampling = false;\\r\\n        // TTL of config retrieved from remote config in hours.\\r\\n        this.configTimeToLive = 12;\\r\\n    }\\r\\n    SettingsService.prototype.getAppId = function () {\\r\\n        var appId = this.firebaseAppInstance &&\\r\\n            this.firebaseAppInstance.options &&\\r\\n            this.firebaseAppInstance.options.appId;\\r\\n        if (!appId) {\\r\\n            throw ERROR_FACTORY.create(\\\"no app id\\\" /* NO_APP_ID */);\\r\\n        }\\r\\n        return appId;\\r\\n    };\\r\\n    SettingsService.prototype.getProjectId = function () {\\r\\n        var projectId = this.firebaseAppInstance &&\\r\\n            this.firebaseAppInstance.options &&\\r\\n            this.firebaseAppInstance.options.projectId;\\r\\n        if (!projectId) {\\r\\n            throw ERROR_FACTORY.create(\\\"no project id\\\" /* NO_PROJECT_ID */);\\r\\n        }\\r\\n        return projectId;\\r\\n    };\\r\\n    SettingsService.prototype.getApiKey = function () {\\r\\n        var apiKey = this.firebaseAppInstance &&\\r\\n            this.firebaseAppInstance.options &&\\r\\n            this.firebaseAppInstance.options.apiKey;\\r\\n        if (!apiKey) {\\r\\n            throw ERROR_FACTORY.create(\\\"no api key\\\" /* NO_API_KEY */);\\r\\n        }\\r\\n        return apiKey;\\r\\n    };\\r\\n    SettingsService.prototype.getFlTransportFullUrl = function () {\\r\\n        return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\\r\\n    };\\r\\n    SettingsService.getInstance = function () {\\r\\n        if (settingsServiceInstance === undefined) {\\r\\n            settingsServiceInstance = new SettingsService();\\r\\n        }\\r\\n        return settingsServiceInstance;\\r\\n    };\\r\\n    return SettingsService;\\r\\n}());\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar iid;\\r\\nfunction getIidPromise() {\\r\\n    var iidPromise = SettingsService.getInstance().installationsService.getId();\\r\\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\\r\\n    iidPromise.then(function (iidVal) {\\r\\n        iid = iidVal;\\r\\n    });\\r\\n    return iidPromise;\\r\\n}\\r\\n// This method should be used after the iid is retrieved by getIidPromise method.\\r\\nfunction getIid() {\\r\\n    return iid;\\r\\n}\\r\\nfunction getAuthTokenPromise() {\\r\\n    var authTokenPromise = SettingsService.getInstance().installationsService.getToken();\\r\\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\\r\\n    authTokenPromise.then(function (authTokenVal) {\\r\\n    });\\r\\n    return authTokenPromise;\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar VisibilityState;\\r\\n(function (VisibilityState) {\\r\\n    VisibilityState[VisibilityState[\\\"UNKNOWN\\\"] = 0] = \\\"UNKNOWN\\\";\\r\\n    VisibilityState[VisibilityState[\\\"VISIBLE\\\"] = 1] = \\\"VISIBLE\\\";\\r\\n    VisibilityState[VisibilityState[\\\"HIDDEN\\\"] = 2] = \\\"HIDDEN\\\";\\r\\n})(VisibilityState || (VisibilityState = {}));\\r\\nvar RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\\r\\nvar ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\\\\\w*$');\\r\\nvar MAX_ATTRIBUTE_NAME_LENGTH = 40;\\r\\nvar MAX_ATTRIBUTE_VALUE_LENGTH = 100;\\r\\nfunction getServiceWorkerStatus() {\\r\\n    var navigator = Api.getInstance().navigator;\\r\\n    if ('serviceWorker' in navigator) {\\r\\n        if (navigator.serviceWorker.controller) {\\r\\n            return 2 /* CONTROLLED */;\\r\\n        }\\r\\n        else {\\r\\n            return 3 /* UNCONTROLLED */;\\r\\n        }\\r\\n    }\\r\\n    else {\\r\\n        return 1 /* UNSUPPORTED */;\\r\\n    }\\r\\n}\\r\\nfunction getVisibilityState() {\\r\\n    var document = Api.getInstance().document;\\r\\n    var visibilityState = document.visibilityState;\\r\\n    switch (visibilityState) {\\r\\n        case 'visible':\\r\\n            return VisibilityState.VISIBLE;\\r\\n        case 'hidden':\\r\\n            return VisibilityState.HIDDEN;\\r\\n        default:\\r\\n            return VisibilityState.UNKNOWN;\\r\\n    }\\r\\n}\\r\\nfunction getEffectiveConnectionType() {\\r\\n    var navigator = Api.getInstance().navigator;\\r\\n    var navigatorConnection = navigator.connection;\\r\\n    var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\\r\\n    switch (effectiveType) {\\r\\n        case 'slow-2g':\\r\\n            return 1 /* CONNECTION_SLOW_2G */;\\r\\n        case '2g':\\r\\n            return 2 /* CONNECTION_2G */;\\r\\n        case '3g':\\r\\n            return 3 /* CONNECTION_3G */;\\r\\n        case '4g':\\r\\n            return 4 /* CONNECTION_4G */;\\r\\n        default:\\r\\n            return 0 /* UNKNOWN */;\\r\\n    }\\r\\n}\\r\\nfunction isValidCustomAttributeName(name) {\\r\\n    if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\\r\\n        return false;\\r\\n    }\\r\\n    var matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(function (prefix) {\\r\\n        return name.startsWith(prefix);\\r\\n    });\\r\\n    return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\\r\\n}\\r\\nfunction isValidCustomAttributeValue(value) {\\r\\n    return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1';\\r\\n// These values will be used if the remote config object is successfully\\r\\n// retrieved, but the template does not have these fields.\\r\\nvar DEFAULT_CONFIGS = {\\r\\n    loggingEnabled: true\\r\\n};\\r\\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\\r\\nfunction getConfig(iid) {\\r\\n    var config = getStoredConfig();\\r\\n    if (config) {\\r\\n        processConfig(config);\\r\\n        return Promise.resolve();\\r\\n    }\\r\\n    return getRemoteConfig(iid)\\r\\n        .then(processConfig)\\r\\n        .then(function (config) { return storeConfig(config); }, \\r\\n    /** Do nothing for error, use defaults set in settings service. */\\r\\n    function () { });\\r\\n}\\r\\nfunction getStoredConfig() {\\r\\n    var localStorage = Api.getInstance().localStorage;\\r\\n    if (!localStorage) {\\r\\n        return;\\r\\n    }\\r\\n    var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\\r\\n    if (!expiryString || !configValid(expiryString)) {\\r\\n        return;\\r\\n    }\\r\\n    var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\\r\\n    if (!configStringified) {\\r\\n        return;\\r\\n    }\\r\\n    try {\\r\\n        var configResponse = JSON.parse(configStringified);\\r\\n        return configResponse;\\r\\n    }\\r\\n    catch (_a) {\\r\\n        return;\\r\\n    }\\r\\n}\\r\\nfunction storeConfig(config) {\\r\\n    var localStorage = Api.getInstance().localStorage;\\r\\n    if (!config || !localStorage) {\\r\\n        return;\\r\\n    }\\r\\n    localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\\r\\n    localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() +\\r\\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\\r\\n}\\r\\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\\r\\nfunction getRemoteConfig(iid) {\\r\\n    // Perf needs auth token only to retrieve remote config.\\r\\n    return getAuthTokenPromise()\\r\\n        .then(function (authToken) {\\r\\n        var projectId = SettingsService.getInstance().getProjectId();\\r\\n        var configEndPoint = \\\"https://firebaseremoteconfig.googleapis.com/v1/projects/\\\" + projectId + \\\"/namespaces/fireperf:fetch?key=\\\" + SettingsService.getInstance().getApiKey();\\r\\n        var request = new Request(configEndPoint, {\\r\\n            method: 'POST',\\r\\n            headers: { Authorization: FIS_AUTH_PREFIX + \\\" \\\" + authToken },\\r\\n            /* eslint-disable camelcase */\\r\\n            body: JSON.stringify({\\r\\n                app_instance_id: iid,\\r\\n                app_instance_id_token: authToken,\\r\\n                app_id: SettingsService.getInstance().getAppId(),\\r\\n                app_version: SDK_VERSION,\\r\\n                sdk_version: REMOTE_CONFIG_SDK_VERSION\\r\\n            })\\r\\n            /* eslint-enable camelcase */\\r\\n        });\\r\\n        return fetch(request).then(function (response) {\\r\\n            if (response.ok) {\\r\\n                return response.json();\\r\\n            }\\r\\n            // In case response is not ok. This will be caught by catch.\\r\\n            throw ERROR_FACTORY.create(\\\"RC response not ok\\\" /* RC_NOT_OK */);\\r\\n        });\\r\\n    })\\r\\n        .catch(function () {\\r\\n        consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\\r\\n        return undefined;\\r\\n    });\\r\\n}\\r\\n/**\\r\\n * Processes config coming either from calling RC or from local storage.\\r\\n * This method only runs if call is successful or config in storage\\r\\n * is valid.\\r\\n */\\r\\nfunction processConfig(config) {\\r\\n    if (!config) {\\r\\n        return config;\\r\\n    }\\r\\n    var settingsServiceInstance = SettingsService.getInstance();\\r\\n    var entries = config.entries || {};\\r\\n    if (entries.fpr_enabled !== undefined) {\\r\\n        // TODO: Change the assignment of loggingEnabled once the received type is\\r\\n        // known.\\r\\n        settingsServiceInstance.loggingEnabled =\\r\\n            String(entries.fpr_enabled) === 'true';\\r\\n    }\\r\\n    else {\\r\\n        // Config retrieved successfully, but there is no fpr_enabled in template.\\r\\n        // Use secondary configs value.\\r\\n        settingsServiceInstance.loggingEnabled = DEFAULT_CONFIGS.loggingEnabled;\\r\\n    }\\r\\n    if (entries.fpr_log_source) {\\r\\n        settingsServiceInstance.logSource = Number(entries.fpr_log_source);\\r\\n    }\\r\\n    if (entries.fpr_log_endpoint_url) {\\r\\n        settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\\r\\n    }\\r\\n    // Key from Remote Config has to be non-empty string, otherwsie use local value.\\r\\n    if (entries.fpr_log_transport_key) {\\r\\n        settingsServiceInstance.transportKey = entries.fpr_log_transport_key;\\r\\n    }\\r\\n    if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\\r\\n        settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\\r\\n    }\\r\\n    if (entries.fpr_vc_trace_sampling_rate !== undefined) {\\r\\n        settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\\r\\n    }\\r\\n    // Set the per session trace and network logging flags.\\r\\n    settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\\r\\n    settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\\r\\n    return config;\\r\\n}\\r\\nfunction configValid(expiry) {\\r\\n    return Number(expiry) > Date.now();\\r\\n}\\r\\nfunction shouldLogAfterSampling(samplingRate) {\\r\\n    return Math.random() <= samplingRate;\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar initializationStatus = 1 /* notInitialized */;\\r\\nvar initializationPromise;\\r\\nfunction getInitializationPromise() {\\r\\n    initializationStatus = 2 /* initializationPending */;\\r\\n    initializationPromise = initializationPromise || initializePerf();\\r\\n    return initializationPromise;\\r\\n}\\r\\nfunction isPerfInitialized() {\\r\\n    return initializationStatus === 3 /* initialized */;\\r\\n}\\r\\nfunction initializePerf() {\\r\\n    return getDocumentReadyComplete()\\r\\n        .then(function () { return getIidPromise(); })\\r\\n        .then(function (iid) { return getConfig(iid); })\\r\\n        .then(function () { return changeInitializationStatus(); }, function () { return changeInitializationStatus(); });\\r\\n}\\r\\n/**\\r\\n * Returns a promise which resolves whenever the document readystate is complete or\\r\\n * immediately if it is called after page load complete.\\r\\n */\\r\\nfunction getDocumentReadyComplete() {\\r\\n    var document = Api.getInstance().document;\\r\\n    return new Promise(function (resolve) {\\r\\n        if (document && document.readyState !== 'complete') {\\r\\n            var handler_1 = function () {\\r\\n                if (document.readyState === 'complete') {\\r\\n                    document.removeEventListener('readystatechange', handler_1);\\r\\n                    resolve();\\r\\n                }\\r\\n            };\\r\\n            document.addEventListener('readystatechange', handler_1);\\r\\n        }\\r\\n        else {\\r\\n            resolve();\\r\\n        }\\r\\n    });\\r\\n}\\r\\nfunction changeInitializationStatus() {\\r\\n    initializationStatus = 3 /* initialized */;\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\\r\\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\\r\\n// If end point does not work, the call will be tried for these many times.\\r\\nvar DEFAULT_REMAINING_TRIES = 3;\\r\\nvar remainingTries = DEFAULT_REMAINING_TRIES;\\r\\n/* eslint-enable camelcase */\\r\\nvar queue = [];\\r\\nvar isTransportSetup = false;\\r\\nfunction setupTransportService() {\\r\\n    if (!isTransportSetup) {\\r\\n        processQueue(INITIAL_SEND_TIME_DELAY_MS);\\r\\n        isTransportSetup = true;\\r\\n    }\\r\\n}\\r\\nfunction processQueue(timeOffset) {\\r\\n    setTimeout(function () {\\r\\n        // If there is no remainingTries left, stop retrying.\\r\\n        if (remainingTries === 0) {\\r\\n            return;\\r\\n        }\\r\\n        // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\\r\\n        if (!queue.length) {\\r\\n            return processQueue(DEFAULT_SEND_INTERVAL_MS);\\r\\n        }\\r\\n        dispatchQueueEvents();\\r\\n    }, timeOffset);\\r\\n}\\r\\nfunction dispatchQueueEvents() {\\r\\n    // Capture a snapshot of the queue and empty the \\\"official queue\\\".\\r\\n    var staged = tslib.__spreadArrays(queue);\\r\\n    queue = [];\\r\\n    /* eslint-disable camelcase */\\r\\n    // We will pass the JSON serialized event to the backend.\\r\\n    var log_event = staged.map(function (evt) { return ({\\r\\n        source_extension_json_proto3: evt.message,\\r\\n        event_time_ms: String(evt.eventTime)\\r\\n    }); });\\r\\n    var data = {\\r\\n        request_time_ms: String(Date.now()),\\r\\n        client_info: {\\r\\n            client_type: 1,\\r\\n            js_client_info: {}\\r\\n        },\\r\\n        log_source: SettingsService.getInstance().logSource,\\r\\n        log_event: log_event\\r\\n    };\\r\\n    /* eslint-enable camelcase */\\r\\n    sendEventsToFl(data, staged).catch(function () {\\r\\n        // If the request fails for some reason, add the events that were attempted\\r\\n        // back to the primary queue to retry later.\\r\\n        queue = tslib.__spreadArrays(staged, queue);\\r\\n        remainingTries--;\\r\\n        consoleLogger.info(\\\"Tries left: \\\" + remainingTries + \\\".\\\");\\r\\n        processQueue(DEFAULT_SEND_INTERVAL_MS);\\r\\n    });\\r\\n}\\r\\nfunction sendEventsToFl(data, staged) {\\r\\n    return postToFlEndpoint(data)\\r\\n        .then(function (res) {\\r\\n        if (!res.ok) {\\r\\n            consoleLogger.info('Call to Firebase backend failed.');\\r\\n        }\\r\\n        return res.json();\\r\\n    })\\r\\n        .then(function (res) {\\r\\n        // Find the next call wait time from the response.\\r\\n        var transportWait = Number(res.nextRequestWaitMillis);\\r\\n        var requestOffset = DEFAULT_SEND_INTERVAL_MS;\\r\\n        if (!isNaN(transportWait)) {\\r\\n            requestOffset = Math.max(transportWait, requestOffset);\\r\\n        }\\r\\n        // Delete request if response include RESPONSE_ACTION_UNKNOWN or DELETE_REQUEST action.\\r\\n        // Otherwise, retry request using normal scheduling if response include RETRY_REQUEST_LATER.\\r\\n        var logResponseDetails = res.logResponseDetails;\\r\\n        if (Array.isArray(logResponseDetails) &&\\r\\n            logResponseDetails.length > 0 &&\\r\\n            logResponseDetails[0].responseAction === 'RETRY_REQUEST_LATER') {\\r\\n            queue = tslib.__spreadArrays(staged, queue);\\r\\n            consoleLogger.info(\\\"Retry transport request later.\\\");\\r\\n        }\\r\\n        remainingTries = DEFAULT_REMAINING_TRIES;\\r\\n        // Schedule the next process.\\r\\n        processQueue(requestOffset);\\r\\n    });\\r\\n}\\r\\nfunction postToFlEndpoint(data) {\\r\\n    var flTransportFullUrl = SettingsService.getInstance().getFlTransportFullUrl();\\r\\n    return fetch(flTransportFullUrl, {\\r\\n        method: 'POST',\\r\\n        body: JSON.stringify(data)\\r\\n    });\\r\\n}\\r\\nfunction addToQueue(evt) {\\r\\n    if (!evt.eventTime || !evt.message) {\\r\\n        throw ERROR_FACTORY.create(\\\"invalid cc log\\\" /* INVALID_CC_LOG */);\\r\\n    }\\r\\n    // Add the new event to the queue.\\r\\n    queue = tslib.__spreadArrays(queue, [evt]);\\r\\n}\\r\\n/** Log handler for cc service to send the performance logs to the server. */\\r\\nfunction transportHandler(\\r\\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\\r\\nserializer) {\\r\\n    return function () {\\r\\n        var args = [];\\r\\n        for (var _i = 0; _i < arguments.length; _i++) {\\r\\n            args[_i] = arguments[_i];\\r\\n        }\\r\\n        var message = serializer.apply(void 0, args);\\r\\n        addToQueue({\\r\\n            message: message,\\r\\n            eventTime: Date.now()\\r\\n        });\\r\\n    };\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/* eslint-enble camelcase */\\r\\nvar logger;\\r\\n// This method is not called before initialization.\\r\\nfunction sendLog(resource, resourceType) {\\r\\n    if (!logger) {\\r\\n        logger = transportHandler(serializer);\\r\\n    }\\r\\n    logger(resource, resourceType);\\r\\n}\\r\\nfunction logTrace(trace) {\\r\\n    var settingsService = SettingsService.getInstance();\\r\\n    // Do not log if trace is auto generated and instrumentation is disabled.\\r\\n    if (!settingsService.instrumentationEnabled && trace.isAuto) {\\r\\n        return;\\r\\n    }\\r\\n    // Do not log if trace is custom and data collection is disabled.\\r\\n    if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\\r\\n        return;\\r\\n    }\\r\\n    // Do not log if required apis are not available.\\r\\n    if (!Api.getInstance().requiredApisAvailable()) {\\r\\n        return;\\r\\n    }\\r\\n    // Only log the page load auto traces if page is visible.\\r\\n    if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\\r\\n        return;\\r\\n    }\\r\\n    if (isPerfInitialized()) {\\r\\n        sendTraceLog(trace);\\r\\n    }\\r\\n    else {\\r\\n        // Custom traces can be used before the initialization but logging\\r\\n        // should wait until after.\\r\\n        getInitializationPromise().then(function () { return sendTraceLog(trace); }, function () { return sendTraceLog(trace); });\\r\\n    }\\r\\n}\\r\\nfunction sendTraceLog(trace) {\\r\\n    if (!getIid()) {\\r\\n        return;\\r\\n    }\\r\\n    var settingsService = SettingsService.getInstance();\\r\\n    if (!settingsService.loggingEnabled ||\\r\\n        !settingsService.logTraceAfterSampling) {\\r\\n        return;\\r\\n    }\\r\\n    setTimeout(function () { return sendLog(trace, 1 /* Trace */); }, 0);\\r\\n}\\r\\nfunction logNetworkRequest(networkRequest) {\\r\\n    var settingsService = SettingsService.getInstance();\\r\\n    // Do not log network requests if instrumentation is disabled.\\r\\n    if (!settingsService.instrumentationEnabled) {\\r\\n        return;\\r\\n    }\\r\\n    // Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.\\r\\n    // Need to blacklist both old and new endpoints to avoid migration gap.\\r\\n    var networkRequestUrl = networkRequest.url;\\r\\n    // Blacklist old log endpoint and new transport endpoint.\\r\\n    // Because Performance SDK doesn't instrument requests sent from SDK itself.\\r\\n    var logEndpointUrl = settingsService.logEndPointUrl.split('?')[0];\\r\\n    var flEndpointUrl = settingsService.flTransportEndpointUrl.split('?')[0];\\r\\n    if (networkRequestUrl === logEndpointUrl ||\\r\\n        networkRequestUrl === flEndpointUrl) {\\r\\n        return;\\r\\n    }\\r\\n    if (!settingsService.loggingEnabled ||\\r\\n        !settingsService.logNetworkAfterSampling) {\\r\\n        return;\\r\\n    }\\r\\n    setTimeout(function () { return sendLog(networkRequest, 0 /* NetworkRequest */); }, 0);\\r\\n}\\r\\nfunction serializer(resource, resourceType) {\\r\\n    if (resourceType === 0 /* NetworkRequest */) {\\r\\n        return serializeNetworkRequest(resource);\\r\\n    }\\r\\n    return serializeTrace(resource);\\r\\n}\\r\\nfunction serializeNetworkRequest(networkRequest) {\\r\\n    var networkRequestMetric = {\\r\\n        url: networkRequest.url,\\r\\n        http_method: networkRequest.httpMethod || 0,\\r\\n        http_response_code: 200,\\r\\n        response_payload_bytes: networkRequest.responsePayloadBytes,\\r\\n        client_start_time_us: networkRequest.startTimeUs,\\r\\n        time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\\r\\n        time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\\r\\n    };\\r\\n    var perfMetric = {\\r\\n        application_info: getApplicationInfo(),\\r\\n        network_request_metric: networkRequestMetric\\r\\n    };\\r\\n    return JSON.stringify(perfMetric);\\r\\n}\\r\\nfunction serializeTrace(trace) {\\r\\n    var traceMetric = {\\r\\n        name: trace.name,\\r\\n        is_auto: trace.isAuto,\\r\\n        client_start_time_us: trace.startTimeUs,\\r\\n        duration_us: trace.durationUs\\r\\n    };\\r\\n    if (Object.keys(trace.counters).length !== 0) {\\r\\n        traceMetric.counters = trace.counters;\\r\\n    }\\r\\n    var customAttributes = trace.getAttributes();\\r\\n    if (Object.keys(customAttributes).length !== 0) {\\r\\n        traceMetric.custom_attributes = customAttributes;\\r\\n    }\\r\\n    var perfMetric = {\\r\\n        application_info: getApplicationInfo(),\\r\\n        trace_metric: traceMetric\\r\\n    };\\r\\n    return JSON.stringify(perfMetric);\\r\\n}\\r\\nfunction getApplicationInfo() {\\r\\n    return {\\r\\n        google_app_id: SettingsService.getInstance().getAppId(),\\r\\n        app_instance_id: getIid(),\\r\\n        web_app_info: {\\r\\n            sdk_version: SDK_VERSION,\\r\\n            page_url: Api.getInstance().getUrl(),\\r\\n            service_worker_status: getServiceWorkerStatus(),\\r\\n            visibility_state: getVisibilityState(),\\r\\n            effective_connection_type: getEffectiveConnectionType()\\r\\n        },\\r\\n        application_process_state: 0\\r\\n    };\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar MAX_METRIC_NAME_LENGTH = 100;\\r\\nvar RESERVED_AUTO_PREFIX = '_';\\r\\nvar oobMetrics = [\\r\\n    FIRST_PAINT_COUNTER_NAME,\\r\\n    FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\\r\\n    FIRST_INPUT_DELAY_COUNTER_NAME\\r\\n];\\r\\n/**\\r\\n * Returns true if the metric is custom and does not start with reserved prefix, or if\\r\\n * the metric is one of out of the box page load trace metrics.\\r\\n */\\r\\nfunction isValidMetricName(name, traceName) {\\r\\n    if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\\r\\n        return false;\\r\\n    }\\r\\n    return ((traceName &&\\r\\n        traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) &&\\r\\n        oobMetrics.indexOf(name) > -1) ||\\r\\n        !name.startsWith(RESERVED_AUTO_PREFIX));\\r\\n}\\r\\n/**\\r\\n * Converts the provided value to an integer value to be used in case of a metric.\\r\\n * @param providedValue Provided number value of the metric that needs to be converted to an integer.\\r\\n *\\r\\n * @returns Converted integer number to be set for the metric.\\r\\n */\\r\\nfunction convertMetricValueToInteger(providedValue) {\\r\\n    var valueAsInteger = Math.floor(providedValue);\\r\\n    if (valueAsInteger < providedValue) {\\r\\n        consoleLogger.info(\\\"Metric value should be an Integer, setting the value as : \\\" + valueAsInteger + \\\".\\\");\\r\\n    }\\r\\n    return valueAsInteger;\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar Trace = /** @class */ (function () {\\r\\n    /**\\r\\n     * @param name The name of the trace.\\r\\n     * @param isAuto If the trace is auto-instrumented.\\r\\n     * @param traceMeasureName The name of the measure marker in user timing specification. This field\\r\\n     * is only set when the trace is built for logging when the user directly uses the user timing\\r\\n     * api (performance.mark and performance.measure).\\r\\n     */\\r\\n    function Trace(name, isAuto, traceMeasureName) {\\r\\n        if (isAuto === void 0) { isAuto = false; }\\r\\n        this.name = name;\\r\\n        this.isAuto = isAuto;\\r\\n        this.state = 1 /* UNINITIALIZED */;\\r\\n        this.customAttributes = {};\\r\\n        this.counters = {};\\r\\n        this.api = Api.getInstance();\\r\\n        this.randomId = Math.floor(Math.random() * 1000000);\\r\\n        if (!this.isAuto) {\\r\\n            this.traceStartMark = TRACE_START_MARK_PREFIX + \\\"-\\\" + this.randomId + \\\"-\\\" + this.name;\\r\\n            this.traceStopMark = TRACE_STOP_MARK_PREFIX + \\\"-\\\" + this.randomId + \\\"-\\\" + this.name;\\r\\n            this.traceMeasure =\\r\\n                traceMeasureName ||\\r\\n                    TRACE_MEASURE_PREFIX + \\\"-\\\" + this.randomId + \\\"-\\\" + this.name;\\r\\n            if (traceMeasureName) {\\r\\n                // For the case of direct user timing traces, no start stop will happen. The measure object\\r\\n                // is already available.\\r\\n                this.calculateTraceMetrics();\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    /**\\r\\n     * Starts a trace. The measurement of the duration starts at this point.\\r\\n     */\\r\\n    Trace.prototype.start = function () {\\r\\n        if (this.state !== 1 /* UNINITIALIZED */) {\\r\\n            throw ERROR_FACTORY.create(\\\"trace started\\\" /* TRACE_STARTED_BEFORE */, {\\r\\n                traceName: this.name\\r\\n            });\\r\\n        }\\r\\n        this.api.mark(this.traceStartMark);\\r\\n        this.state = 2 /* RUNNING */;\\r\\n    };\\r\\n    /**\\r\\n     * Stops the trace. The measurement of the duration of the trace stops at this point and trace\\r\\n     * is logged.\\r\\n     */\\r\\n    Trace.prototype.stop = function () {\\r\\n        if (this.state !== 2 /* RUNNING */) {\\r\\n            throw ERROR_FACTORY.create(\\\"trace stopped\\\" /* TRACE_STOPPED_BEFORE */, {\\r\\n                traceName: this.name\\r\\n            });\\r\\n        }\\r\\n        this.state = 3 /* TERMINATED */;\\r\\n        this.api.mark(this.traceStopMark);\\r\\n        this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\\r\\n        this.calculateTraceMetrics();\\r\\n        logTrace(this);\\r\\n    };\\r\\n    /**\\r\\n     * Records a trace with predetermined values. If this method is used a trace is created and logged\\r\\n     * directly. No need to use start and stop methods.\\r\\n     * @param startTime Trace start time since epoch in millisec\\r\\n     * @param duration The duraction of the trace in millisec\\r\\n     * @param options An object which can optionally hold maps of custom metrics and custom attributes\\r\\n     */\\r\\n    Trace.prototype.record = function (startTime, duration, options) {\\r\\n        if (startTime <= 0) {\\r\\n            throw ERROR_FACTORY.create(\\\"nonpositive trace startTime\\\" /* NONPOSITIVE_TRACE_START_TIME */, {\\r\\n                traceName: this.name\\r\\n            });\\r\\n        }\\r\\n        if (duration <= 0) {\\r\\n            throw ERROR_FACTORY.create(\\\"nonpositive trace duration\\\" /* NONPOSITIVE_TRACE_DURATION */, {\\r\\n                traceName: this.name\\r\\n            });\\r\\n        }\\r\\n        this.durationUs = Math.floor(duration * 1000);\\r\\n        this.startTimeUs = Math.floor(startTime * 1000);\\r\\n        if (options && options.attributes) {\\r\\n            this.customAttributes = tslib.__assign({}, options.attributes);\\r\\n        }\\r\\n        if (options && options.metrics) {\\r\\n            for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\\r\\n                var metric = _a[_i];\\r\\n                if (!isNaN(Number(options.metrics[metric]))) {\\r\\n                    this.counters[metric] = Number(Math.floor(options.metrics[metric]));\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        logTrace(this);\\r\\n    };\\r\\n    /**\\r\\n     * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\\r\\n     * custom metric if one with the given name does not exist. The value will be floored down to an\\r\\n     * integer.\\r\\n     * @param counter Name of the custom metric\\r\\n     * @param numAsInteger Increment by value\\r\\n     */\\r\\n    Trace.prototype.incrementMetric = function (counter, numAsInteger) {\\r\\n        if (numAsInteger === void 0) { numAsInteger = 1; }\\r\\n        if (this.counters[counter] === undefined) {\\r\\n            this.putMetric(counter, numAsInteger);\\r\\n        }\\r\\n        else {\\r\\n            this.putMetric(counter, this.counters[counter] + numAsInteger);\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * Sets a custom metric to a specified value. Will create a new custom metric if one with the\\r\\n     * given name does not exist. The value will be floored down to an integer.\\r\\n     * @param counter Name of the custom metric\\r\\n     * @param numAsInteger Set custom metric to this value\\r\\n     */\\r\\n    Trace.prototype.putMetric = function (counter, numAsInteger) {\\r\\n        if (isValidMetricName(counter, this.name)) {\\r\\n            this.counters[counter] = convertMetricValueToInteger(numAsInteger);\\r\\n        }\\r\\n        else {\\r\\n            throw ERROR_FACTORY.create(\\\"invalid custom metric name\\\" /* INVALID_CUSTOM_METRIC_NAME */, {\\r\\n                customMetricName: counter\\r\\n            });\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * Returns the value of the custom metric by that name. If a custom metric with that name does\\r\\n     * not exist will return zero.\\r\\n     * @param counter\\r\\n     */\\r\\n    Trace.prototype.getMetric = function (counter) {\\r\\n        return this.counters[counter] || 0;\\r\\n    };\\r\\n    /**\\r\\n     * Sets a custom attribute of a trace to a certain value.\\r\\n     * @param attr\\r\\n     * @param value\\r\\n     */\\r\\n    Trace.prototype.putAttribute = function (attr, value) {\\r\\n        var isValidName = isValidCustomAttributeName(attr);\\r\\n        var isValidValue = isValidCustomAttributeValue(value);\\r\\n        if (isValidName && isValidValue) {\\r\\n            this.customAttributes[attr] = value;\\r\\n            return;\\r\\n        }\\r\\n        // Throw appropriate error when the attribute name or value is invalid.\\r\\n        if (!isValidName) {\\r\\n            throw ERROR_FACTORY.create(\\\"invalid attribute name\\\" /* INVALID_ATTRIBUTE_NAME */, {\\r\\n                attributeName: attr\\r\\n            });\\r\\n        }\\r\\n        if (!isValidValue) {\\r\\n            throw ERROR_FACTORY.create(\\\"invalid attribute value\\\" /* INVALID_ATTRIBUTE_VALUE */, {\\r\\n                attributeValue: value\\r\\n            });\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * Retrieves the value a custom attribute of a trace is set to.\\r\\n     * @param attr\\r\\n     */\\r\\n    Trace.prototype.getAttribute = function (attr) {\\r\\n        return this.customAttributes[attr];\\r\\n    };\\r\\n    Trace.prototype.removeAttribute = function (attr) {\\r\\n        if (this.customAttributes[attr] === undefined) {\\r\\n            return;\\r\\n        }\\r\\n        delete this.customAttributes[attr];\\r\\n    };\\r\\n    Trace.prototype.getAttributes = function () {\\r\\n        return tslib.__assign({}, this.customAttributes);\\r\\n    };\\r\\n    Trace.prototype.setStartTime = function (startTime) {\\r\\n        this.startTimeUs = startTime;\\r\\n    };\\r\\n    Trace.prototype.setDuration = function (duration) {\\r\\n        this.durationUs = duration;\\r\\n    };\\r\\n    /**\\r\\n     * Calculates and assigns the duration and start time of the trace using the measure performance\\r\\n     * entry.\\r\\n     */\\r\\n    Trace.prototype.calculateTraceMetrics = function () {\\r\\n        var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\\r\\n        var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\\r\\n        if (perfMeasureEntry) {\\r\\n            this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\\r\\n            this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * @param navigationTimings A single element array which contains the navigationTIming object of\\r\\n     * the page load\\r\\n     * @param paintTimings A array which contains paintTiming object of the page load\\r\\n     * @param firstInputDelay First input delay in millisec\\r\\n     */\\r\\n    Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\\r\\n        var route = Api.getInstance().getUrl();\\r\\n        if (!route) {\\r\\n            return;\\r\\n        }\\r\\n        var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\\r\\n        var timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\\r\\n        trace.setStartTime(timeOriginUs);\\r\\n        // navigationTimings includes only one element.\\r\\n        if (navigationTimings && navigationTimings[0]) {\\r\\n            trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\\r\\n            trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\\r\\n            trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\\r\\n            trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\\r\\n        }\\r\\n        var FIRST_PAINT = 'first-paint';\\r\\n        var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\\r\\n        if (paintTimings) {\\r\\n            var firstPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_PAINT; });\\r\\n            if (firstPaint && firstPaint.startTime) {\\r\\n                trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\\r\\n            }\\r\\n            var firstContentfulPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_CONTENTFUL_PAINT; });\\r\\n            if (firstContentfulPaint && firstContentfulPaint.startTime) {\\r\\n                trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\\r\\n            }\\r\\n            if (firstInputDelay) {\\r\\n                trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\\r\\n            }\\r\\n        }\\r\\n        logTrace(trace);\\r\\n    };\\r\\n    Trace.createUserTimingTrace = function (measureName) {\\r\\n        var trace = new Trace(measureName, false, measureName);\\r\\n        logTrace(trace);\\r\\n    };\\r\\n    return Trace;\\r\\n}());\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nfunction createNetworkRequestEntry(entry) {\\r\\n    var performanceEntry = entry;\\r\\n    if (!performanceEntry || performanceEntry.responseStart === undefined) {\\r\\n        return;\\r\\n    }\\r\\n    var timeOrigin = Api.getInstance().getTimeOrigin();\\r\\n    var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\\r\\n    var timeToResponseInitiatedUs = performanceEntry.responseStart\\r\\n        ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000)\\r\\n        : undefined;\\r\\n    var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000);\\r\\n    // Remove the query params from logged network request url.\\r\\n    var url = performanceEntry.name && performanceEntry.name.split('?')[0];\\r\\n    var networkRequest = {\\r\\n        url: url,\\r\\n        responsePayloadBytes: performanceEntry.transferSize,\\r\\n        startTimeUs: startTimeUs,\\r\\n        timeToResponseInitiatedUs: timeToResponseInitiatedUs,\\r\\n        timeToResponseCompletedUs: timeToResponseCompletedUs\\r\\n    };\\r\\n    logNetworkRequest(networkRequest);\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar FID_WAIT_TIME_MS = 5000;\\r\\nfunction setupOobResources() {\\r\\n    // Do not initialize unless iid is available.\\r\\n    if (!getIid()) {\\r\\n        return;\\r\\n    }\\r\\n    // The load event might not have fired yet, and that means performance navigation timing\\r\\n    // object has a duration of 0. The setup should run after all current tasks in js queue.\\r\\n    setTimeout(function () { return setupOobTraces(); }, 0);\\r\\n    setTimeout(function () { return setupNetworkRequests(); }, 0);\\r\\n    setTimeout(function () { return setupUserTimingTraces(); }, 0);\\r\\n}\\r\\nfunction setupNetworkRequests() {\\r\\n    var api = Api.getInstance();\\r\\n    var resources = api.getEntriesByType('resource');\\r\\n    for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\\r\\n        var resource = resources_1[_i];\\r\\n        createNetworkRequestEntry(resource);\\r\\n    }\\r\\n    api.setupObserver('resource', createNetworkRequestEntry);\\r\\n}\\r\\nfunction setupOobTraces() {\\r\\n    var api = Api.getInstance();\\r\\n    var navigationTimings = api.getEntriesByType('navigation');\\r\\n    var paintTimings = api.getEntriesByType('paint');\\r\\n    // If First Input Desly polyfill is added to the page, report the fid value.\\r\\n    // https://github.com/GoogleChromeLabs/first-input-delay\\r\\n    if (api.onFirstInputDelay) {\\r\\n        // If the fid call back is not called for certain time, continue without it.\\r\\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\\r\\n        var timeoutId_1 = setTimeout(function () {\\r\\n            Trace.createOobTrace(navigationTimings, paintTimings);\\r\\n            timeoutId_1 = undefined;\\r\\n        }, FID_WAIT_TIME_MS);\\r\\n        api.onFirstInputDelay(function (fid) {\\r\\n            if (timeoutId_1) {\\r\\n                clearTimeout(timeoutId_1);\\r\\n                Trace.createOobTrace(navigationTimings, paintTimings, fid);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n    else {\\r\\n        Trace.createOobTrace(navigationTimings, paintTimings);\\r\\n    }\\r\\n}\\r\\nfunction setupUserTimingTraces() {\\r\\n    var api = Api.getInstance();\\r\\n    // Run through the measure performance entries collected up to this point.\\r\\n    var measures = api.getEntriesByType('measure');\\r\\n    for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\\r\\n        var measure = measures_1[_i];\\r\\n        createUserTimingTrace(measure);\\r\\n    }\\r\\n    // Setup an observer to capture the measures from this point on.\\r\\n    api.setupObserver('measure', createUserTimingTrace);\\r\\n}\\r\\nfunction createUserTimingTrace(measure) {\\r\\n    var measureName = measure.name;\\r\\n    // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\\r\\n    if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\\r\\n        TRACE_MEASURE_PREFIX) {\\r\\n        return;\\r\\n    }\\r\\n    Trace.createUserTimingTrace(measureName);\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar PerformanceController = /** @class */ (function () {\\r\\n    function PerformanceController(app) {\\r\\n        this.app = app;\\r\\n        if (Api.getInstance().requiredApisAvailable()) {\\r\\n            util.validateIndexedDBOpenable()\\r\\n                .then(function (isAvailable) {\\r\\n                if (isAvailable) {\\r\\n                    setupTransportService();\\r\\n                    getInitializationPromise().then(setupOobResources, setupOobResources);\\r\\n                }\\r\\n            })\\r\\n                .catch(function (error) {\\r\\n                consoleLogger.info(\\\"Environment doesn't support IndexedDB: \\\" + error);\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n    PerformanceController.prototype.trace = function (name) {\\r\\n        return new Trace(name);\\r\\n    };\\r\\n    Object.defineProperty(PerformanceController.prototype, \\\"instrumentationEnabled\\\", {\\r\\n        get: function () {\\r\\n            return SettingsService.getInstance().instrumentationEnabled;\\r\\n        },\\r\\n        set: function (val) {\\r\\n            SettingsService.getInstance().instrumentationEnabled = val;\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(PerformanceController.prototype, \\\"dataCollectionEnabled\\\", {\\r\\n        get: function () {\\r\\n            return SettingsService.getInstance().dataCollectionEnabled;\\r\\n        },\\r\\n        set: function (val) {\\r\\n            SettingsService.getInstance().dataCollectionEnabled = val;\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    return PerformanceController;\\r\\n}());\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\\r\\nfunction registerPerformance(instance) {\\r\\n    var factoryMethod = function (app, installations) {\\r\\n        if (app.name !== DEFAULT_ENTRY_NAME) {\\r\\n            throw ERROR_FACTORY.create(\\\"FB not default\\\" /* FB_NOT_DEFAULT */);\\r\\n        }\\r\\n        if (typeof window === 'undefined') {\\r\\n            throw ERROR_FACTORY.create(\\\"no window\\\" /* NO_WINDOW */);\\r\\n        }\\r\\n        setupApi(window);\\r\\n        SettingsService.getInstance().firebaseAppInstance = app;\\r\\n        SettingsService.getInstance().installationsService = installations;\\r\\n        return new PerformanceController(app);\\r\\n    };\\r\\n    // Register performance with firebase-app.\\r\\n    instance.INTERNAL.registerComponent(new component.Component('performance', function (container) {\\r\\n        /* Dependencies */\\r\\n        // getImmediate for FirebaseApp will always succeed\\r\\n        var app = container.getProvider('app').getImmediate();\\r\\n        // The following call will always succeed because perf has `import '@firebase/installations'`\\r\\n        var installations = container\\r\\n            .getProvider('installations')\\r\\n            .getImmediate();\\r\\n        return factoryMethod(app, installations);\\r\\n    }, \\\"PUBLIC\\\" /* PUBLIC */));\\r\\n    instance.registerVersion(name, version);\\r\\n}\\r\\nregisterPerformance(firebase__default['default']);\\n\\nexports.registerPerformance = registerPerformance;\\n//# sourceMappingURL=index.cjs.js.map\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"mergeStrings\",\"part1\",\"part2\",\"sizeDiff\",\"length\",\"ERROR_FACTORY\",\"create\",\"resultArray\",\"i\",\"push\",\"charAt\",\"join\",\"getIidPromise\",\"iidPromise\",\"SettingsService\",\"getInstance\",\"installationsService\",\"getId\",\"then\",\"iidVal\",\"iid\",\"getAuthTokenPromise\",\"authTokenPromise\",\"getToken\",\"authTokenVal\",\"getVisibilityState\",\"Api\",\"document\",\"visibilityState\",\"VisibilityState\",\"VISIBLE\",\"HIDDEN\",\"UNKNOWN\",\"getEffectiveConnectionType\",\"navigatorConnection\",\"navigator\",\"connection\",\"effectiveType\",\"isValidCustomAttributeName\",\"name\",\"MAX_ATTRIBUTE_NAME_LENGTH\",\"RESERVED_ATTRIBUTE_PREFIXES\",\"some\",\"matchesReservedPrefix\",\"prefix\",\"startsWith\",\"match\",\"ATTRIBUTE_FORMAT_REGEX\",\"getConfig\",\"config\",\"getStoredConfig\",\"processConfig\",\"Promise\",\"resolve\",\"getRemoteConfig\",\"localStorage\",\"setItem\",\"CONFIG_LOCAL_STORAGE_KEY\",\"JSON\",\"stringify\",\"CONFIG_EXPIRY_LOCAL_STORAGE_KEY\",\"String\",\"Date\",\"now\",\"configTimeToLive\",\"expiryString\",\"getItem\",\"Number\",\"configStringified\",\"parse\",\"configResponse\",\"_a\",\"authToken\",\"configEndPoint\",\"getProjectId\",\"projectId\",\"getApiKey\",\"request\",\"Request\",\"method\",\"headers\",\"Authorization\",\"body\",\"app_instance_id\",\"app_instance_id_token\",\"app_id\",\"getAppId\",\"app_version\",\"version\",\"sdk_version\",\"REMOTE_CONFIG_SDK_VERSION\",\"fetch\",\"response\",\"ok\",\"json\",\"catch\",\"consoleLogger\",\"info\",\"COULD_NOT_GET_CONFIG_MSG\",\"settingsServiceInstance\",\"entries\",\"loggingEnabled\",\"undefined\",\"fpr_enabled\",\"DEFAULT_CONFIGS\",\"fpr_log_source\",\"logSource\",\"fpr_log_endpoint_url\",\"logEndPointUrl\",\"fpr_log_transport_key\",\"transportKey\",\"fpr_vc_network_request_sampling_rate\",\"networkRequestsSamplingRate\",\"fpr_vc_trace_sampling_rate\",\"tracesSamplingRate\",\"logTraceAfterSampling\",\"Math\",\"random\",\"logNetworkAfterSampling\",\"getInitializationPromise\",\"initializationStatus\",\"initializationPromise\",\"initializePerf\",\"getDocumentReadyComplete\",\"readyState\",\"handler_1\",\"removeEventListener\",\"addEventListener\",\"processQueue\",\"timeOffset\",\"setTimeout\",\"remainingTries\",\"queue\",\"DEFAULT_SEND_INTERVAL_MS\",\"dispatchQueueEvents\",\"staged\",\"tslib\",\"__spreadArrays\",\"log_event\",\"map\",\"evt\",\"source_extension_json_proto3\",\"message\",\"event_time_ms\",\"eventTime\",\"data\",\"request_time_ms\",\"client_info\",\"client_type\",\"js_client_info\",\"log_source\",\"sendEventsToFl\",\"postToFlEndpoint\",\"res\",\"transportWait\",\"nextRequestWaitMillis\",\"requestOffset\",\"isNaN\",\"max\",\"logResponseDetails\",\"Array\",\"isArray\",\"responseAction\",\"DEFAULT_REMAINING_TRIES\",\"flTransportFullUrl\",\"getFlTransportFullUrl\",\"transportHandler\",\"serializer\",\"args\",\"_i\",\"arguments\",\"apply\",\"logTrace\",\"trace\",\"settingsService\",\"instrumentationEnabled\",\"isAuto\",\"dataCollectionEnabled\",\"requiredApisAvailable\",\"sendTraceLog\",\"logger\",\"resourceType\",\"logNetworkRequest\",\"networkRequest\",\"networkRequestUrl\",\"url\",\"logEndpointUrl\",\"split\",\"flEndpointUrl\",\"flTransportEndpointUrl\",\"resource\",\"networkRequestMetric\",\"http_method\",\"httpMethod\",\"http_response_code\",\"response_payload_bytes\",\"responsePayloadBytes\",\"client_start_time_us\",\"startTimeUs\",\"time_to_response_initiated_us\",\"timeToResponseInitiatedUs\",\"time_to_response_completed_us\",\"timeToResponseCompletedUs\",\"perfMetric\",\"application_info\",\"getApplicationInfo\",\"network_request_metric\",\"traceMetric\",\"is_auto\",\"duration_us\",\"durationUs\",\"Object\",\"keys\",\"counters\",\"customAttributes\",\"getAttributes\",\"custom_attributes\",\"trace_metric\",\"getUrl\",\"google_app_id\",\"web_app_info\",\"page_url\",\"service_worker_status\",\"serviceWorker\",\"controller\",\"visibility_state\",\"effective_connection_type\",\"application_process_state\",\"createNetworkRequestEntry\",\"entry\",\"responseStart\",\"timeOrigin\",\"getTimeOrigin\",\"floor\",\"startTime\",\"responseEnd\",\"transferSize\",\"setupOobResources\",\"setupOobTraces\",\"api\",\"resources_1\",\"getEntriesByType\",\"resources\",\"setupObserver\",\"measures_1\",\"measures\",\"createUserTimingTrace\",\"measure\",\"navigationTimings\",\"paintTimings\",\"onFirstInputDelay\",\"timeoutId_1\",\"Trace\",\"createOobTrace\",\"FID_WAIT_TIME_MS\",\"fid\",\"clearTimeout\",\"measureName\",\"TRACE_MEASURE_PREFIX\",\"substring\",\"registerPerformance\",\"instance\",\"INTERNAL\",\"registerComponent\",\"component\",\"Component\",\"container\",\"app\",\"getProvider\",\"getImmediate\",\"installations\",\"DEFAULT_ENTRY_NAME\",\"window\",\"windowInstance\",\"firebaseAppInstance\",\"PerformanceController\",\"registerVersion\",\"defineProperty\",\"value\",\"firebase\",\"util\",\"logger$1\",\"firebase__default\",\"ERROR_DESCRIPTION_MAP\",\"ErrorFactory\",\"SERVICE\",\"SERVICE_NAME\",\"Logger\",\"logLevel\",\"LogLevel\",\"INFO\",\"apiInstance\",\"performance\",\"PerformanceObserver\",\"windowLocation\",\"location\",\"cookieEnabled\",\"perfMetrics\",\"prototype\",\"Api.prototype.getUrl\",\"href\",\"mark\",\"Api.prototype.mark\",\"Api.prototype.measure\",\"mark1\",\"mark2\",\"Api.prototype.getEntriesByType\",\"type\",\"getEntriesByName\",\"Api.prototype.getEntriesByName\",\"Api.prototype.getTimeOrigin\",\"timing\",\"navigationStart\",\"Api.prototype.requiredApisAvailable\",\"isIndexedDBAvailable\",\"Api.prototype.setupObserver\",\"entryType\",\"callback\",\"observe\",\"observer\",\"list\",\"getEntries\",\"entryTypes\",\"Api.getInstance\",\"SettingsService.prototype.getAppId\",\"appId\",\"options\",\"SettingsService.prototype.getProjectId\",\"SettingsService.prototype.getApiKey\",\"apiKey\",\"SettingsService.prototype.getFlTransportFullUrl\",\"concat\",\"SettingsService.getInstance\",\"isTransportSetup\",\"oobMetrics\",\"FIRST_PAINT_COUNTER_NAME\",\"FIRST_CONTENTFUL_PAINT_COUNTER_NAME\",\"FIRST_INPUT_DELAY_COUNTER_NAME\",\"traceMeasureName\",\"state\",\"randomId\",\"traceStartMark\",\"traceStopMark\",\"traceMeasure\",\"calculateTraceMetrics\",\"start\",\"Trace.prototype.start\",\"traceName\",\"stop\",\"Trace.prototype.stop\",\"record\",\"Trace.prototype.record\",\"duration\",\"attributes\",\"__assign\",\"metrics\",\"metric\",\"incrementMetric\",\"Trace.prototype.incrementMetric\",\"counter\",\"numAsInteger\",\"putMetric\",\"Trace.prototype.putMetric\",\"MAX_METRIC_NAME_LENGTH\",\"OOB_TRACE_PAGE_LOAD_PREFIX\",\"indexOf\",\"RESERVED_AUTO_PREFIX\",\"valueAsInteger\",\"customMetricName\",\"getMetric\",\"Trace.prototype.getMetric\",\"putAttribute\",\"Trace.prototype.putAttribute\",\"attr\",\"isValidName\",\"isValidValue\",\"MAX_ATTRIBUTE_VALUE_LENGTH\",\"attributeName\",\"attributeValue\",\"getAttribute\",\"Trace.prototype.getAttribute\",\"removeAttribute\",\"Trace.prototype.removeAttribute\",\"Trace.prototype.getAttributes\",\"setStartTime\",\"Trace.prototype.setStartTime\",\"setDuration\",\"Trace.prototype.setDuration\",\"Trace.prototype.calculateTraceMetrics\",\"perfMeasureEntries\",\"perfMeasureEntry\",\"Trace.createOobTrace\",\"firstInputDelay\",\"route\",\"timeOriginUs\",\"domInteractive\",\"domContentLoadedEventEnd\",\"loadEventEnd\",\"firstPaint\",\"find\",\"paintObject\",\"FIRST_PAINT\",\"firstContentfulPaint\",\"FIRST_CONTENTFUL_PAINT\",\"Trace.createUserTimingTrace\",\"validateIndexedDBOpenable\",\"isAvailable\",\"INITIAL_SEND_TIME_DELAY_MS\",\"error\",\"PerformanceController.prototype.trace\",\"get\",\"set\",\"val\",\"enumerable\",\"configurable\"]\n}\n"]