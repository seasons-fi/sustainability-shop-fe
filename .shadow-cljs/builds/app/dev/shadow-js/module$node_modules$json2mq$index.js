["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/json2mq/index.js"],"~:js","shadow$provide.module$node_modules$json2mq$index=function(global,require,module,exports){var camel2hyphen=require(\"module$node_modules$string_convert$camel2hyphen\"),obj2mq=function(obj){var mq=\"\",features=Object.keys(obj);features.forEach(function(feature,index){var value=obj[feature];feature=camel2hyphen(feature);/[height|width]$/.test(feature)&&\"number\"===typeof value&&(value+=\"px\");mq=!0===value?mq+feature:!1===value?mq+(\"not \"+feature):mq+(\"(\"+feature+\": \"+value+\")\");index<features.length-1&&\n(mq+=\" and \")});return mq};module.exports=function(query){var mq=\"\";return\"string\"===typeof query?query:query instanceof Array?(query.forEach(function(q,index){mq+=obj2mq(q);index<query.length-1&&(mq+=\", \")}),mq):obj2mq(query)}}","~:source","shadow$provide[\"module$node_modules$json2mq$index\"] = function(global,require,module,exports) {\nvar camel2hyphen = require('string-convert/camel2hyphen');\n\nvar isDimension = function (feature) {\n  var re = /[height|width]$/;\n  return re.test(feature);\n};\n\nvar obj2mq = function (obj) {\n  var mq = '';\n  var features = Object.keys(obj);\n  features.forEach(function (feature, index) {\n    var value = obj[feature];\n    feature = camel2hyphen(feature);\n    // Add px to dimension features\n    if (isDimension(feature) && typeof value === 'number') {\n      value = value + 'px';\n    }\n    if (value === true) {\n      mq += feature;\n    } else if (value === false) {\n      mq += 'not ' + feature;\n    } else {\n      mq += '(' + feature + ': ' + value + ')';\n    }\n    if (index < features.length-1) {\n      mq += ' and '\n    }\n  });\n  return mq;\n};\n\nvar json2mq = function (query) {\n  var mq = '';\n  if (typeof query === 'string') {\n    return query;\n  }\n  // Handling array of media queries\n  if (query instanceof Array) {\n    query.forEach(function (q, index) {\n      mq += obj2mq(q);\n      if (index < query.length-1) {\n        mq += ', '\n      }\n    });\n    return mq;\n  }\n  // Handling single media query\n  return obj2mq(query);\n};\n\nmodule.exports = json2mq;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$string_convert$camel2hyphen"]],"~:properties",["^5",[]],"~:compiled-at",1627822784995,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$json2mq$index.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,iCAAA,CAAsD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC9F,IAAIC,aAAeH,OAAA,CAAQ,iDAAR,CAAnB,CAOII,OAASA,QAAS,CAACC,GAAD,CAAM,CAC1B,IAAIC,GAAK,EAAT,CACIC,SAAWC,MAAOC,CAAAA,IAAP,CAAYJ,GAAZ,CACfE,SAASG,CAAAA,OAAT,CAAiB,QAAS,CAACC,OAAD,CAAUC,KAAV,CAAiB,CACzC,IAAIC,MAAQR,GAAA,CAAIM,OAAJ,CACZA,QAAA,CAAUR,YAAA,CAAaQ,OAAb,CATHG,kBACCC,CAAAA,IAAH,CAUWJ,OAVX,CAUL,EAA6C,QAA7C,GAA4B,MAAOE,MAAnC,GACUA,KADV,EACkB,IADlB,CAIEP,GAAA,CADY,CAAA,CAAd,GAAIO,KAAJ,CACEP,EADF,CACQK,OADR,CAEqB,CAAA,CAAd,GAAIE,KAAJ,CACLP,EADK,EACC,MADD,CACUK,OADV,EAGLL,EAHK,EAGC,GAHD,CAGOK,OAHP,CAGiB,IAHjB,CAGwBE,KAHxB,CAGgC,GAHhC,CAKHD,MAAJ,CAAYL,QAASS,CAAAA,MAArB,CAA4B,CAA5B;CACEV,EADF,EACQ,OADR,CAdyC,CAA3C,CAkBA,OAAOA,GArBmB,CA2C5BL,OAAOC,CAAAA,OAAP,CAnBce,QAAS,CAACC,KAAD,CAAQ,CAC7B,IAAIZ,GAAK,EACT,OAAqB,QAArB,GAAI,MAAOY,MAAX,CACSA,KADT,CAIIA,KAAJ,WAAqBC,MAArB,EACED,KAAMR,CAAAA,OAAN,CAAc,QAAS,CAACU,CAAD,CAAIR,KAAJ,CAAW,CAChCN,EAAA,EAAMF,MAAA,CAAOgB,CAAP,CACFR,MAAJ,CAAYM,KAAMF,CAAAA,MAAlB,CAAyB,CAAzB,GACEV,EADF,EACQ,IADR,CAFgC,CAAlC,CAMOA,CAAAA,EAPT,EAUOF,MAAA,CAAOc,KAAP,CAhBsB,CAhC+D;\",\n\"sources\":[\"node_modules/json2mq/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$json2mq$index\\\"] = function(global,require,module,exports) {\\nvar camel2hyphen = require('string-convert/camel2hyphen');\\n\\nvar isDimension = function (feature) {\\n  var re = /[height|width]$/;\\n  return re.test(feature);\\n};\\n\\nvar obj2mq = function (obj) {\\n  var mq = '';\\n  var features = Object.keys(obj);\\n  features.forEach(function (feature, index) {\\n    var value = obj[feature];\\n    feature = camel2hyphen(feature);\\n    // Add px to dimension features\\n    if (isDimension(feature) && typeof value === 'number') {\\n      value = value + 'px';\\n    }\\n    if (value === true) {\\n      mq += feature;\\n    } else if (value === false) {\\n      mq += 'not ' + feature;\\n    } else {\\n      mq += '(' + feature + ': ' + value + ')';\\n    }\\n    if (index < features.length-1) {\\n      mq += ' and '\\n    }\\n  });\\n  return mq;\\n};\\n\\nvar json2mq = function (query) {\\n  var mq = '';\\n  if (typeof query === 'string') {\\n    return query;\\n  }\\n  // Handling array of media queries\\n  if (query instanceof Array) {\\n    query.forEach(function (q, index) {\\n      mq += obj2mq(q);\\n      if (index < query.length-1) {\\n        mq += ', '\\n      }\\n    });\\n    return mq;\\n  }\\n  // Handling single media query\\n  return obj2mq(query);\\n};\\n\\nmodule.exports = json2mq;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"camel2hyphen\",\"obj2mq\",\"obj\",\"mq\",\"features\",\"Object\",\"keys\",\"forEach\",\"feature\",\"index\",\"value\",\"re\",\"test\",\"length\",\"json2mq\",\"query\",\"Array\",\"q\"]\n}\n"]