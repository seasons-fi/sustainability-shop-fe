["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@firebase/performance/dist/index.esm.js"],"~:js","shadow$provide.module$node_modules$$firebase$performance$dist$index_esm=function(global,require,module,exports){function mergeStrings(part1,part2){var sizeDiff=part1.length-part2.length;if(0>sizeDiff||1<sizeDiff)throw ERROR_FACTORY.create(\"invalid String merger input\");sizeDiff=[];for(var i=0;i<part1.length;i++)sizeDiff.push(part1.charAt(i)),part2.length>i&&sizeDiff.push(part2.charAt(i));return sizeDiff.join(\"\")}function getIidPromise(){var iidPromise=SettingsService.getInstance().installationsService.getId();\niidPromise.then(function(iidVal){iid=iidVal});return iidPromise}function getAuthTokenPromise(){var authTokenPromise=SettingsService.getInstance().installationsService.getToken();authTokenPromise.then(function(authTokenVal){});return authTokenPromise}function getVisibilityState(){switch(Api.getInstance().document.visibilityState){case \"visible\":return VisibilityState$jscomp$0.VISIBLE;case \"hidden\":return VisibilityState$jscomp$0.HIDDEN;default:return VisibilityState$jscomp$0.UNKNOWN}}function getEffectiveConnectionType(){var navigatorConnection=\nApi.getInstance().navigator.connection;switch(navigatorConnection&&navigatorConnection.effectiveType){case \"slow-2g\":return 1;case \"2g\":return 2;case \"3g\":return 3;case \"4g\":return 4;default:return 0}}function isValidCustomAttributeName(name){return 0===name.length||40<name.length?!1:!RESERVED_ATTRIBUTE_PREFIXES.some(function(prefix){return name.startsWith(prefix)})&&!!name.match(ATTRIBUTE_FORMAT_REGEX)}function getConfig(iid){var config$jscomp$0=getStoredConfig();return config$jscomp$0?(processConfig(config$jscomp$0),\nPromise.resolve()):getRemoteConfig(iid).then(processConfig).then(function(config){var localStorage=Api.getInstance().localStorage;config&&localStorage&&(localStorage.setItem(\"@firebase/performance/config\",JSON.stringify(config)),localStorage.setItem(\"@firebase/performance/configexpire\",String(Date.now()+36E5*SettingsService.getInstance().configTimeToLive)))},function(){})}function getStoredConfig(){var localStorage=Api.getInstance().localStorage;if(localStorage){var expiryString=localStorage.getItem(\"@firebase/performance/configexpire\");\nif(expiryString&&Number(expiryString)>Date.now()&&(localStorage=localStorage.getItem(\"@firebase/performance/config\")))try{return JSON.parse(localStorage)}catch(_a){}}}function getRemoteConfig(iid){return getAuthTokenPromise().then(function(authToken){var configEndPoint=\"https://firebaseremoteconfig.googleapis.com/v1/projects/\"+SettingsService.getInstance().getProjectId()+\"/namespaces/fireperf:fetch?key\\x3d\"+SettingsService.getInstance().getApiKey();authToken=new Request(configEndPoint,{method:\"POST\",\nheaders:{Authorization:\"FIREBASE_INSTALLATIONS_AUTH \"+authToken},body:JSON.stringify({app_instance_id:iid,app_instance_id_token:authToken,app_id:SettingsService.getInstance().getAppId(),app_version:SDK_VERSION,sdk_version:\"0.0.1\"})});return fetch(authToken).then(function(response){if(response.ok)return response.json();throw ERROR_FACTORY.create(\"RC response not ok\");})})[\"catch\"](function(){consoleLogger.info(COULD_NOT_GET_CONFIG_MSG)})}function processConfig(config){if(!config)return config;var settingsServiceInstance=\nSettingsService.getInstance(),entries=config.entries||{};settingsServiceInstance.loggingEnabled=void 0!==entries.fpr_enabled?\"true\"===String(entries.fpr_enabled):DEFAULT_CONFIGS.loggingEnabled;entries.fpr_log_source&&(settingsServiceInstance.logSource=Number(entries.fpr_log_source));entries.fpr_log_endpoint_url&&(settingsServiceInstance.logEndPointUrl=entries.fpr_log_endpoint_url);entries.fpr_log_transport_key&&(settingsServiceInstance.transportKey=entries.fpr_log_transport_key);void 0!==entries.fpr_vc_network_request_sampling_rate&&\n(settingsServiceInstance.networkRequestsSamplingRate=Number(entries.fpr_vc_network_request_sampling_rate));void 0!==entries.fpr_vc_trace_sampling_rate&&(settingsServiceInstance.tracesSamplingRate=Number(entries.fpr_vc_trace_sampling_rate));settingsServiceInstance.logTraceAfterSampling=Math.random()<=settingsServiceInstance.tracesSamplingRate;settingsServiceInstance.logNetworkAfterSampling=Math.random()<=settingsServiceInstance.networkRequestsSamplingRate;return config}function getInitializationPromise(){initializationStatus=\n2;return initializationPromise=initializationPromise||initializePerf()}function initializePerf(){return getDocumentReadyComplete().then(function(){return getIidPromise()}).then(function(iid){return getConfig(iid)}).then(function(){initializationStatus=3},function(){initializationStatus=3})}function getDocumentReadyComplete(){var document=Api.getInstance().document;return new Promise(function(resolve){document&&\"complete\"!==document.readyState?document.addEventListener(\"readystatechange\",function handler_1(){\"complete\"===\ndocument.readyState&&(document.removeEventListener(\"readystatechange\",handler_1),resolve())}):resolve()})}function processQueue(timeOffset){setTimeout(function(){if(0!==remainingTries){if(!queue.length)return processQueue(1E4);dispatchQueueEvents()}},timeOffset)}function dispatchQueueEvents(){var staged=queue.splice(0,1E3),log_event=staged.map(function(evt){return{source_extension_json_proto3:evt.message,event_time_ms:String(evt.eventTime)}});log_event={request_time_ms:String(Date.now()),client_info:{client_type:1,\njs_client_info:{}},log_source:SettingsService.getInstance().logSource,log_event};sendEventsToFl(log_event,staged)[\"catch\"](function(){queue=(0,_tslib.__spreadArray)((0,_tslib.__spreadArray)([],staged),queue);remainingTries--;consoleLogger.info(\"Tries left: \"+remainingTries+\".\");processQueue(1E4)})}function sendEventsToFl(data,staged){return postToFlEndpoint(data).then(function(res){res.ok||consoleLogger.info(\"Call to Firebase backend failed.\");return res.json()}).then(function(res){var transportWait=\nNumber(res.nextRequestWaitMillis),requestOffset=1E4;isNaN(transportWait)||(requestOffset=Math.max(transportWait,requestOffset));res=res.logResponseDetails;Array.isArray(res)&&0<res.length&&\"RETRY_REQUEST_LATER\"===res[0].responseAction&&(queue=(0,_tslib.__spreadArray)((0,_tslib.__spreadArray)([],staged),queue),consoleLogger.info(\"Retry transport request later.\"));remainingTries=3;processQueue(requestOffset)})}function postToFlEndpoint(data){var flTransportFullUrl=SettingsService.getInstance().getFlTransportFullUrl();\nreturn fetch(flTransportFullUrl,{method:\"POST\",body:JSON.stringify(data)})}function transportHandler(serializer){return function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];args={message:serializer.apply(void 0,args),eventTime:Date.now()};if(!args.eventTime||!args.message)throw ERROR_FACTORY.create(\"invalid cc log\");queue=(0,_tslib.__spreadArray)((0,_tslib.__spreadArray)([],queue),[args])}}function logTrace(trace){var settingsService=SettingsService.getInstance();(settingsService.instrumentationEnabled||\n!trace.isAuto)&&(settingsService.dataCollectionEnabled||trace.isAuto)&&Api.getInstance().requiredApisAvailable()&&(trace.isAuto&&getVisibilityState()!==VisibilityState$jscomp$0.VISIBLE||(3===initializationStatus?sendTraceLog(trace):getInitializationPromise().then(function(){return sendTraceLog(trace)},function(){return sendTraceLog(trace)})))}function sendTraceLog(trace){if(iid){var settingsService=SettingsService.getInstance();settingsService.loggingEnabled&&settingsService.logTraceAfterSampling&&\nsetTimeout(function(){logger||(logger=transportHandler(serializer$jscomp$0));logger(trace,1)},0)}}function logNetworkRequest(networkRequest){var settingsService=SettingsService.getInstance();if(settingsService.instrumentationEnabled){var networkRequestUrl=networkRequest.url,logEndpointUrl=settingsService.logEndPointUrl.split(\"?\")[0],flEndpointUrl=settingsService.flTransportEndpointUrl.split(\"?\")[0];networkRequestUrl!==logEndpointUrl&&networkRequestUrl!==flEndpointUrl&&settingsService.loggingEnabled&&\nsettingsService.logNetworkAfterSampling&&setTimeout(function(){logger||(logger=transportHandler(serializer$jscomp$0));logger(networkRequest,0)},0)}}function serializer$jscomp$0(resource,resourceType){if(0===resourceType)return resource={url:resource.url,http_method:resource.httpMethod||0,http_response_code:200,response_payload_bytes:resource.responsePayloadBytes,client_start_time_us:resource.startTimeUs,time_to_response_initiated_us:resource.timeToResponseInitiatedUs,time_to_response_completed_us:resource.timeToResponseCompletedUs},\nresource={application_info:getApplicationInfo(),network_request_metric:resource},JSON.stringify(resource);resourceType={name:resource.name,is_auto:resource.isAuto,client_start_time_us:resource.startTimeUs,duration_us:resource.durationUs};0!==Object.keys(resource.counters).length&&(resourceType.counters=resource.counters);resource=resource.getAttributes();0!==Object.keys(resource).length&&(resourceType.custom_attributes=resource);resource={application_info:getApplicationInfo(),trace_metric:resourceType};\nreturn JSON.stringify(resource)}function getApplicationInfo(){var JSCompiler_temp_const=SettingsService.getInstance().getAppId(),JSCompiler_temp_const$jscomp$0=iid,JSCompiler_temp_const$jscomp$1=Api.getInstance().getUrl(),navigator=Api.getInstance().navigator;return{google_app_id:JSCompiler_temp_const,app_instance_id:JSCompiler_temp_const$jscomp$0,web_app_info:{sdk_version:SDK_VERSION,page_url:JSCompiler_temp_const$jscomp$1,service_worker_status:\"serviceWorker\"in navigator?navigator.serviceWorker.controller?\n2:3:1,visibility_state:getVisibilityState(),effective_connection_type:getEffectiveConnectionType()},application_process_state:0}}function createNetworkRequestEntry(entry){if(entry&&void 0!==entry.responseStart){var timeOrigin=Api.getInstance().getTimeOrigin();timeOrigin=Math.floor(1E3*(entry.startTime+timeOrigin));var timeToResponseInitiatedUs=entry.responseStart?Math.floor(1E3*(entry.responseStart-entry.startTime)):void 0,timeToResponseCompletedUs=Math.floor(1E3*(entry.responseEnd-entry.startTime));\nentry={url:entry.name&&entry.name.split(\"?\")[0],responsePayloadBytes:entry.transferSize,startTimeUs:timeOrigin,timeToResponseInitiatedUs,timeToResponseCompletedUs};logNetworkRequest(entry)}}function setupOobResources(){iid&&(setTimeout(function(){return setupOobTraces()},0),setTimeout(function(){for(var api=Api.getInstance(),_i=0,resources_1=api.getEntriesByType(\"resource\");_i<resources_1.length;_i++)createNetworkRequestEntry(resources_1[_i]);api.setupObserver(\"resource\",createNetworkRequestEntry)},\n0),setTimeout(function(){for(var api=Api.getInstance(),_i=0,measures_1=api.getEntriesByType(\"measure\");_i<measures_1.length;_i++)createUserTimingTrace(measures_1[_i]);api.setupObserver(\"measure\",createUserTimingTrace)},0))}function setupOobTraces(){var api=Api.getInstance(),navigationTimings=api.getEntriesByType(\"navigation\"),paintTimings=api.getEntriesByType(\"paint\");if(api.onFirstInputDelay){var timeoutId_1=setTimeout(function(){Trace.createOobTrace(navigationTimings,paintTimings);timeoutId_1=void 0},\n5E3);api.onFirstInputDelay(function(fid){timeoutId_1&&(clearTimeout(timeoutId_1),Trace.createOobTrace(navigationTimings,paintTimings,fid))})}else Trace.createOobTrace(navigationTimings,paintTimings)}function createUserTimingTrace(measure){measure=measure.name;\"FB-PERF-TRACE-MEASURE\"!==measure.substring(0,21)&&Trace.createUserTimingTrace(measure)}function registerPerformance(instance){instance.INTERNAL.registerComponent(new _component.Component(\"performance\",function(container){var app=container.getProvider(\"app\").getImmediate();\ncontainer=container.getProvider(\"installations\").getImmediate();if(app.name!==DEFAULT_ENTRY_NAME)throw ERROR_FACTORY.create(\"FB not default\");if(\"undefined\"===typeof window)throw ERROR_FACTORY.create(\"no window\");windowInstance=window;SettingsService.getInstance().firebaseAppInstance=app;SettingsService.getInstance().installationsService=container;return new PerformanceController(app)},\"PUBLIC\"));instance.registerVersion(name$jscomp$0,version)}Object.defineProperty(exports,\"__esModule\",{value:!0});\nexports.registerPerformance=registerPerformance;global=function(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}(require(\"module$node_modules$$firebase$app$dist$index_esm\"));require(\"module$node_modules$$firebase$installations$dist$index_cjs\");var _tslib=require(\"module$node_modules$tslib$tslib\"),_util=require(\"module$node_modules$$firebase$util$dist$index_esm\");module=require(\"module$node_modules$$firebase$logger$dist$index_cjs\");var _component=require(\"module$node_modules$$firebase$component$dist$index_esm\"),\nname$jscomp$0=\"@firebase/performance\",version=\"0.4.17\",SDK_VERSION=version,_a$jscomp$0;require=(_a$jscomp$0={},_a$jscomp$0[\"trace started\"]=\"Trace {$traceName} was started before.\",_a$jscomp$0[\"trace stopped\"]=\"Trace {$traceName} is not running.\",_a$jscomp$0[\"nonpositive trace startTime\"]=\"Trace {$traceName} startTime should be positive.\",_a$jscomp$0[\"nonpositive trace duration\"]=\"Trace {$traceName} duration should be positive.\",_a$jscomp$0[\"no window\"]=\"Window is not available.\",_a$jscomp$0[\"no app id\"]=\n\"App id is not available.\",_a$jscomp$0[\"no project id\"]=\"Project id is not available.\",_a$jscomp$0[\"no api key\"]=\"Api key is not available.\",_a$jscomp$0[\"invalid cc log\"]=\"Attempted to queue invalid cc event\",_a$jscomp$0[\"FB not default\"]=\"Performance can only start when Firebase app instance is the default one.\",_a$jscomp$0[\"RC response not ok\"]=\"RC response is not ok\",_a$jscomp$0[\"invalid attribute name\"]=\"Attribute name {$attributeName} is invalid.\",_a$jscomp$0[\"invalid attribute value\"]=\"Attribute value {$attributeValue} is invalid.\",\n_a$jscomp$0[\"invalid custom metric name\"]=\"Custom metric name {$customMetricName} is invalid\",_a$jscomp$0[\"invalid String merger input\"]=\"Input for String merger is invalid, contact support team to resolve.\",_a$jscomp$0);var ERROR_FACTORY=new _util.ErrorFactory(\"performance\",\"Performance\",require),consoleLogger=new module.Logger(\"Performance\");consoleLogger.logLevel=module.LogLevel.INFO;var apiInstance,windowInstance,Api=function(){function Api(window){this.window=window;if(!window)throw ERROR_FACTORY.create(\"no window\");\nthis.performance=window.performance;this.PerformanceObserver=window.PerformanceObserver;this.windowLocation=window.location;this.navigator=window.navigator;this.document=window.document;this.navigator&&this.navigator.cookieEnabled&&(this.localStorage=window.localStorage);window.perfMetrics&&window.perfMetrics.onFirstInputDelay&&(this.onFirstInputDelay=window.perfMetrics.onFirstInputDelay)}Api.prototype.getUrl=function(){return this.windowLocation.href.split(\"?\")[0]};Api.prototype.mark=function(name){this.performance&&\nthis.performance.mark&&this.performance.mark(name)};Api.prototype.measure=function(measureName,mark1,mark2){this.performance&&this.performance.measure&&this.performance.measure(measureName,mark1,mark2)};Api.prototype.getEntriesByType=function(type){return this.performance&&this.performance.getEntriesByType?this.performance.getEntriesByType(type):[]};Api.prototype.getEntriesByName=function(name){return this.performance&&this.performance.getEntriesByName?this.performance.getEntriesByName(name):[]};\nApi.prototype.getTimeOrigin=function(){return this.performance&&(this.performance.timeOrigin||this.performance.timing.navigationStart)};Api.prototype.requiredApisAvailable=function(){return fetch&&Promise&&this.navigator&&this.navigator.cookieEnabled?(0,_util.isIndexedDBAvailable)()?!0:(consoleLogger.info(\"IndexedDB is not supported by current browswer\"),!1):(consoleLogger.info(\"Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.\"),!1)};Api.prototype.setupObserver=\nfunction(entryType,callback){this.PerformanceObserver&&(new this.PerformanceObserver(function(list){var _i=0;for(list=list.getEntries();_i<list.length;_i++)callback(list[_i])})).observe({entryTypes:[entryType]})};Api.getInstance=function(){void 0===apiInstance&&(apiInstance=new Api(windowInstance));return apiInstance};return Api}(),settingsServiceInstance,SettingsService=function(){function SettingsService(){this.dataCollectionEnabled=this.instrumentationEnabled=!0;this.loggingEnabled=!1;this.networkRequestsSamplingRate=\nthis.tracesSamplingRate=1;this.logEndPointUrl=\"https://firebaselogging.googleapis.com/v0cc/log?format\\x3djson_proto\";this.flTransportEndpointUrl=mergeStrings(\"hts/frbslgigp.ogepscmv/ieo/eaylg\",\"tp:/ieaeogn-agolai.o/1frlglgc/o\");this.transportKey=mergeStrings(\"AzSC8r6ReiGqFMyfvgow\",\"Iayx0u-XT3vksVM-pIV\");this.logSource=462;this.logNetworkAfterSampling=this.logTraceAfterSampling=!1;this.configTimeToLive=12}SettingsService.prototype.getAppId=function(){var appId=this.firebaseAppInstance&&this.firebaseAppInstance.options&&\nthis.firebaseAppInstance.options.appId;if(!appId)throw ERROR_FACTORY.create(\"no app id\");return appId};SettingsService.prototype.getProjectId=function(){var projectId=this.firebaseAppInstance&&this.firebaseAppInstance.options&&this.firebaseAppInstance.options.projectId;if(!projectId)throw ERROR_FACTORY.create(\"no project id\");return projectId};SettingsService.prototype.getApiKey=function(){var apiKey=this.firebaseAppInstance&&this.firebaseAppInstance.options&&this.firebaseAppInstance.options.apiKey;\nif(!apiKey)throw ERROR_FACTORY.create(\"no api key\");return apiKey};SettingsService.prototype.getFlTransportFullUrl=function(){return this.flTransportEndpointUrl.concat(\"?key\\x3d\",this.transportKey)};SettingsService.getInstance=function(){void 0===settingsServiceInstance&&(settingsServiceInstance=new SettingsService);return settingsServiceInstance};return SettingsService}(),iid,VisibilityState$jscomp$0;(function(VisibilityState){VisibilityState[VisibilityState.UNKNOWN=0]=\"UNKNOWN\";VisibilityState[VisibilityState.VISIBLE=\n1]=\"VISIBLE\";VisibilityState[VisibilityState.HIDDEN=2]=\"HIDDEN\"})(VisibilityState$jscomp$0||(VisibilityState$jscomp$0={}));var RESERVED_ATTRIBUTE_PREFIXES=[\"firebase_\",\"google_\",\"ga_\"],ATTRIBUTE_FORMAT_REGEX=/^[a-zA-Z]\\w*$/,DEFAULT_CONFIGS={loggingEnabled:!0},COULD_NOT_GET_CONFIG_MSG=\"Could not fetch config, will use default configs\",initializationStatus=1,initializationPromise,remainingTries=3,queue=[],isTransportSetup=!1,logger,oobMetrics=[\"_fp\",\"_fcp\",\"_fid\"],Trace=function(){function Trace(name,\nisAuto,traceMeasureName){void 0===isAuto&&(isAuto=!1);this.name=name;this.isAuto=isAuto;this.state=1;this.customAttributes={};this.counters={};this.api=Api.getInstance();this.randomId=Math.floor(1E6*Math.random());this.isAuto||(this.traceStartMark=\"FB-PERF-TRACE-START-\"+this.randomId+\"-\"+this.name,this.traceStopMark=\"FB-PERF-TRACE-STOP-\"+this.randomId+\"-\"+this.name,this.traceMeasure=traceMeasureName||\"FB-PERF-TRACE-MEASURE-\"+this.randomId+\"-\"+this.name,traceMeasureName&&this.calculateTraceMetrics())}\nTrace.prototype.start=function(){if(1!==this.state)throw ERROR_FACTORY.create(\"trace started\",{traceName:this.name});this.api.mark(this.traceStartMark);this.state=2};Trace.prototype.stop=function(){if(2!==this.state)throw ERROR_FACTORY.create(\"trace stopped\",{traceName:this.name});this.state=3;this.api.mark(this.traceStopMark);this.api.measure(this.traceMeasure,this.traceStartMark,this.traceStopMark);this.calculateTraceMetrics();logTrace(this)};Trace.prototype.record=function(startTime,duration,options){if(0>=\nstartTime)throw ERROR_FACTORY.create(\"nonpositive trace startTime\",{traceName:this.name});if(0>=duration)throw ERROR_FACTORY.create(\"nonpositive trace duration\",{traceName:this.name});this.durationUs=Math.floor(1E3*duration);this.startTimeUs=Math.floor(1E3*startTime);options&&options.attributes&&(this.customAttributes=(0,_tslib.__assign)({},options.attributes));if(options&&options.metrics)for(startTime=0,duration=Object.keys(options.metrics);startTime<duration.length;startTime++){var metric=duration[startTime];\nisNaN(Number(options.metrics[metric]))||(this.counters[metric]=Number(Math.floor(options.metrics[metric])))}logTrace(this)};Trace.prototype.incrementMetric=function(counter,numAsInteger){void 0===numAsInteger&&(numAsInteger=1);void 0===this.counters[counter]?this.putMetric(counter,numAsInteger):this.putMetric(counter,this.counters[counter]+numAsInteger)};Trace.prototype.putMetric=function(counter,numAsInteger){var JSCompiler_inline_result=this.name;JSCompiler_inline_result=0===counter.length||100<\ncounter.length?!1:JSCompiler_inline_result&&JSCompiler_inline_result.startsWith(\"_wt_\")&&-1<oobMetrics.indexOf(counter)||!counter.startsWith(\"_\");if(JSCompiler_inline_result){JSCompiler_inline_result=this.counters;var valueAsInteger=Math.floor(numAsInteger);valueAsInteger<numAsInteger&&consoleLogger.info(\"Metric value should be an Integer, setting the value as : \"+valueAsInteger+\".\");JSCompiler_inline_result[counter]=valueAsInteger}else throw ERROR_FACTORY.create(\"invalid custom metric name\",{customMetricName:counter});\n};Trace.prototype.getMetric=function(counter){return this.counters[counter]||0};Trace.prototype.putAttribute=function(attr,value){var isValidName=isValidCustomAttributeName(attr),isValidValue=0!==value.length&&100>=value.length;if(isValidName&&isValidValue)this.customAttributes[attr]=value;else{if(!isValidName)throw ERROR_FACTORY.create(\"invalid attribute name\",{attributeName:attr});if(!isValidValue)throw ERROR_FACTORY.create(\"invalid attribute value\",{attributeValue:value});}};Trace.prototype.getAttribute=\nfunction(attr){return this.customAttributes[attr]};Trace.prototype.removeAttribute=function(attr){void 0!==this.customAttributes[attr]&&delete this.customAttributes[attr]};Trace.prototype.getAttributes=function(){return(0,_tslib.__assign)({},this.customAttributes)};Trace.prototype.setStartTime=function(startTime){this.startTimeUs=startTime};Trace.prototype.setDuration=function(duration){this.durationUs=duration};Trace.prototype.calculateTraceMetrics=function(){var perfMeasureEntries=this.api.getEntriesByName(this.traceMeasure);\nif(perfMeasureEntries=perfMeasureEntries&&perfMeasureEntries[0])this.durationUs=Math.floor(1E3*perfMeasureEntries.duration),this.startTimeUs=Math.floor(1E3*(perfMeasureEntries.startTime+this.api.getTimeOrigin()))};Trace.createOobTrace=function(navigationTimings,paintTimings,firstInputDelay){var route=Api.getInstance().getUrl();if(route){route=new Trace(\"_wt_\"+route,!0);var timeOriginUs=Math.floor(1E3*Api.getInstance().getTimeOrigin());route.setStartTime(timeOriginUs);navigationTimings&&navigationTimings[0]&&\n(route.setDuration(Math.floor(1E3*navigationTimings[0].duration)),route.putMetric(\"domInteractive\",Math.floor(1E3*navigationTimings[0].domInteractive)),route.putMetric(\"domContentLoadedEventEnd\",Math.floor(1E3*navigationTimings[0].domContentLoadedEventEnd)),route.putMetric(\"loadEventEnd\",Math.floor(1E3*navigationTimings[0].loadEventEnd)));paintTimings&&((navigationTimings=paintTimings.find(function(paintObject){return\"first-paint\"===paintObject.name}))&&navigationTimings.startTime&&route.putMetric(\"_fp\",\nMath.floor(1E3*navigationTimings.startTime)),(paintTimings=paintTimings.find(function(paintObject){return\"first-contentful-paint\"===paintObject.name}))&&paintTimings.startTime&&route.putMetric(\"_fcp\",Math.floor(1E3*paintTimings.startTime)),firstInputDelay&&route.putMetric(\"_fid\",Math.floor(1E3*firstInputDelay)));logTrace(route)}};Trace.createUserTimingTrace=function(measureName){measureName=new Trace(measureName,!1,measureName);logTrace(measureName)};return Trace}(),PerformanceController=function(){function PerformanceController(app){this.app=\napp;if(Api.getInstance().requiredApisAvailable())(0,_util.validateIndexedDBOpenable)().then(function(isAvailable){isAvailable&&(isTransportSetup||(processQueue(5500),isTransportSetup=!0),getInitializationPromise().then(setupOobResources,setupOobResources))})[\"catch\"](function(error){consoleLogger.info(\"Environment doesn't support IndexedDB: \"+error)})}PerformanceController.prototype.trace=function(name){return new Trace(name)};Object.defineProperty(PerformanceController.prototype,\"instrumentationEnabled\",\n{get:function(){return SettingsService.getInstance().instrumentationEnabled},set:function(val){SettingsService.getInstance().instrumentationEnabled=val},enumerable:!1,configurable:!0});Object.defineProperty(PerformanceController.prototype,\"dataCollectionEnabled\",{get:function(){return SettingsService.getInstance().dataCollectionEnabled},set:function(val){SettingsService.getInstance().dataCollectionEnabled=val},enumerable:!1,configurable:!0});return PerformanceController}(),DEFAULT_ENTRY_NAME=\"[DEFAULT]\";\nregisterPerformance(global[\"default\"])}","~:source","shadow$provide[\"module$node_modules$$firebase$performance$dist$index_esm\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerPerformance = registerPerformance;\n\nvar _app = _interopRequireDefault(require(\"@firebase/app\"));\n\nrequire(\"@firebase/installations\");\n\nvar _tslib = require(\"tslib\");\n\nvar _util = require(\"@firebase/util\");\n\nvar _logger = require(\"@firebase/logger\");\n\nvar _component = require(\"@firebase/component\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar name = \"@firebase/performance\";\nvar version = \"0.4.17\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar SDK_VERSION = version;\n/** The prefix for start User Timing marks used for creating Traces. */\n\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\n/** The prefix for stop User Timing marks used for creating Traces. */\n\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\n/** The prefix for User Timing measure used for creating Traces. */\n\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\n/** The prefix for out of the box page load Trace name. */\n\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\nvar SERVICE = 'performance';\nvar SERVICE_NAME = 'Performance';\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar _a;\n\nvar ERROR_DESCRIPTION_MAP = (_a = {}, _a[\"trace started\"\n/* TRACE_STARTED_BEFORE */\n] = 'Trace {$traceName} was started before.', _a[\"trace stopped\"\n/* TRACE_STOPPED_BEFORE */\n] = 'Trace {$traceName} is not running.', _a[\"nonpositive trace startTime\"\n/* NONPOSITIVE_TRACE_START_TIME */\n] = 'Trace {$traceName} startTime should be positive.', _a[\"nonpositive trace duration\"\n/* NONPOSITIVE_TRACE_DURATION */\n] = 'Trace {$traceName} duration should be positive.', _a[\"no window\"\n/* NO_WINDOW */\n] = 'Window is not available.', _a[\"no app id\"\n/* NO_APP_ID */\n] = 'App id is not available.', _a[\"no project id\"\n/* NO_PROJECT_ID */\n] = 'Project id is not available.', _a[\"no api key\"\n/* NO_API_KEY */\n] = 'Api key is not available.', _a[\"invalid cc log\"\n/* INVALID_CC_LOG */\n] = 'Attempted to queue invalid cc event', _a[\"FB not default\"\n/* FB_NOT_DEFAULT */\n] = 'Performance can only start when Firebase app instance is the default one.', _a[\"RC response not ok\"\n/* RC_NOT_OK */\n] = 'RC response is not ok', _a[\"invalid attribute name\"\n/* INVALID_ATTRIBUTE_NAME */\n] = 'Attribute name {$attributeName} is invalid.', _a[\"invalid attribute value\"\n/* INVALID_ATTRIBUTE_VALUE */\n] = 'Attribute value {$attributeValue} is invalid.', _a[\"invalid custom metric name\"\n/* INVALID_CUSTOM_METRIC_NAME */\n] = 'Custom metric name {$customMetricName} is invalid', _a[\"invalid String merger input\"\n/* INVALID_STRING_MERGER_PARAMETER */\n] = 'Input for String merger is invalid, contact support team to resolve.', _a);\nvar ERROR_FACTORY = new _util.ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar consoleLogger = new _logger.Logger(SERVICE_NAME);\nconsoleLogger.logLevel = _logger.LogLevel.INFO;\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar apiInstance;\nvar windowInstance;\n/**\r\n * This class holds a reference to various browser related objects injected by\r\n * set methods.\r\n */\n\nvar Api =\n/** @class */\nfunction () {\n  function Api(window) {\n    this.window = window;\n\n    if (!window) {\n      throw ERROR_FACTORY.create(\"no window\"\n      /* NO_WINDOW */\n      );\n    }\n\n    this.performance = window.performance;\n    this.PerformanceObserver = window.PerformanceObserver;\n    this.windowLocation = window.location;\n    this.navigator = window.navigator;\n    this.document = window.document;\n\n    if (this.navigator && this.navigator.cookieEnabled) {\n      // If user blocks cookies on the browser, accessing localStorage will\n      // throw an exception.\n      this.localStorage = window.localStorage;\n    }\n\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\n    }\n  }\n\n  Api.prototype.getUrl = function () {\n    // Do not capture the string query part of url.\n    return this.windowLocation.href.split('?')[0];\n  };\n\n  Api.prototype.mark = function (name) {\n    if (!this.performance || !this.performance.mark) {\n      return;\n    }\n\n    this.performance.mark(name);\n  };\n\n  Api.prototype.measure = function (measureName, mark1, mark2) {\n    if (!this.performance || !this.performance.measure) {\n      return;\n    }\n\n    this.performance.measure(measureName, mark1, mark2);\n  };\n\n  Api.prototype.getEntriesByType = function (type) {\n    if (!this.performance || !this.performance.getEntriesByType) {\n      return [];\n    }\n\n    return this.performance.getEntriesByType(type);\n  };\n\n  Api.prototype.getEntriesByName = function (name) {\n    if (!this.performance || !this.performance.getEntriesByName) {\n      return [];\n    }\n\n    return this.performance.getEntriesByName(name);\n  };\n\n  Api.prototype.getTimeOrigin = function () {\n    // Polyfill the time origin with performance.timing.navigationStart.\n    return this.performance && (this.performance.timeOrigin || this.performance.timing.navigationStart);\n  };\n\n  Api.prototype.requiredApisAvailable = function () {\n    if (!fetch || !Promise || !this.navigator || !this.navigator.cookieEnabled) {\n      consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\n      return false;\n    }\n\n    if (!(0, _util.isIndexedDBAvailable)()) {\n      consoleLogger.info('IndexedDB is not supported by current browswer');\n      return false;\n    }\n\n    return true;\n  };\n\n  Api.prototype.setupObserver = function (entryType, callback) {\n    if (!this.PerformanceObserver) {\n      return;\n    }\n\n    var observer = new this.PerformanceObserver(function (list) {\n      for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\n        var entry = _a[_i]; // `entry` is a PerformanceEntry instance.\n\n        callback(entry);\n      }\n    }); // Start observing the entry types you care about.\n\n    observer.observe({\n      entryTypes: [entryType]\n    });\n  };\n\n  Api.getInstance = function () {\n    if (apiInstance === undefined) {\n      apiInstance = new Api(windowInstance);\n    }\n\n    return apiInstance;\n  };\n\n  return Api;\n}();\n\nfunction setupApi(window) {\n  windowInstance = window;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction mergeStrings(part1, part2) {\n  var sizeDiff = part1.length - part2.length;\n\n  if (sizeDiff < 0 || sizeDiff > 1) {\n    throw ERROR_FACTORY.create(\"invalid String merger input\"\n    /* INVALID_STRING_MERGER_PARAMETER */\n    );\n  }\n\n  var resultArray = [];\n\n  for (var i = 0; i < part1.length; i++) {\n    resultArray.push(part1.charAt(i));\n\n    if (part2.length > i) {\n      resultArray.push(part2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar settingsServiceInstance;\n\nvar SettingsService =\n/** @class */\nfunction () {\n  function SettingsService() {\n    // The variable which controls logging of automatic traces and HTTP/S network monitoring.\n    this.instrumentationEnabled = true; // The variable which controls logging of custom traces.\n\n    this.dataCollectionEnabled = true; // Configuration flags set through remote config.\n\n    this.loggingEnabled = false; // Sampling rate between 0 and 1.\n\n    this.tracesSamplingRate = 1;\n    this.networkRequestsSamplingRate = 1; // Address of logging service.\n\n    this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto'; // Performance event transport endpoint URL which should be compatible with proto3.\n    // New Address for transport service, not configurable via Remote Config.\n\n    this.flTransportEndpointUrl = mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\n    this.transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV'); // Source type for performance event logs.\n\n    this.logSource = 462; // Flags which control per session logging of traces and network requests.\n\n    this.logTraceAfterSampling = false;\n    this.logNetworkAfterSampling = false; // TTL of config retrieved from remote config in hours.\n\n    this.configTimeToLive = 12;\n  }\n\n  SettingsService.prototype.getAppId = function () {\n    var appId = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.appId;\n\n    if (!appId) {\n      throw ERROR_FACTORY.create(\"no app id\"\n      /* NO_APP_ID */\n      );\n    }\n\n    return appId;\n  };\n\n  SettingsService.prototype.getProjectId = function () {\n    var projectId = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.projectId;\n\n    if (!projectId) {\n      throw ERROR_FACTORY.create(\"no project id\"\n      /* NO_PROJECT_ID */\n      );\n    }\n\n    return projectId;\n  };\n\n  SettingsService.prototype.getApiKey = function () {\n    var apiKey = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.apiKey;\n\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(\"no api key\"\n      /* NO_API_KEY */\n      );\n    }\n\n    return apiKey;\n  };\n\n  SettingsService.prototype.getFlTransportFullUrl = function () {\n    return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\n  };\n\n  SettingsService.getInstance = function () {\n    if (settingsServiceInstance === undefined) {\n      settingsServiceInstance = new SettingsService();\n    }\n\n    return settingsServiceInstance;\n  };\n\n  return SettingsService;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar iid;\n\nfunction getIidPromise() {\n  var iidPromise = SettingsService.getInstance().installationsService.getId(); // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n  iidPromise.then(function (iidVal) {\n    iid = iidVal;\n  });\n  return iidPromise;\n} // This method should be used after the iid is retrieved by getIidPromise method.\n\n\nfunction getIid() {\n  return iid;\n}\n\nfunction getAuthTokenPromise() {\n  var authTokenPromise = SettingsService.getInstance().installationsService.getToken(); // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n  authTokenPromise.then(function (authTokenVal) {});\n  return authTokenPromise;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar VisibilityState;\n\n(function (VisibilityState) {\n  VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n  VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\n})(VisibilityState || (VisibilityState = {}));\n\nvar RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\nvar ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\nvar MAX_ATTRIBUTE_NAME_LENGTH = 40;\nvar MAX_ATTRIBUTE_VALUE_LENGTH = 100;\n\nfunction getServiceWorkerStatus() {\n  var navigator = Api.getInstance().navigator;\n\n  if ('serviceWorker' in navigator) {\n    if (navigator.serviceWorker.controller) {\n      return 2\n      /* CONTROLLED */\n      ;\n    } else {\n        return 3\n        /* UNCONTROLLED */\n        ;\n      }\n  } else {\n      return 1\n      /* UNSUPPORTED */\n      ;\n    }\n}\n\nfunction getVisibilityState() {\n  var document = Api.getInstance().document;\n  var visibilityState = document.visibilityState;\n\n  switch (visibilityState) {\n    case 'visible':\n      return VisibilityState.VISIBLE;\n\n    case 'hidden':\n      return VisibilityState.HIDDEN;\n\n    default:\n      return VisibilityState.UNKNOWN;\n  }\n}\n\nfunction getEffectiveConnectionType() {\n  var navigator = Api.getInstance().navigator;\n  var navigatorConnection = navigator.connection;\n  var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\n\n  switch (effectiveType) {\n    case 'slow-2g':\n      return 1\n      /* CONNECTION_SLOW_2G */\n      ;\n\n    case '2g':\n      return 2\n      /* CONNECTION_2G */\n      ;\n\n    case '3g':\n      return 3\n      /* CONNECTION_3G */\n      ;\n\n    case '4g':\n      return 4\n      /* CONNECTION_4G */\n      ;\n\n    default:\n      return 0\n      /* UNKNOWN */\n      ;\n  }\n}\n\nfunction isValidCustomAttributeName(name) {\n  if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\n    return false;\n  }\n\n  var matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(function (prefix) {\n    return name.startsWith(prefix);\n  });\n  return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\n}\n\nfunction isValidCustomAttributeValue(value) {\n  return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1'; // These values will be used if the remote config object is successfully\n// retrieved, but the template does not have these fields.\n\nvar DEFAULT_CONFIGS = {\n  loggingEnabled: true\n};\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\n\nfunction getConfig(iid) {\n  var config = getStoredConfig();\n\n  if (config) {\n    processConfig(config);\n    return Promise.resolve();\n  }\n\n  return getRemoteConfig(iid).then(processConfig).then(function (config) {\n    return storeConfig(config);\n  },\n  /** Do nothing for error, use defaults set in settings service. */\n  function () {});\n}\n\nfunction getStoredConfig() {\n  var localStorage = Api.getInstance().localStorage;\n\n  if (!localStorage) {\n    return;\n  }\n\n  var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\n\n  if (!expiryString || !configValid(expiryString)) {\n    return;\n  }\n\n  var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\n\n  if (!configStringified) {\n    return;\n  }\n\n  try {\n    var configResponse = JSON.parse(configStringified);\n    return configResponse;\n  } catch (_a) {\n    return;\n  }\n}\n\nfunction storeConfig(config) {\n  var localStorage = Api.getInstance().localStorage;\n\n  if (!config || !localStorage) {\n    return;\n  }\n\n  localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\n  localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() + SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\n}\n\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\n\nfunction getRemoteConfig(iid) {\n  // Perf needs auth token only to retrieve remote config.\n  return getAuthTokenPromise().then(function (authToken) {\n    var projectId = SettingsService.getInstance().getProjectId();\n    var configEndPoint = \"https://firebaseremoteconfig.googleapis.com/v1/projects/\" + projectId + \"/namespaces/fireperf:fetch?key=\" + SettingsService.getInstance().getApiKey();\n    var request = new Request(configEndPoint, {\n      method: 'POST',\n      headers: {\n        Authorization: FIS_AUTH_PREFIX + \" \" + authToken\n      },\n\n      /* eslint-disable camelcase */\n      body: JSON.stringify({\n        app_instance_id: iid,\n        app_instance_id_token: authToken,\n        app_id: SettingsService.getInstance().getAppId(),\n        app_version: SDK_VERSION,\n        sdk_version: REMOTE_CONFIG_SDK_VERSION\n      })\n      /* eslint-enable camelcase */\n\n    });\n    return fetch(request).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } // In case response is not ok. This will be caught by catch.\n\n\n      throw ERROR_FACTORY.create(\"RC response not ok\"\n      /* RC_NOT_OK */\n      );\n    });\n  })[\"catch\"](function () {\n    consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\n    return undefined;\n  });\n}\n/**\r\n * Processes config coming either from calling RC or from local storage.\r\n * This method only runs if call is successful or config in storage\r\n * is valid.\r\n */\n\n\nfunction processConfig(config) {\n  if (!config) {\n    return config;\n  }\n\n  var settingsServiceInstance = SettingsService.getInstance();\n  var entries = config.entries || {};\n\n  if (entries.fpr_enabled !== undefined) {\n    // TODO: Change the assignment of loggingEnabled once the received type is\n    // known.\n    settingsServiceInstance.loggingEnabled = String(entries.fpr_enabled) === 'true';\n  } else {\n    // Config retrieved successfully, but there is no fpr_enabled in template.\n    // Use secondary configs value.\n    settingsServiceInstance.loggingEnabled = DEFAULT_CONFIGS.loggingEnabled;\n  }\n\n  if (entries.fpr_log_source) {\n    settingsServiceInstance.logSource = Number(entries.fpr_log_source);\n  }\n\n  if (entries.fpr_log_endpoint_url) {\n    settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\n  } // Key from Remote Config has to be non-empty string, otherwsie use local value.\n\n\n  if (entries.fpr_log_transport_key) {\n    settingsServiceInstance.transportKey = entries.fpr_log_transport_key;\n  }\n\n  if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\n  }\n\n  if (entries.fpr_vc_trace_sampling_rate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\n  } // Set the per session trace and network logging flags.\n\n\n  settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\n  settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\n  return config;\n}\n\nfunction configValid(expiry) {\n  return Number(expiry) > Date.now();\n}\n\nfunction shouldLogAfterSampling(samplingRate) {\n  return Math.random() <= samplingRate;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar initializationStatus = 1\n/* notInitialized */\n;\nvar initializationPromise;\n\nfunction getInitializationPromise() {\n  initializationStatus = 2\n  /* initializationPending */\n  ;\n  initializationPromise = initializationPromise || initializePerf();\n  return initializationPromise;\n}\n\nfunction isPerfInitialized() {\n  return initializationStatus === 3\n  /* initialized */\n  ;\n}\n\nfunction initializePerf() {\n  return getDocumentReadyComplete().then(function () {\n    return getIidPromise();\n  }).then(function (iid) {\n    return getConfig(iid);\n  }).then(function () {\n    return changeInitializationStatus();\n  }, function () {\n    return changeInitializationStatus();\n  });\n}\n/**\r\n * Returns a promise which resolves whenever the document readystate is complete or\r\n * immediately if it is called after page load complete.\r\n */\n\n\nfunction getDocumentReadyComplete() {\n  var document = Api.getInstance().document;\n  return new Promise(function (resolve) {\n    if (document && document.readyState !== 'complete') {\n      var handler_1 = function handler_1() {\n        if (document.readyState === 'complete') {\n          document.removeEventListener('readystatechange', handler_1);\n          resolve();\n        }\n      };\n\n      document.addEventListener('readystatechange', handler_1);\n    } else {\n      resolve();\n    }\n  });\n}\n\nfunction changeInitializationStatus() {\n  initializationStatus = 3\n  /* initialized */\n  ;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000; // If end point does not work, the call will be tried for these many times.\n\nvar DEFAULT_REMAINING_TRIES = 3;\nvar MAX_EVENT_COUNT_PER_REQUEST = 1000;\nvar remainingTries = DEFAULT_REMAINING_TRIES;\n/* eslint-enable camelcase */\n\nvar queue = [];\nvar isTransportSetup = false;\n\nfunction setupTransportService() {\n  if (!isTransportSetup) {\n    processQueue(INITIAL_SEND_TIME_DELAY_MS);\n    isTransportSetup = true;\n  }\n}\n\nfunction processQueue(timeOffset) {\n  setTimeout(function () {\n    // If there is no remainingTries left, stop retrying.\n    if (remainingTries === 0) {\n      return;\n    } // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\n\n\n    if (!queue.length) {\n      return processQueue(DEFAULT_SEND_INTERVAL_MS);\n    }\n\n    dispatchQueueEvents();\n  }, timeOffset);\n}\n\nfunction dispatchQueueEvents() {\n  // Extract events up to the maximum cap of single logRequest from top of \"official queue\".\n  // The staged events will be used for current logRequest attempt, remaining events will be kept\n  // for next attempt.\n  var staged = queue.splice(0, MAX_EVENT_COUNT_PER_REQUEST);\n  /* eslint-disable camelcase */\n  // We will pass the JSON serialized event to the backend.\n\n  var log_event = staged.map(function (evt) {\n    return {\n      source_extension_json_proto3: evt.message,\n      event_time_ms: String(evt.eventTime)\n    };\n  });\n  var data = {\n    request_time_ms: String(Date.now()),\n    client_info: {\n      client_type: 1,\n      js_client_info: {}\n    },\n    log_source: SettingsService.getInstance().logSource,\n    log_event: log_event\n  };\n  /* eslint-enable camelcase */\n\n  sendEventsToFl(data, staged)[\"catch\"](function () {\n    // If the request fails for some reason, add the events that were attempted\n    // back to the primary queue to retry later.\n    queue = (0, _tslib.__spreadArray)((0, _tslib.__spreadArray)([], staged), queue);\n    remainingTries--;\n    consoleLogger.info(\"Tries left: \" + remainingTries + \".\");\n    processQueue(DEFAULT_SEND_INTERVAL_MS);\n  });\n}\n\nfunction sendEventsToFl(data, staged) {\n  return postToFlEndpoint(data).then(function (res) {\n    if (!res.ok) {\n      consoleLogger.info('Call to Firebase backend failed.');\n    }\n\n    return res.json();\n  }).then(function (res) {\n    // Find the next call wait time from the response.\n    var transportWait = Number(res.nextRequestWaitMillis);\n    var requestOffset = DEFAULT_SEND_INTERVAL_MS;\n\n    if (!isNaN(transportWait)) {\n      requestOffset = Math.max(transportWait, requestOffset);\n    } // Delete request if response include RESPONSE_ACTION_UNKNOWN or DELETE_REQUEST action.\n    // Otherwise, retry request using normal scheduling if response include RETRY_REQUEST_LATER.\n\n\n    var logResponseDetails = res.logResponseDetails;\n\n    if (Array.isArray(logResponseDetails) && logResponseDetails.length > 0 && logResponseDetails[0].responseAction === 'RETRY_REQUEST_LATER') {\n      queue = (0, _tslib.__spreadArray)((0, _tslib.__spreadArray)([], staged), queue);\n      consoleLogger.info(\"Retry transport request later.\");\n    }\n\n    remainingTries = DEFAULT_REMAINING_TRIES; // Schedule the next process.\n\n    processQueue(requestOffset);\n  });\n}\n\nfunction postToFlEndpoint(data) {\n  var flTransportFullUrl = SettingsService.getInstance().getFlTransportFullUrl();\n  return fetch(flTransportFullUrl, {\n    method: 'POST',\n    body: JSON.stringify(data)\n  });\n}\n\nfunction addToQueue(evt) {\n  if (!evt.eventTime || !evt.message) {\n    throw ERROR_FACTORY.create(\"invalid cc log\"\n    /* INVALID_CC_LOG */\n    );\n  } // Add the new event to the queue.\n\n\n  queue = (0, _tslib.__spreadArray)((0, _tslib.__spreadArray)([], queue), [evt]);\n}\n/** Log handler for cc service to send the performance logs to the server. */\n\n\nfunction transportHandler( // eslint-disable-next-line @typescript-eslint/no-explicit-any\nserializer) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var message = serializer.apply(void 0, args);\n    addToQueue({\n      message: message,\n      eventTime: Date.now()\n    });\n  };\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/* eslint-enble camelcase */\n\n\nvar logger; // This method is not called before initialization.\n\nfunction sendLog(resource, resourceType) {\n  if (!logger) {\n    logger = transportHandler(serializer);\n  }\n\n  logger(resource, resourceType);\n}\n\nfunction logTrace(trace) {\n  var settingsService = SettingsService.getInstance(); // Do not log if trace is auto generated and instrumentation is disabled.\n\n  if (!settingsService.instrumentationEnabled && trace.isAuto) {\n    return;\n  } // Do not log if trace is custom and data collection is disabled.\n\n\n  if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\n    return;\n  } // Do not log if required apis are not available.\n\n\n  if (!Api.getInstance().requiredApisAvailable()) {\n    return;\n  } // Only log the page load auto traces if page is visible.\n\n\n  if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\n    return;\n  }\n\n  if (isPerfInitialized()) {\n    sendTraceLog(trace);\n  } else {\n    // Custom traces can be used before the initialization but logging\n    // should wait until after.\n    getInitializationPromise().then(function () {\n      return sendTraceLog(trace);\n    }, function () {\n      return sendTraceLog(trace);\n    });\n  }\n}\n\nfunction sendTraceLog(trace) {\n  if (!getIid()) {\n    return;\n  }\n\n  var settingsService = SettingsService.getInstance();\n\n  if (!settingsService.loggingEnabled || !settingsService.logTraceAfterSampling) {\n    return;\n  }\n\n  setTimeout(function () {\n    return sendLog(trace, 1\n    /* Trace */\n    );\n  }, 0);\n}\n\nfunction logNetworkRequest(networkRequest) {\n  var settingsService = SettingsService.getInstance(); // Do not log network requests if instrumentation is disabled.\n\n  if (!settingsService.instrumentationEnabled) {\n    return;\n  } // Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.\n  // Need to blacklist both old and new endpoints to avoid migration gap.\n\n\n  var networkRequestUrl = networkRequest.url; // Blacklist old log endpoint and new transport endpoint.\n  // Because Performance SDK doesn't instrument requests sent from SDK itself.\n\n  var logEndpointUrl = settingsService.logEndPointUrl.split('?')[0];\n  var flEndpointUrl = settingsService.flTransportEndpointUrl.split('?')[0];\n\n  if (networkRequestUrl === logEndpointUrl || networkRequestUrl === flEndpointUrl) {\n    return;\n  }\n\n  if (!settingsService.loggingEnabled || !settingsService.logNetworkAfterSampling) {\n    return;\n  }\n\n  setTimeout(function () {\n    return sendLog(networkRequest, 0\n    /* NetworkRequest */\n    );\n  }, 0);\n}\n\nfunction serializer(resource, resourceType) {\n  if (resourceType === 0\n  /* NetworkRequest */\n  ) {\n      return serializeNetworkRequest(resource);\n    }\n\n  return serializeTrace(resource);\n}\n\nfunction serializeNetworkRequest(networkRequest) {\n  var networkRequestMetric = {\n    url: networkRequest.url,\n    http_method: networkRequest.httpMethod || 0,\n    http_response_code: 200,\n    response_payload_bytes: networkRequest.responsePayloadBytes,\n    client_start_time_us: networkRequest.startTimeUs,\n    time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\n    time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\n  };\n  var perfMetric = {\n    application_info: getApplicationInfo(),\n    network_request_metric: networkRequestMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction serializeTrace(trace) {\n  var traceMetric = {\n    name: trace.name,\n    is_auto: trace.isAuto,\n    client_start_time_us: trace.startTimeUs,\n    duration_us: trace.durationUs\n  };\n\n  if (Object.keys(trace.counters).length !== 0) {\n    traceMetric.counters = trace.counters;\n  }\n\n  var customAttributes = trace.getAttributes();\n\n  if (Object.keys(customAttributes).length !== 0) {\n    traceMetric.custom_attributes = customAttributes;\n  }\n\n  var perfMetric = {\n    application_info: getApplicationInfo(),\n    trace_metric: traceMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction getApplicationInfo() {\n  return {\n    google_app_id: SettingsService.getInstance().getAppId(),\n    app_instance_id: getIid(),\n    web_app_info: {\n      sdk_version: SDK_VERSION,\n      page_url: Api.getInstance().getUrl(),\n      service_worker_status: getServiceWorkerStatus(),\n      visibility_state: getVisibilityState(),\n      effective_connection_type: getEffectiveConnectionType()\n    },\n    application_process_state: 0\n  };\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MAX_METRIC_NAME_LENGTH = 100;\nvar RESERVED_AUTO_PREFIX = '_';\nvar oobMetrics = [FIRST_PAINT_COUNTER_NAME, FIRST_CONTENTFUL_PAINT_COUNTER_NAME, FIRST_INPUT_DELAY_COUNTER_NAME];\n/**\r\n * Returns true if the metric is custom and does not start with reserved prefix, or if\r\n * the metric is one of out of the box page load trace metrics.\r\n */\n\nfunction isValidMetricName(name, traceName) {\n  if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\n    return false;\n  }\n\n  return traceName && traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) && oobMetrics.indexOf(name) > -1 || !name.startsWith(RESERVED_AUTO_PREFIX);\n}\n/**\r\n * Converts the provided value to an integer value to be used in case of a metric.\r\n * @param providedValue Provided number value of the metric that needs to be converted to an integer.\r\n *\r\n * @returns Converted integer number to be set for the metric.\r\n */\n\n\nfunction convertMetricValueToInteger(providedValue) {\n  var valueAsInteger = Math.floor(providedValue);\n\n  if (valueAsInteger < providedValue) {\n    consoleLogger.info(\"Metric value should be an Integer, setting the value as : \" + valueAsInteger + \".\");\n  }\n\n  return valueAsInteger;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Trace =\n/** @class */\nfunction () {\n  /**\r\n   * @param name The name of the trace.\r\n   * @param isAuto If the trace is auto-instrumented.\r\n   * @param traceMeasureName The name of the measure marker in user timing specification. This field\r\n   * is only set when the trace is built for logging when the user directly uses the user timing\r\n   * api (performance.mark and performance.measure).\r\n   */\n  function Trace(name, isAuto, traceMeasureName) {\n    if (isAuto === void 0) {\n      isAuto = false;\n    }\n\n    this.name = name;\n    this.isAuto = isAuto;\n    this.state = 1\n    /* UNINITIALIZED */\n    ;\n    this.customAttributes = {};\n    this.counters = {};\n    this.api = Api.getInstance();\n    this.randomId = Math.floor(Math.random() * 1000000);\n\n    if (!this.isAuto) {\n      this.traceStartMark = TRACE_START_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n      this.traceStopMark = TRACE_STOP_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n      this.traceMeasure = traceMeasureName || TRACE_MEASURE_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n\n      if (traceMeasureName) {\n        // For the case of direct user timing traces, no start stop will happen. The measure object\n        // is already available.\n        this.calculateTraceMetrics();\n      }\n    }\n  }\n  /**\r\n   * Starts a trace. The measurement of the duration starts at this point.\r\n   */\n\n\n  Trace.prototype.start = function () {\n    if (this.state !== 1\n    /* UNINITIALIZED */\n    ) {\n        throw ERROR_FACTORY.create(\"trace started\"\n        /* TRACE_STARTED_BEFORE */\n        , {\n          traceName: this.name\n        });\n      }\n\n    this.api.mark(this.traceStartMark);\n    this.state = 2\n    /* RUNNING */\n    ;\n  };\n  /**\r\n   * Stops the trace. The measurement of the duration of the trace stops at this point and trace\r\n   * is logged.\r\n   */\n\n\n  Trace.prototype.stop = function () {\n    if (this.state !== 2\n    /* RUNNING */\n    ) {\n        throw ERROR_FACTORY.create(\"trace stopped\"\n        /* TRACE_STOPPED_BEFORE */\n        , {\n          traceName: this.name\n        });\n      }\n\n    this.state = 3\n    /* TERMINATED */\n    ;\n    this.api.mark(this.traceStopMark);\n    this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\n    this.calculateTraceMetrics();\n    logTrace(this);\n  };\n  /**\r\n   * Records a trace with predetermined values. If this method is used a trace is created and logged\r\n   * directly. No need to use start and stop methods.\r\n   * @param startTime Trace start time since epoch in millisec\r\n   * @param duration The duraction of the trace in millisec\r\n   * @param options An object which can optionally hold maps of custom metrics and custom attributes\r\n   */\n\n\n  Trace.prototype.record = function (startTime, duration, options) {\n    if (startTime <= 0) {\n      throw ERROR_FACTORY.create(\"nonpositive trace startTime\"\n      /* NONPOSITIVE_TRACE_START_TIME */\n      , {\n        traceName: this.name\n      });\n    }\n\n    if (duration <= 0) {\n      throw ERROR_FACTORY.create(\"nonpositive trace duration\"\n      /* NONPOSITIVE_TRACE_DURATION */\n      , {\n        traceName: this.name\n      });\n    }\n\n    this.durationUs = Math.floor(duration * 1000);\n    this.startTimeUs = Math.floor(startTime * 1000);\n\n    if (options && options.attributes) {\n      this.customAttributes = (0, _tslib.__assign)({}, options.attributes);\n    }\n\n    if (options && options.metrics) {\n      for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\n        var metric = _a[_i];\n\n        if (!isNaN(Number(options.metrics[metric]))) {\n          this.counters[metric] = Number(Math.floor(options.metrics[metric]));\n        }\n      }\n    }\n\n    logTrace(this);\n  };\n  /**\r\n   * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\r\n   * custom metric if one with the given name does not exist. The value will be floored down to an\r\n   * integer.\r\n   * @param counter Name of the custom metric\r\n   * @param numAsInteger Increment by value\r\n   */\n\n\n  Trace.prototype.incrementMetric = function (counter, numAsInteger) {\n    if (numAsInteger === void 0) {\n      numAsInteger = 1;\n    }\n\n    if (this.counters[counter] === undefined) {\n      this.putMetric(counter, numAsInteger);\n    } else {\n      this.putMetric(counter, this.counters[counter] + numAsInteger);\n    }\n  };\n  /**\r\n   * Sets a custom metric to a specified value. Will create a new custom metric if one with the\r\n   * given name does not exist. The value will be floored down to an integer.\r\n   * @param counter Name of the custom metric\r\n   * @param numAsInteger Set custom metric to this value\r\n   */\n\n\n  Trace.prototype.putMetric = function (counter, numAsInteger) {\n    if (isValidMetricName(counter, this.name)) {\n      this.counters[counter] = convertMetricValueToInteger(numAsInteger);\n    } else {\n      throw ERROR_FACTORY.create(\"invalid custom metric name\"\n      /* INVALID_CUSTOM_METRIC_NAME */\n      , {\n        customMetricName: counter\n      });\n    }\n  };\n  /**\r\n   * Returns the value of the custom metric by that name. If a custom metric with that name does\r\n   * not exist will return zero.\r\n   * @param counter\r\n   */\n\n\n  Trace.prototype.getMetric = function (counter) {\n    return this.counters[counter] || 0;\n  };\n  /**\r\n   * Sets a custom attribute of a trace to a certain value.\r\n   * @param attr\r\n   * @param value\r\n   */\n\n\n  Trace.prototype.putAttribute = function (attr, value) {\n    var isValidName = isValidCustomAttributeName(attr);\n    var isValidValue = isValidCustomAttributeValue(value);\n\n    if (isValidName && isValidValue) {\n      this.customAttributes[attr] = value;\n      return;\n    } // Throw appropriate error when the attribute name or value is invalid.\n\n\n    if (!isValidName) {\n      throw ERROR_FACTORY.create(\"invalid attribute name\"\n      /* INVALID_ATTRIBUTE_NAME */\n      , {\n        attributeName: attr\n      });\n    }\n\n    if (!isValidValue) {\n      throw ERROR_FACTORY.create(\"invalid attribute value\"\n      /* INVALID_ATTRIBUTE_VALUE */\n      , {\n        attributeValue: value\n      });\n    }\n  };\n  /**\r\n   * Retrieves the value a custom attribute of a trace is set to.\r\n   * @param attr\r\n   */\n\n\n  Trace.prototype.getAttribute = function (attr) {\n    return this.customAttributes[attr];\n  };\n\n  Trace.prototype.removeAttribute = function (attr) {\n    if (this.customAttributes[attr] === undefined) {\n      return;\n    }\n\n    delete this.customAttributes[attr];\n  };\n\n  Trace.prototype.getAttributes = function () {\n    return (0, _tslib.__assign)({}, this.customAttributes);\n  };\n\n  Trace.prototype.setStartTime = function (startTime) {\n    this.startTimeUs = startTime;\n  };\n\n  Trace.prototype.setDuration = function (duration) {\n    this.durationUs = duration;\n  };\n  /**\r\n   * Calculates and assigns the duration and start time of the trace using the measure performance\r\n   * entry.\r\n   */\n\n\n  Trace.prototype.calculateTraceMetrics = function () {\n    var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\n    var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\n\n    if (perfMeasureEntry) {\n      this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\n      this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\n    }\n  };\n  /**\r\n   * @param navigationTimings A single element array which contains the navigationTIming object of\r\n   * the page load\r\n   * @param paintTimings A array which contains paintTiming object of the page load\r\n   * @param firstInputDelay First input delay in millisec\r\n   */\n\n\n  Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\n    var route = Api.getInstance().getUrl();\n\n    if (!route) {\n      return;\n    }\n\n    var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\n    var timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\n    trace.setStartTime(timeOriginUs); // navigationTimings includes only one element.\n\n    if (navigationTimings && navigationTimings[0]) {\n      trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\n      trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\n      trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\n      trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\n    }\n\n    var FIRST_PAINT = 'first-paint';\n    var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\n\n    if (paintTimings) {\n      var firstPaint = paintTimings.find(function (paintObject) {\n        return paintObject.name === FIRST_PAINT;\n      });\n\n      if (firstPaint && firstPaint.startTime) {\n        trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\n      }\n\n      var firstContentfulPaint = paintTimings.find(function (paintObject) {\n        return paintObject.name === FIRST_CONTENTFUL_PAINT;\n      });\n\n      if (firstContentfulPaint && firstContentfulPaint.startTime) {\n        trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\n      }\n\n      if (firstInputDelay) {\n        trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\n      }\n    }\n\n    logTrace(trace);\n  };\n\n  Trace.createUserTimingTrace = function (measureName) {\n    var trace = new Trace(measureName, false, measureName);\n    logTrace(trace);\n  };\n\n  return Trace;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction createNetworkRequestEntry(entry) {\n  var performanceEntry = entry;\n\n  if (!performanceEntry || performanceEntry.responseStart === undefined) {\n    return;\n  }\n\n  var timeOrigin = Api.getInstance().getTimeOrigin();\n  var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\n  var timeToResponseInitiatedUs = performanceEntry.responseStart ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000) : undefined;\n  var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000); // Remove the query params from logged network request url.\n\n  var url = performanceEntry.name && performanceEntry.name.split('?')[0];\n  var networkRequest = {\n    url: url,\n    responsePayloadBytes: performanceEntry.transferSize,\n    startTimeUs: startTimeUs,\n    timeToResponseInitiatedUs: timeToResponseInitiatedUs,\n    timeToResponseCompletedUs: timeToResponseCompletedUs\n  };\n  logNetworkRequest(networkRequest);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar FID_WAIT_TIME_MS = 5000;\n\nfunction setupOobResources() {\n  // Do not initialize unless iid is available.\n  if (!getIid()) {\n    return;\n  } // The load event might not have fired yet, and that means performance navigation timing\n  // object has a duration of 0. The setup should run after all current tasks in js queue.\n\n\n  setTimeout(function () {\n    return setupOobTraces();\n  }, 0);\n  setTimeout(function () {\n    return setupNetworkRequests();\n  }, 0);\n  setTimeout(function () {\n    return setupUserTimingTraces();\n  }, 0);\n}\n\nfunction setupNetworkRequests() {\n  var api = Api.getInstance();\n  var resources = api.getEntriesByType('resource');\n\n  for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\n    var resource = resources_1[_i];\n    createNetworkRequestEntry(resource);\n  }\n\n  api.setupObserver('resource', createNetworkRequestEntry);\n}\n\nfunction setupOobTraces() {\n  var api = Api.getInstance();\n  var navigationTimings = api.getEntriesByType('navigation');\n  var paintTimings = api.getEntriesByType('paint'); // If First Input Desly polyfill is added to the page, report the fid value.\n  // https://github.com/GoogleChromeLabs/first-input-delay\n\n  if (api.onFirstInputDelay) {\n    // If the fid call back is not called for certain time, continue without it.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var timeoutId_1 = setTimeout(function () {\n      Trace.createOobTrace(navigationTimings, paintTimings);\n      timeoutId_1 = undefined;\n    }, FID_WAIT_TIME_MS);\n    api.onFirstInputDelay(function (fid) {\n      if (timeoutId_1) {\n        clearTimeout(timeoutId_1);\n        Trace.createOobTrace(navigationTimings, paintTimings, fid);\n      }\n    });\n  } else {\n    Trace.createOobTrace(navigationTimings, paintTimings);\n  }\n}\n\nfunction setupUserTimingTraces() {\n  var api = Api.getInstance(); // Run through the measure performance entries collected up to this point.\n\n  var measures = api.getEntriesByType('measure');\n\n  for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\n    var measure = measures_1[_i];\n    createUserTimingTrace(measure);\n  } // Setup an observer to capture the measures from this point on.\n\n\n  api.setupObserver('measure', createUserTimingTrace);\n}\n\nfunction createUserTimingTrace(measure) {\n  var measureName = measure.name; // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\n\n  if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) === TRACE_MEASURE_PREFIX) {\n    return;\n  }\n\n  Trace.createUserTimingTrace(measureName);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PerformanceController =\n/** @class */\nfunction () {\n  function PerformanceController(app) {\n    this.app = app;\n\n    if (Api.getInstance().requiredApisAvailable()) {\n      (0, _util.validateIndexedDBOpenable)().then(function (isAvailable) {\n        if (isAvailable) {\n          setupTransportService();\n          getInitializationPromise().then(setupOobResources, setupOobResources);\n        }\n      })[\"catch\"](function (error) {\n        consoleLogger.info(\"Environment doesn't support IndexedDB: \" + error);\n      });\n    }\n  }\n\n  PerformanceController.prototype.trace = function (name) {\n    return new Trace(name);\n  };\n\n  Object.defineProperty(PerformanceController.prototype, \"instrumentationEnabled\", {\n    get: function get() {\n      return SettingsService.getInstance().instrumentationEnabled;\n    },\n    set: function set(val) {\n      SettingsService.getInstance().instrumentationEnabled = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PerformanceController.prototype, \"dataCollectionEnabled\", {\n    get: function get() {\n      return SettingsService.getInstance().dataCollectionEnabled;\n    },\n    set: function set(val) {\n      SettingsService.getInstance().dataCollectionEnabled = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return PerformanceController;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nfunction registerPerformance(instance) {\n  var factoryMethod = function factoryMethod(app, installations) {\n    if (app.name !== DEFAULT_ENTRY_NAME) {\n      throw ERROR_FACTORY.create(\"FB not default\"\n      /* FB_NOT_DEFAULT */\n      );\n    }\n\n    if (typeof window === 'undefined') {\n      throw ERROR_FACTORY.create(\"no window\"\n      /* NO_WINDOW */\n      );\n    }\n\n    setupApi(window);\n    SettingsService.getInstance().firebaseAppInstance = app;\n    SettingsService.getInstance().installationsService = installations;\n    return new PerformanceController(app);\n  }; // Register performance with firebase-app.\n\n\n  instance.INTERNAL.registerComponent(new _component.Component('performance', function (container) {\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate(); // The following call will always succeed because perf has `import '@firebase/installations'`\n\n    var installations = container.getProvider('installations').getImmediate();\n    return factoryMethod(app, installations);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ));\n  instance.registerVersion(name, version);\n}\n\nregisterPerformance(_app[\"default\"]);\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$firebase$util$dist$index_esm","~$module$node_modules$tslib$tslib","~$shadow.js","~$module$node_modules$$firebase$installations$dist$index_cjs","~$module$node_modules$$firebase$app$dist$index_esm","~$module$node_modules$$firebase$component$dist$index_esm","~$module$node_modules$$firebase$logger$dist$index_cjs"]],"~:properties",["^5",["stop","getProjectId","startTimeUs","window","message","source_extension_json_proto3","createOobTrace","traceMeasure","event_time_ms","time_to_response_initiated_us","incrementMetric","navigator","js_client_info","attributeName","url","flTransportEndpointUrl","app_version","body","getUrl","Authorization","traceStartMark","setDuration","client_type","logLevel","getEntriesByType","tracesSamplingRate","logNetworkAfterSampling","getEntriesByName","network_request_metric","record","customAttributes","installationsService","trace","method","http_method","measure","__esModule","getTimeOrigin","getMetric","putMetric","durationUs","timeToResponseInitiatedUs","client_start_time_us","counters","setStartTime","logTraceAfterSampling","getAttribute","document","firebaseAppInstance","name","configurable","visibility_state","value","entryTypes","service_worker_status","removeAttribute","enumerable","custom_attributes","instrumentationEnabled","web_app_info","getInstance","effective_connection_type","start","networkRequestsSamplingRate","calculateTraceMetrics","createUserTimingTrace","configTimeToLive","log_source","client_info","isAuto","timeToResponseCompletedUs","traceName","requiredApisAvailable","PerformanceObserver","getApiKey","localStorage","app_instance_id_token","onFirstInputDelay","time_to_response_completed_us","responsePayloadBytes","app","api","request_time_ms","state","logEndPointUrl","log_event","is_auto","getAppId","application_process_state","application_info","getFlTransportFullUrl","set","trace_metric","google_app_id","transportKey","traceStopMark","registerPerformance","performance","app_id","app_instance_id","page_url","mark","windowLocation","logSource","get","attributeValue","setupObserver","http_response_code","eventTime","getAttributes","dataCollectionEnabled","customMetricName","sdk_version","duration_us","putAttribute","loggingEnabled","randomId","headers","response_payload_bytes"]],"~:compiled-at",1627823146984,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$firebase$performance$dist$index_esm.js\",\n\"lineCount\":48,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@firebase/performance/dist/index.esm.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$firebase$performance$dist$index_esm\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.registerPerformance = registerPerformance;\\n\\nvar _app = _interopRequireDefault(require(\\\"@firebase/app\\\"));\\n\\nrequire(\\\"@firebase/installations\\\");\\n\\nvar _tslib = require(\\\"tslib\\\");\\n\\nvar _util = require(\\\"@firebase/util\\\");\\n\\nvar _logger = require(\\\"@firebase/logger\\\");\\n\\nvar _component = require(\\\"@firebase/component\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\nvar name = \\\"@firebase/performance\\\";\\nvar version = \\\"0.4.17\\\";\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\nvar SDK_VERSION = version;\\n/** The prefix for start User Timing marks used for creating Traces. */\\n\\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\\n/** The prefix for stop User Timing marks used for creating Traces. */\\n\\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\\n/** The prefix for User Timing measure used for creating Traces. */\\n\\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\\n/** The prefix for out of the box page load Trace name. */\\n\\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\\nvar SERVICE = 'performance';\\nvar SERVICE_NAME = 'Performance';\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\nvar _a;\\n\\nvar ERROR_DESCRIPTION_MAP = (_a = {}, _a[\\\"trace started\\\"\\n/* TRACE_STARTED_BEFORE */\\n] = 'Trace {$traceName} was started before.', _a[\\\"trace stopped\\\"\\n/* TRACE_STOPPED_BEFORE */\\n] = 'Trace {$traceName} is not running.', _a[\\\"nonpositive trace startTime\\\"\\n/* NONPOSITIVE_TRACE_START_TIME */\\n] = 'Trace {$traceName} startTime should be positive.', _a[\\\"nonpositive trace duration\\\"\\n/* NONPOSITIVE_TRACE_DURATION */\\n] = 'Trace {$traceName} duration should be positive.', _a[\\\"no window\\\"\\n/* NO_WINDOW */\\n] = 'Window is not available.', _a[\\\"no app id\\\"\\n/* NO_APP_ID */\\n] = 'App id is not available.', _a[\\\"no project id\\\"\\n/* NO_PROJECT_ID */\\n] = 'Project id is not available.', _a[\\\"no api key\\\"\\n/* NO_API_KEY */\\n] = 'Api key is not available.', _a[\\\"invalid cc log\\\"\\n/* INVALID_CC_LOG */\\n] = 'Attempted to queue invalid cc event', _a[\\\"FB not default\\\"\\n/* FB_NOT_DEFAULT */\\n] = 'Performance can only start when Firebase app instance is the default one.', _a[\\\"RC response not ok\\\"\\n/* RC_NOT_OK */\\n] = 'RC response is not ok', _a[\\\"invalid attribute name\\\"\\n/* INVALID_ATTRIBUTE_NAME */\\n] = 'Attribute name {$attributeName} is invalid.', _a[\\\"invalid attribute value\\\"\\n/* INVALID_ATTRIBUTE_VALUE */\\n] = 'Attribute value {$attributeValue} is invalid.', _a[\\\"invalid custom metric name\\\"\\n/* INVALID_CUSTOM_METRIC_NAME */\\n] = 'Custom metric name {$customMetricName} is invalid', _a[\\\"invalid String merger input\\\"\\n/* INVALID_STRING_MERGER_PARAMETER */\\n] = 'Input for String merger is invalid, contact support team to resolve.', _a);\\nvar ERROR_FACTORY = new _util.ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\nvar consoleLogger = new _logger.Logger(SERVICE_NAME);\\nconsoleLogger.logLevel = _logger.LogLevel.INFO;\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\nvar apiInstance;\\nvar windowInstance;\\n/**\\r\\n * This class holds a reference to various browser related objects injected by\\r\\n * set methods.\\r\\n */\\n\\nvar Api =\\n/** @class */\\nfunction () {\\n  function Api(window) {\\n    this.window = window;\\n\\n    if (!window) {\\n      throw ERROR_FACTORY.create(\\\"no window\\\"\\n      /* NO_WINDOW */\\n      );\\n    }\\n\\n    this.performance = window.performance;\\n    this.PerformanceObserver = window.PerformanceObserver;\\n    this.windowLocation = window.location;\\n    this.navigator = window.navigator;\\n    this.document = window.document;\\n\\n    if (this.navigator && this.navigator.cookieEnabled) {\\n      // If user blocks cookies on the browser, accessing localStorage will\\n      // throw an exception.\\n      this.localStorage = window.localStorage;\\n    }\\n\\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\\n      this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\\n    }\\n  }\\n\\n  Api.prototype.getUrl = function () {\\n    // Do not capture the string query part of url.\\n    return this.windowLocation.href.split('?')[0];\\n  };\\n\\n  Api.prototype.mark = function (name) {\\n    if (!this.performance || !this.performance.mark) {\\n      return;\\n    }\\n\\n    this.performance.mark(name);\\n  };\\n\\n  Api.prototype.measure = function (measureName, mark1, mark2) {\\n    if (!this.performance || !this.performance.measure) {\\n      return;\\n    }\\n\\n    this.performance.measure(measureName, mark1, mark2);\\n  };\\n\\n  Api.prototype.getEntriesByType = function (type) {\\n    if (!this.performance || !this.performance.getEntriesByType) {\\n      return [];\\n    }\\n\\n    return this.performance.getEntriesByType(type);\\n  };\\n\\n  Api.prototype.getEntriesByName = function (name) {\\n    if (!this.performance || !this.performance.getEntriesByName) {\\n      return [];\\n    }\\n\\n    return this.performance.getEntriesByName(name);\\n  };\\n\\n  Api.prototype.getTimeOrigin = function () {\\n    // Polyfill the time origin with performance.timing.navigationStart.\\n    return this.performance && (this.performance.timeOrigin || this.performance.timing.navigationStart);\\n  };\\n\\n  Api.prototype.requiredApisAvailable = function () {\\n    if (!fetch || !Promise || !this.navigator || !this.navigator.cookieEnabled) {\\n      consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\\n      return false;\\n    }\\n\\n    if (!(0, _util.isIndexedDBAvailable)()) {\\n      consoleLogger.info('IndexedDB is not supported by current browswer');\\n      return false;\\n    }\\n\\n    return true;\\n  };\\n\\n  Api.prototype.setupObserver = function (entryType, callback) {\\n    if (!this.PerformanceObserver) {\\n      return;\\n    }\\n\\n    var observer = new this.PerformanceObserver(function (list) {\\n      for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\\n        var entry = _a[_i]; // `entry` is a PerformanceEntry instance.\\n\\n        callback(entry);\\n      }\\n    }); // Start observing the entry types you care about.\\n\\n    observer.observe({\\n      entryTypes: [entryType]\\n    });\\n  };\\n\\n  Api.getInstance = function () {\\n    if (apiInstance === undefined) {\\n      apiInstance = new Api(windowInstance);\\n    }\\n\\n    return apiInstance;\\n  };\\n\\n  return Api;\\n}();\\n\\nfunction setupApi(window) {\\n  windowInstance = window;\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nfunction mergeStrings(part1, part2) {\\n  var sizeDiff = part1.length - part2.length;\\n\\n  if (sizeDiff < 0 || sizeDiff > 1) {\\n    throw ERROR_FACTORY.create(\\\"invalid String merger input\\\"\\n    /* INVALID_STRING_MERGER_PARAMETER */\\n    );\\n  }\\n\\n  var resultArray = [];\\n\\n  for (var i = 0; i < part1.length; i++) {\\n    resultArray.push(part1.charAt(i));\\n\\n    if (part2.length > i) {\\n      resultArray.push(part2.charAt(i));\\n    }\\n  }\\n\\n  return resultArray.join('');\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar settingsServiceInstance;\\n\\nvar SettingsService =\\n/** @class */\\nfunction () {\\n  function SettingsService() {\\n    // The variable which controls logging of automatic traces and HTTP/S network monitoring.\\n    this.instrumentationEnabled = true; // The variable which controls logging of custom traces.\\n\\n    this.dataCollectionEnabled = true; // Configuration flags set through remote config.\\n\\n    this.loggingEnabled = false; // Sampling rate between 0 and 1.\\n\\n    this.tracesSamplingRate = 1;\\n    this.networkRequestsSamplingRate = 1; // Address of logging service.\\n\\n    this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto'; // Performance event transport endpoint URL which should be compatible with proto3.\\n    // New Address for transport service, not configurable via Remote Config.\\n\\n    this.flTransportEndpointUrl = mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\\n    this.transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV'); // Source type for performance event logs.\\n\\n    this.logSource = 462; // Flags which control per session logging of traces and network requests.\\n\\n    this.logTraceAfterSampling = false;\\n    this.logNetworkAfterSampling = false; // TTL of config retrieved from remote config in hours.\\n\\n    this.configTimeToLive = 12;\\n  }\\n\\n  SettingsService.prototype.getAppId = function () {\\n    var appId = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.appId;\\n\\n    if (!appId) {\\n      throw ERROR_FACTORY.create(\\\"no app id\\\"\\n      /* NO_APP_ID */\\n      );\\n    }\\n\\n    return appId;\\n  };\\n\\n  SettingsService.prototype.getProjectId = function () {\\n    var projectId = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.projectId;\\n\\n    if (!projectId) {\\n      throw ERROR_FACTORY.create(\\\"no project id\\\"\\n      /* NO_PROJECT_ID */\\n      );\\n    }\\n\\n    return projectId;\\n  };\\n\\n  SettingsService.prototype.getApiKey = function () {\\n    var apiKey = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.apiKey;\\n\\n    if (!apiKey) {\\n      throw ERROR_FACTORY.create(\\\"no api key\\\"\\n      /* NO_API_KEY */\\n      );\\n    }\\n\\n    return apiKey;\\n  };\\n\\n  SettingsService.prototype.getFlTransportFullUrl = function () {\\n    return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\\n  };\\n\\n  SettingsService.getInstance = function () {\\n    if (settingsServiceInstance === undefined) {\\n      settingsServiceInstance = new SettingsService();\\n    }\\n\\n    return settingsServiceInstance;\\n  };\\n\\n  return SettingsService;\\n}();\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar iid;\\n\\nfunction getIidPromise() {\\n  var iidPromise = SettingsService.getInstance().installationsService.getId(); // eslint-disable-next-line @typescript-eslint/no-floating-promises\\n\\n  iidPromise.then(function (iidVal) {\\n    iid = iidVal;\\n  });\\n  return iidPromise;\\n} // This method should be used after the iid is retrieved by getIidPromise method.\\n\\n\\nfunction getIid() {\\n  return iid;\\n}\\n\\nfunction getAuthTokenPromise() {\\n  var authTokenPromise = SettingsService.getInstance().installationsService.getToken(); // eslint-disable-next-line @typescript-eslint/no-floating-promises\\n\\n  authTokenPromise.then(function (authTokenVal) {});\\n  return authTokenPromise;\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar VisibilityState;\\n\\n(function (VisibilityState) {\\n  VisibilityState[VisibilityState[\\\"UNKNOWN\\\"] = 0] = \\\"UNKNOWN\\\";\\n  VisibilityState[VisibilityState[\\\"VISIBLE\\\"] = 1] = \\\"VISIBLE\\\";\\n  VisibilityState[VisibilityState[\\\"HIDDEN\\\"] = 2] = \\\"HIDDEN\\\";\\n})(VisibilityState || (VisibilityState = {}));\\n\\nvar RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\\nvar ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\\\\\w*$');\\nvar MAX_ATTRIBUTE_NAME_LENGTH = 40;\\nvar MAX_ATTRIBUTE_VALUE_LENGTH = 100;\\n\\nfunction getServiceWorkerStatus() {\\n  var navigator = Api.getInstance().navigator;\\n\\n  if ('serviceWorker' in navigator) {\\n    if (navigator.serviceWorker.controller) {\\n      return 2\\n      /* CONTROLLED */\\n      ;\\n    } else {\\n        return 3\\n        /* UNCONTROLLED */\\n        ;\\n      }\\n  } else {\\n      return 1\\n      /* UNSUPPORTED */\\n      ;\\n    }\\n}\\n\\nfunction getVisibilityState() {\\n  var document = Api.getInstance().document;\\n  var visibilityState = document.visibilityState;\\n\\n  switch (visibilityState) {\\n    case 'visible':\\n      return VisibilityState.VISIBLE;\\n\\n    case 'hidden':\\n      return VisibilityState.HIDDEN;\\n\\n    default:\\n      return VisibilityState.UNKNOWN;\\n  }\\n}\\n\\nfunction getEffectiveConnectionType() {\\n  var navigator = Api.getInstance().navigator;\\n  var navigatorConnection = navigator.connection;\\n  var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\\n\\n  switch (effectiveType) {\\n    case 'slow-2g':\\n      return 1\\n      /* CONNECTION_SLOW_2G */\\n      ;\\n\\n    case '2g':\\n      return 2\\n      /* CONNECTION_2G */\\n      ;\\n\\n    case '3g':\\n      return 3\\n      /* CONNECTION_3G */\\n      ;\\n\\n    case '4g':\\n      return 4\\n      /* CONNECTION_4G */\\n      ;\\n\\n    default:\\n      return 0\\n      /* UNKNOWN */\\n      ;\\n  }\\n}\\n\\nfunction isValidCustomAttributeName(name) {\\n  if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\\n    return false;\\n  }\\n\\n  var matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(function (prefix) {\\n    return name.startsWith(prefix);\\n  });\\n  return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\\n}\\n\\nfunction isValidCustomAttributeValue(value) {\\n  return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1'; // These values will be used if the remote config object is successfully\\n// retrieved, but the template does not have these fields.\\n\\nvar DEFAULT_CONFIGS = {\\n  loggingEnabled: true\\n};\\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\\n\\nfunction getConfig(iid) {\\n  var config = getStoredConfig();\\n\\n  if (config) {\\n    processConfig(config);\\n    return Promise.resolve();\\n  }\\n\\n  return getRemoteConfig(iid).then(processConfig).then(function (config) {\\n    return storeConfig(config);\\n  },\\n  /** Do nothing for error, use defaults set in settings service. */\\n  function () {});\\n}\\n\\nfunction getStoredConfig() {\\n  var localStorage = Api.getInstance().localStorage;\\n\\n  if (!localStorage) {\\n    return;\\n  }\\n\\n  var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\\n\\n  if (!expiryString || !configValid(expiryString)) {\\n    return;\\n  }\\n\\n  var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\\n\\n  if (!configStringified) {\\n    return;\\n  }\\n\\n  try {\\n    var configResponse = JSON.parse(configStringified);\\n    return configResponse;\\n  } catch (_a) {\\n    return;\\n  }\\n}\\n\\nfunction storeConfig(config) {\\n  var localStorage = Api.getInstance().localStorage;\\n\\n  if (!config || !localStorage) {\\n    return;\\n  }\\n\\n  localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\\n  localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() + SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\\n}\\n\\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\\n\\nfunction getRemoteConfig(iid) {\\n  // Perf needs auth token only to retrieve remote config.\\n  return getAuthTokenPromise().then(function (authToken) {\\n    var projectId = SettingsService.getInstance().getProjectId();\\n    var configEndPoint = \\\"https://firebaseremoteconfig.googleapis.com/v1/projects/\\\" + projectId + \\\"/namespaces/fireperf:fetch?key=\\\" + SettingsService.getInstance().getApiKey();\\n    var request = new Request(configEndPoint, {\\n      method: 'POST',\\n      headers: {\\n        Authorization: FIS_AUTH_PREFIX + \\\" \\\" + authToken\\n      },\\n\\n      /* eslint-disable camelcase */\\n      body: JSON.stringify({\\n        app_instance_id: iid,\\n        app_instance_id_token: authToken,\\n        app_id: SettingsService.getInstance().getAppId(),\\n        app_version: SDK_VERSION,\\n        sdk_version: REMOTE_CONFIG_SDK_VERSION\\n      })\\n      /* eslint-enable camelcase */\\n\\n    });\\n    return fetch(request).then(function (response) {\\n      if (response.ok) {\\n        return response.json();\\n      } // In case response is not ok. This will be caught by catch.\\n\\n\\n      throw ERROR_FACTORY.create(\\\"RC response not ok\\\"\\n      /* RC_NOT_OK */\\n      );\\n    });\\n  })[\\\"catch\\\"](function () {\\n    consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\\n    return undefined;\\n  });\\n}\\n/**\\r\\n * Processes config coming either from calling RC or from local storage.\\r\\n * This method only runs if call is successful or config in storage\\r\\n * is valid.\\r\\n */\\n\\n\\nfunction processConfig(config) {\\n  if (!config) {\\n    return config;\\n  }\\n\\n  var settingsServiceInstance = SettingsService.getInstance();\\n  var entries = config.entries || {};\\n\\n  if (entries.fpr_enabled !== undefined) {\\n    // TODO: Change the assignment of loggingEnabled once the received type is\\n    // known.\\n    settingsServiceInstance.loggingEnabled = String(entries.fpr_enabled) === 'true';\\n  } else {\\n    // Config retrieved successfully, but there is no fpr_enabled in template.\\n    // Use secondary configs value.\\n    settingsServiceInstance.loggingEnabled = DEFAULT_CONFIGS.loggingEnabled;\\n  }\\n\\n  if (entries.fpr_log_source) {\\n    settingsServiceInstance.logSource = Number(entries.fpr_log_source);\\n  }\\n\\n  if (entries.fpr_log_endpoint_url) {\\n    settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\\n  } // Key from Remote Config has to be non-empty string, otherwsie use local value.\\n\\n\\n  if (entries.fpr_log_transport_key) {\\n    settingsServiceInstance.transportKey = entries.fpr_log_transport_key;\\n  }\\n\\n  if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\\n    settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\\n  }\\n\\n  if (entries.fpr_vc_trace_sampling_rate !== undefined) {\\n    settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\\n  } // Set the per session trace and network logging flags.\\n\\n\\n  settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\\n  settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\\n  return config;\\n}\\n\\nfunction configValid(expiry) {\\n  return Number(expiry) > Date.now();\\n}\\n\\nfunction shouldLogAfterSampling(samplingRate) {\\n  return Math.random() <= samplingRate;\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar initializationStatus = 1\\n/* notInitialized */\\n;\\nvar initializationPromise;\\n\\nfunction getInitializationPromise() {\\n  initializationStatus = 2\\n  /* initializationPending */\\n  ;\\n  initializationPromise = initializationPromise || initializePerf();\\n  return initializationPromise;\\n}\\n\\nfunction isPerfInitialized() {\\n  return initializationStatus === 3\\n  /* initialized */\\n  ;\\n}\\n\\nfunction initializePerf() {\\n  return getDocumentReadyComplete().then(function () {\\n    return getIidPromise();\\n  }).then(function (iid) {\\n    return getConfig(iid);\\n  }).then(function () {\\n    return changeInitializationStatus();\\n  }, function () {\\n    return changeInitializationStatus();\\n  });\\n}\\n/**\\r\\n * Returns a promise which resolves whenever the document readystate is complete or\\r\\n * immediately if it is called after page load complete.\\r\\n */\\n\\n\\nfunction getDocumentReadyComplete() {\\n  var document = Api.getInstance().document;\\n  return new Promise(function (resolve) {\\n    if (document && document.readyState !== 'complete') {\\n      var handler_1 = function handler_1() {\\n        if (document.readyState === 'complete') {\\n          document.removeEventListener('readystatechange', handler_1);\\n          resolve();\\n        }\\n      };\\n\\n      document.addEventListener('readystatechange', handler_1);\\n    } else {\\n      resolve();\\n    }\\n  });\\n}\\n\\nfunction changeInitializationStatus() {\\n  initializationStatus = 3\\n  /* initialized */\\n  ;\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000; // If end point does not work, the call will be tried for these many times.\\n\\nvar DEFAULT_REMAINING_TRIES = 3;\\nvar MAX_EVENT_COUNT_PER_REQUEST = 1000;\\nvar remainingTries = DEFAULT_REMAINING_TRIES;\\n/* eslint-enable camelcase */\\n\\nvar queue = [];\\nvar isTransportSetup = false;\\n\\nfunction setupTransportService() {\\n  if (!isTransportSetup) {\\n    processQueue(INITIAL_SEND_TIME_DELAY_MS);\\n    isTransportSetup = true;\\n  }\\n}\\n\\nfunction processQueue(timeOffset) {\\n  setTimeout(function () {\\n    // If there is no remainingTries left, stop retrying.\\n    if (remainingTries === 0) {\\n      return;\\n    } // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\\n\\n\\n    if (!queue.length) {\\n      return processQueue(DEFAULT_SEND_INTERVAL_MS);\\n    }\\n\\n    dispatchQueueEvents();\\n  }, timeOffset);\\n}\\n\\nfunction dispatchQueueEvents() {\\n  // Extract events up to the maximum cap of single logRequest from top of \\\"official queue\\\".\\n  // The staged events will be used for current logRequest attempt, remaining events will be kept\\n  // for next attempt.\\n  var staged = queue.splice(0, MAX_EVENT_COUNT_PER_REQUEST);\\n  /* eslint-disable camelcase */\\n  // We will pass the JSON serialized event to the backend.\\n\\n  var log_event = staged.map(function (evt) {\\n    return {\\n      source_extension_json_proto3: evt.message,\\n      event_time_ms: String(evt.eventTime)\\n    };\\n  });\\n  var data = {\\n    request_time_ms: String(Date.now()),\\n    client_info: {\\n      client_type: 1,\\n      js_client_info: {}\\n    },\\n    log_source: SettingsService.getInstance().logSource,\\n    log_event: log_event\\n  };\\n  /* eslint-enable camelcase */\\n\\n  sendEventsToFl(data, staged)[\\\"catch\\\"](function () {\\n    // If the request fails for some reason, add the events that were attempted\\n    // back to the primary queue to retry later.\\n    queue = (0, _tslib.__spreadArray)((0, _tslib.__spreadArray)([], staged), queue);\\n    remainingTries--;\\n    consoleLogger.info(\\\"Tries left: \\\" + remainingTries + \\\".\\\");\\n    processQueue(DEFAULT_SEND_INTERVAL_MS);\\n  });\\n}\\n\\nfunction sendEventsToFl(data, staged) {\\n  return postToFlEndpoint(data).then(function (res) {\\n    if (!res.ok) {\\n      consoleLogger.info('Call to Firebase backend failed.');\\n    }\\n\\n    return res.json();\\n  }).then(function (res) {\\n    // Find the next call wait time from the response.\\n    var transportWait = Number(res.nextRequestWaitMillis);\\n    var requestOffset = DEFAULT_SEND_INTERVAL_MS;\\n\\n    if (!isNaN(transportWait)) {\\n      requestOffset = Math.max(transportWait, requestOffset);\\n    } // Delete request if response include RESPONSE_ACTION_UNKNOWN or DELETE_REQUEST action.\\n    // Otherwise, retry request using normal scheduling if response include RETRY_REQUEST_LATER.\\n\\n\\n    var logResponseDetails = res.logResponseDetails;\\n\\n    if (Array.isArray(logResponseDetails) && logResponseDetails.length > 0 && logResponseDetails[0].responseAction === 'RETRY_REQUEST_LATER') {\\n      queue = (0, _tslib.__spreadArray)((0, _tslib.__spreadArray)([], staged), queue);\\n      consoleLogger.info(\\\"Retry transport request later.\\\");\\n    }\\n\\n    remainingTries = DEFAULT_REMAINING_TRIES; // Schedule the next process.\\n\\n    processQueue(requestOffset);\\n  });\\n}\\n\\nfunction postToFlEndpoint(data) {\\n  var flTransportFullUrl = SettingsService.getInstance().getFlTransportFullUrl();\\n  return fetch(flTransportFullUrl, {\\n    method: 'POST',\\n    body: JSON.stringify(data)\\n  });\\n}\\n\\nfunction addToQueue(evt) {\\n  if (!evt.eventTime || !evt.message) {\\n    throw ERROR_FACTORY.create(\\\"invalid cc log\\\"\\n    /* INVALID_CC_LOG */\\n    );\\n  } // Add the new event to the queue.\\n\\n\\n  queue = (0, _tslib.__spreadArray)((0, _tslib.__spreadArray)([], queue), [evt]);\\n}\\n/** Log handler for cc service to send the performance logs to the server. */\\n\\n\\nfunction transportHandler( // eslint-disable-next-line @typescript-eslint/no-explicit-any\\nserializer) {\\n  return function () {\\n    var args = [];\\n\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n      args[_i] = arguments[_i];\\n    }\\n\\n    var message = serializer.apply(void 0, args);\\n    addToQueue({\\n      message: message,\\n      eventTime: Date.now()\\n    });\\n  };\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/* eslint-enble camelcase */\\n\\n\\nvar logger; // This method is not called before initialization.\\n\\nfunction sendLog(resource, resourceType) {\\n  if (!logger) {\\n    logger = transportHandler(serializer);\\n  }\\n\\n  logger(resource, resourceType);\\n}\\n\\nfunction logTrace(trace) {\\n  var settingsService = SettingsService.getInstance(); // Do not log if trace is auto generated and instrumentation is disabled.\\n\\n  if (!settingsService.instrumentationEnabled && trace.isAuto) {\\n    return;\\n  } // Do not log if trace is custom and data collection is disabled.\\n\\n\\n  if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\\n    return;\\n  } // Do not log if required apis are not available.\\n\\n\\n  if (!Api.getInstance().requiredApisAvailable()) {\\n    return;\\n  } // Only log the page load auto traces if page is visible.\\n\\n\\n  if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\\n    return;\\n  }\\n\\n  if (isPerfInitialized()) {\\n    sendTraceLog(trace);\\n  } else {\\n    // Custom traces can be used before the initialization but logging\\n    // should wait until after.\\n    getInitializationPromise().then(function () {\\n      return sendTraceLog(trace);\\n    }, function () {\\n      return sendTraceLog(trace);\\n    });\\n  }\\n}\\n\\nfunction sendTraceLog(trace) {\\n  if (!getIid()) {\\n    return;\\n  }\\n\\n  var settingsService = SettingsService.getInstance();\\n\\n  if (!settingsService.loggingEnabled || !settingsService.logTraceAfterSampling) {\\n    return;\\n  }\\n\\n  setTimeout(function () {\\n    return sendLog(trace, 1\\n    /* Trace */\\n    );\\n  }, 0);\\n}\\n\\nfunction logNetworkRequest(networkRequest) {\\n  var settingsService = SettingsService.getInstance(); // Do not log network requests if instrumentation is disabled.\\n\\n  if (!settingsService.instrumentationEnabled) {\\n    return;\\n  } // Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.\\n  // Need to blacklist both old and new endpoints to avoid migration gap.\\n\\n\\n  var networkRequestUrl = networkRequest.url; // Blacklist old log endpoint and new transport endpoint.\\n  // Because Performance SDK doesn't instrument requests sent from SDK itself.\\n\\n  var logEndpointUrl = settingsService.logEndPointUrl.split('?')[0];\\n  var flEndpointUrl = settingsService.flTransportEndpointUrl.split('?')[0];\\n\\n  if (networkRequestUrl === logEndpointUrl || networkRequestUrl === flEndpointUrl) {\\n    return;\\n  }\\n\\n  if (!settingsService.loggingEnabled || !settingsService.logNetworkAfterSampling) {\\n    return;\\n  }\\n\\n  setTimeout(function () {\\n    return sendLog(networkRequest, 0\\n    /* NetworkRequest */\\n    );\\n  }, 0);\\n}\\n\\nfunction serializer(resource, resourceType) {\\n  if (resourceType === 0\\n  /* NetworkRequest */\\n  ) {\\n      return serializeNetworkRequest(resource);\\n    }\\n\\n  return serializeTrace(resource);\\n}\\n\\nfunction serializeNetworkRequest(networkRequest) {\\n  var networkRequestMetric = {\\n    url: networkRequest.url,\\n    http_method: networkRequest.httpMethod || 0,\\n    http_response_code: 200,\\n    response_payload_bytes: networkRequest.responsePayloadBytes,\\n    client_start_time_us: networkRequest.startTimeUs,\\n    time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\\n    time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\\n  };\\n  var perfMetric = {\\n    application_info: getApplicationInfo(),\\n    network_request_metric: networkRequestMetric\\n  };\\n  return JSON.stringify(perfMetric);\\n}\\n\\nfunction serializeTrace(trace) {\\n  var traceMetric = {\\n    name: trace.name,\\n    is_auto: trace.isAuto,\\n    client_start_time_us: trace.startTimeUs,\\n    duration_us: trace.durationUs\\n  };\\n\\n  if (Object.keys(trace.counters).length !== 0) {\\n    traceMetric.counters = trace.counters;\\n  }\\n\\n  var customAttributes = trace.getAttributes();\\n\\n  if (Object.keys(customAttributes).length !== 0) {\\n    traceMetric.custom_attributes = customAttributes;\\n  }\\n\\n  var perfMetric = {\\n    application_info: getApplicationInfo(),\\n    trace_metric: traceMetric\\n  };\\n  return JSON.stringify(perfMetric);\\n}\\n\\nfunction getApplicationInfo() {\\n  return {\\n    google_app_id: SettingsService.getInstance().getAppId(),\\n    app_instance_id: getIid(),\\n    web_app_info: {\\n      sdk_version: SDK_VERSION,\\n      page_url: Api.getInstance().getUrl(),\\n      service_worker_status: getServiceWorkerStatus(),\\n      visibility_state: getVisibilityState(),\\n      effective_connection_type: getEffectiveConnectionType()\\n    },\\n    application_process_state: 0\\n  };\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar MAX_METRIC_NAME_LENGTH = 100;\\nvar RESERVED_AUTO_PREFIX = '_';\\nvar oobMetrics = [FIRST_PAINT_COUNTER_NAME, FIRST_CONTENTFUL_PAINT_COUNTER_NAME, FIRST_INPUT_DELAY_COUNTER_NAME];\\n/**\\r\\n * Returns true if the metric is custom and does not start with reserved prefix, or if\\r\\n * the metric is one of out of the box page load trace metrics.\\r\\n */\\n\\nfunction isValidMetricName(name, traceName) {\\n  if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\\n    return false;\\n  }\\n\\n  return traceName && traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) && oobMetrics.indexOf(name) > -1 || !name.startsWith(RESERVED_AUTO_PREFIX);\\n}\\n/**\\r\\n * Converts the provided value to an integer value to be used in case of a metric.\\r\\n * @param providedValue Provided number value of the metric that needs to be converted to an integer.\\r\\n *\\r\\n * @returns Converted integer number to be set for the metric.\\r\\n */\\n\\n\\nfunction convertMetricValueToInteger(providedValue) {\\n  var valueAsInteger = Math.floor(providedValue);\\n\\n  if (valueAsInteger < providedValue) {\\n    consoleLogger.info(\\\"Metric value should be an Integer, setting the value as : \\\" + valueAsInteger + \\\".\\\");\\n  }\\n\\n  return valueAsInteger;\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar Trace =\\n/** @class */\\nfunction () {\\n  /**\\r\\n   * @param name The name of the trace.\\r\\n   * @param isAuto If the trace is auto-instrumented.\\r\\n   * @param traceMeasureName The name of the measure marker in user timing specification. This field\\r\\n   * is only set when the trace is built for logging when the user directly uses the user timing\\r\\n   * api (performance.mark and performance.measure).\\r\\n   */\\n  function Trace(name, isAuto, traceMeasureName) {\\n    if (isAuto === void 0) {\\n      isAuto = false;\\n    }\\n\\n    this.name = name;\\n    this.isAuto = isAuto;\\n    this.state = 1\\n    /* UNINITIALIZED */\\n    ;\\n    this.customAttributes = {};\\n    this.counters = {};\\n    this.api = Api.getInstance();\\n    this.randomId = Math.floor(Math.random() * 1000000);\\n\\n    if (!this.isAuto) {\\n      this.traceStartMark = TRACE_START_MARK_PREFIX + \\\"-\\\" + this.randomId + \\\"-\\\" + this.name;\\n      this.traceStopMark = TRACE_STOP_MARK_PREFIX + \\\"-\\\" + this.randomId + \\\"-\\\" + this.name;\\n      this.traceMeasure = traceMeasureName || TRACE_MEASURE_PREFIX + \\\"-\\\" + this.randomId + \\\"-\\\" + this.name;\\n\\n      if (traceMeasureName) {\\n        // For the case of direct user timing traces, no start stop will happen. The measure object\\n        // is already available.\\n        this.calculateTraceMetrics();\\n      }\\n    }\\n  }\\n  /**\\r\\n   * Starts a trace. The measurement of the duration starts at this point.\\r\\n   */\\n\\n\\n  Trace.prototype.start = function () {\\n    if (this.state !== 1\\n    /* UNINITIALIZED */\\n    ) {\\n        throw ERROR_FACTORY.create(\\\"trace started\\\"\\n        /* TRACE_STARTED_BEFORE */\\n        , {\\n          traceName: this.name\\n        });\\n      }\\n\\n    this.api.mark(this.traceStartMark);\\n    this.state = 2\\n    /* RUNNING */\\n    ;\\n  };\\n  /**\\r\\n   * Stops the trace. The measurement of the duration of the trace stops at this point and trace\\r\\n   * is logged.\\r\\n   */\\n\\n\\n  Trace.prototype.stop = function () {\\n    if (this.state !== 2\\n    /* RUNNING */\\n    ) {\\n        throw ERROR_FACTORY.create(\\\"trace stopped\\\"\\n        /* TRACE_STOPPED_BEFORE */\\n        , {\\n          traceName: this.name\\n        });\\n      }\\n\\n    this.state = 3\\n    /* TERMINATED */\\n    ;\\n    this.api.mark(this.traceStopMark);\\n    this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\\n    this.calculateTraceMetrics();\\n    logTrace(this);\\n  };\\n  /**\\r\\n   * Records a trace with predetermined values. If this method is used a trace is created and logged\\r\\n   * directly. No need to use start and stop methods.\\r\\n   * @param startTime Trace start time since epoch in millisec\\r\\n   * @param duration The duraction of the trace in millisec\\r\\n   * @param options An object which can optionally hold maps of custom metrics and custom attributes\\r\\n   */\\n\\n\\n  Trace.prototype.record = function (startTime, duration, options) {\\n    if (startTime <= 0) {\\n      throw ERROR_FACTORY.create(\\\"nonpositive trace startTime\\\"\\n      /* NONPOSITIVE_TRACE_START_TIME */\\n      , {\\n        traceName: this.name\\n      });\\n    }\\n\\n    if (duration <= 0) {\\n      throw ERROR_FACTORY.create(\\\"nonpositive trace duration\\\"\\n      /* NONPOSITIVE_TRACE_DURATION */\\n      , {\\n        traceName: this.name\\n      });\\n    }\\n\\n    this.durationUs = Math.floor(duration * 1000);\\n    this.startTimeUs = Math.floor(startTime * 1000);\\n\\n    if (options && options.attributes) {\\n      this.customAttributes = (0, _tslib.__assign)({}, options.attributes);\\n    }\\n\\n    if (options && options.metrics) {\\n      for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\\n        var metric = _a[_i];\\n\\n        if (!isNaN(Number(options.metrics[metric]))) {\\n          this.counters[metric] = Number(Math.floor(options.metrics[metric]));\\n        }\\n      }\\n    }\\n\\n    logTrace(this);\\n  };\\n  /**\\r\\n   * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\\r\\n   * custom metric if one with the given name does not exist. The value will be floored down to an\\r\\n   * integer.\\r\\n   * @param counter Name of the custom metric\\r\\n   * @param numAsInteger Increment by value\\r\\n   */\\n\\n\\n  Trace.prototype.incrementMetric = function (counter, numAsInteger) {\\n    if (numAsInteger === void 0) {\\n      numAsInteger = 1;\\n    }\\n\\n    if (this.counters[counter] === undefined) {\\n      this.putMetric(counter, numAsInteger);\\n    } else {\\n      this.putMetric(counter, this.counters[counter] + numAsInteger);\\n    }\\n  };\\n  /**\\r\\n   * Sets a custom metric to a specified value. Will create a new custom metric if one with the\\r\\n   * given name does not exist. The value will be floored down to an integer.\\r\\n   * @param counter Name of the custom metric\\r\\n   * @param numAsInteger Set custom metric to this value\\r\\n   */\\n\\n\\n  Trace.prototype.putMetric = function (counter, numAsInteger) {\\n    if (isValidMetricName(counter, this.name)) {\\n      this.counters[counter] = convertMetricValueToInteger(numAsInteger);\\n    } else {\\n      throw ERROR_FACTORY.create(\\\"invalid custom metric name\\\"\\n      /* INVALID_CUSTOM_METRIC_NAME */\\n      , {\\n        customMetricName: counter\\n      });\\n    }\\n  };\\n  /**\\r\\n   * Returns the value of the custom metric by that name. If a custom metric with that name does\\r\\n   * not exist will return zero.\\r\\n   * @param counter\\r\\n   */\\n\\n\\n  Trace.prototype.getMetric = function (counter) {\\n    return this.counters[counter] || 0;\\n  };\\n  /**\\r\\n   * Sets a custom attribute of a trace to a certain value.\\r\\n   * @param attr\\r\\n   * @param value\\r\\n   */\\n\\n\\n  Trace.prototype.putAttribute = function (attr, value) {\\n    var isValidName = isValidCustomAttributeName(attr);\\n    var isValidValue = isValidCustomAttributeValue(value);\\n\\n    if (isValidName && isValidValue) {\\n      this.customAttributes[attr] = value;\\n      return;\\n    } // Throw appropriate error when the attribute name or value is invalid.\\n\\n\\n    if (!isValidName) {\\n      throw ERROR_FACTORY.create(\\\"invalid attribute name\\\"\\n      /* INVALID_ATTRIBUTE_NAME */\\n      , {\\n        attributeName: attr\\n      });\\n    }\\n\\n    if (!isValidValue) {\\n      throw ERROR_FACTORY.create(\\\"invalid attribute value\\\"\\n      /* INVALID_ATTRIBUTE_VALUE */\\n      , {\\n        attributeValue: value\\n      });\\n    }\\n  };\\n  /**\\r\\n   * Retrieves the value a custom attribute of a trace is set to.\\r\\n   * @param attr\\r\\n   */\\n\\n\\n  Trace.prototype.getAttribute = function (attr) {\\n    return this.customAttributes[attr];\\n  };\\n\\n  Trace.prototype.removeAttribute = function (attr) {\\n    if (this.customAttributes[attr] === undefined) {\\n      return;\\n    }\\n\\n    delete this.customAttributes[attr];\\n  };\\n\\n  Trace.prototype.getAttributes = function () {\\n    return (0, _tslib.__assign)({}, this.customAttributes);\\n  };\\n\\n  Trace.prototype.setStartTime = function (startTime) {\\n    this.startTimeUs = startTime;\\n  };\\n\\n  Trace.prototype.setDuration = function (duration) {\\n    this.durationUs = duration;\\n  };\\n  /**\\r\\n   * Calculates and assigns the duration and start time of the trace using the measure performance\\r\\n   * entry.\\r\\n   */\\n\\n\\n  Trace.prototype.calculateTraceMetrics = function () {\\n    var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\\n    var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\\n\\n    if (perfMeasureEntry) {\\n      this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\\n      this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\\n    }\\n  };\\n  /**\\r\\n   * @param navigationTimings A single element array which contains the navigationTIming object of\\r\\n   * the page load\\r\\n   * @param paintTimings A array which contains paintTiming object of the page load\\r\\n   * @param firstInputDelay First input delay in millisec\\r\\n   */\\n\\n\\n  Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\\n    var route = Api.getInstance().getUrl();\\n\\n    if (!route) {\\n      return;\\n    }\\n\\n    var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\\n    var timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\\n    trace.setStartTime(timeOriginUs); // navigationTimings includes only one element.\\n\\n    if (navigationTimings && navigationTimings[0]) {\\n      trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\\n      trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\\n      trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\\n      trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\\n    }\\n\\n    var FIRST_PAINT = 'first-paint';\\n    var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\\n\\n    if (paintTimings) {\\n      var firstPaint = paintTimings.find(function (paintObject) {\\n        return paintObject.name === FIRST_PAINT;\\n      });\\n\\n      if (firstPaint && firstPaint.startTime) {\\n        trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\\n      }\\n\\n      var firstContentfulPaint = paintTimings.find(function (paintObject) {\\n        return paintObject.name === FIRST_CONTENTFUL_PAINT;\\n      });\\n\\n      if (firstContentfulPaint && firstContentfulPaint.startTime) {\\n        trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\\n      }\\n\\n      if (firstInputDelay) {\\n        trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\\n      }\\n    }\\n\\n    logTrace(trace);\\n  };\\n\\n  Trace.createUserTimingTrace = function (measureName) {\\n    var trace = new Trace(measureName, false, measureName);\\n    logTrace(trace);\\n  };\\n\\n  return Trace;\\n}();\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nfunction createNetworkRequestEntry(entry) {\\n  var performanceEntry = entry;\\n\\n  if (!performanceEntry || performanceEntry.responseStart === undefined) {\\n    return;\\n  }\\n\\n  var timeOrigin = Api.getInstance().getTimeOrigin();\\n  var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\\n  var timeToResponseInitiatedUs = performanceEntry.responseStart ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000) : undefined;\\n  var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000); // Remove the query params from logged network request url.\\n\\n  var url = performanceEntry.name && performanceEntry.name.split('?')[0];\\n  var networkRequest = {\\n    url: url,\\n    responsePayloadBytes: performanceEntry.transferSize,\\n    startTimeUs: startTimeUs,\\n    timeToResponseInitiatedUs: timeToResponseInitiatedUs,\\n    timeToResponseCompletedUs: timeToResponseCompletedUs\\n  };\\n  logNetworkRequest(networkRequest);\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar FID_WAIT_TIME_MS = 5000;\\n\\nfunction setupOobResources() {\\n  // Do not initialize unless iid is available.\\n  if (!getIid()) {\\n    return;\\n  } // The load event might not have fired yet, and that means performance navigation timing\\n  // object has a duration of 0. The setup should run after all current tasks in js queue.\\n\\n\\n  setTimeout(function () {\\n    return setupOobTraces();\\n  }, 0);\\n  setTimeout(function () {\\n    return setupNetworkRequests();\\n  }, 0);\\n  setTimeout(function () {\\n    return setupUserTimingTraces();\\n  }, 0);\\n}\\n\\nfunction setupNetworkRequests() {\\n  var api = Api.getInstance();\\n  var resources = api.getEntriesByType('resource');\\n\\n  for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\\n    var resource = resources_1[_i];\\n    createNetworkRequestEntry(resource);\\n  }\\n\\n  api.setupObserver('resource', createNetworkRequestEntry);\\n}\\n\\nfunction setupOobTraces() {\\n  var api = Api.getInstance();\\n  var navigationTimings = api.getEntriesByType('navigation');\\n  var paintTimings = api.getEntriesByType('paint'); // If First Input Desly polyfill is added to the page, report the fid value.\\n  // https://github.com/GoogleChromeLabs/first-input-delay\\n\\n  if (api.onFirstInputDelay) {\\n    // If the fid call back is not called for certain time, continue without it.\\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\\n    var timeoutId_1 = setTimeout(function () {\\n      Trace.createOobTrace(navigationTimings, paintTimings);\\n      timeoutId_1 = undefined;\\n    }, FID_WAIT_TIME_MS);\\n    api.onFirstInputDelay(function (fid) {\\n      if (timeoutId_1) {\\n        clearTimeout(timeoutId_1);\\n        Trace.createOobTrace(navigationTimings, paintTimings, fid);\\n      }\\n    });\\n  } else {\\n    Trace.createOobTrace(navigationTimings, paintTimings);\\n  }\\n}\\n\\nfunction setupUserTimingTraces() {\\n  var api = Api.getInstance(); // Run through the measure performance entries collected up to this point.\\n\\n  var measures = api.getEntriesByType('measure');\\n\\n  for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\\n    var measure = measures_1[_i];\\n    createUserTimingTrace(measure);\\n  } // Setup an observer to capture the measures from this point on.\\n\\n\\n  api.setupObserver('measure', createUserTimingTrace);\\n}\\n\\nfunction createUserTimingTrace(measure) {\\n  var measureName = measure.name; // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\\n\\n  if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) === TRACE_MEASURE_PREFIX) {\\n    return;\\n  }\\n\\n  Trace.createUserTimingTrace(measureName);\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar PerformanceController =\\n/** @class */\\nfunction () {\\n  function PerformanceController(app) {\\n    this.app = app;\\n\\n    if (Api.getInstance().requiredApisAvailable()) {\\n      (0, _util.validateIndexedDBOpenable)().then(function (isAvailable) {\\n        if (isAvailable) {\\n          setupTransportService();\\n          getInitializationPromise().then(setupOobResources, setupOobResources);\\n        }\\n      })[\\\"catch\\\"](function (error) {\\n        consoleLogger.info(\\\"Environment doesn't support IndexedDB: \\\" + error);\\n      });\\n    }\\n  }\\n\\n  PerformanceController.prototype.trace = function (name) {\\n    return new Trace(name);\\n  };\\n\\n  Object.defineProperty(PerformanceController.prototype, \\\"instrumentationEnabled\\\", {\\n    get: function get() {\\n      return SettingsService.getInstance().instrumentationEnabled;\\n    },\\n    set: function set(val) {\\n      SettingsService.getInstance().instrumentationEnabled = val;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  Object.defineProperty(PerformanceController.prototype, \\\"dataCollectionEnabled\\\", {\\n    get: function get() {\\n      return SettingsService.getInstance().dataCollectionEnabled;\\n    },\\n    set: function set(val) {\\n      SettingsService.getInstance().dataCollectionEnabled = val;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  return PerformanceController;\\n}();\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\\n\\nfunction registerPerformance(instance) {\\n  var factoryMethod = function factoryMethod(app, installations) {\\n    if (app.name !== DEFAULT_ENTRY_NAME) {\\n      throw ERROR_FACTORY.create(\\\"FB not default\\\"\\n      /* FB_NOT_DEFAULT */\\n      );\\n    }\\n\\n    if (typeof window === 'undefined') {\\n      throw ERROR_FACTORY.create(\\\"no window\\\"\\n      /* NO_WINDOW */\\n      );\\n    }\\n\\n    setupApi(window);\\n    SettingsService.getInstance().firebaseAppInstance = app;\\n    SettingsService.getInstance().installationsService = installations;\\n    return new PerformanceController(app);\\n  }; // Register performance with firebase-app.\\n\\n\\n  instance.INTERNAL.registerComponent(new _component.Component('performance', function (container) {\\n    /* Dependencies */\\n    // getImmediate for FirebaseApp will always succeed\\n    var app = container.getProvider('app').getImmediate(); // The following call will always succeed because perf has `import '@firebase/installations'`\\n\\n    var installations = container.getProvider('installations').getImmediate();\\n    return factoryMethod(app, installations);\\n  }, \\\"PUBLIC\\\"\\n  /* PUBLIC */\\n  ));\\n  instance.registerVersion(name, version);\\n}\\n\\nregisterPerformance(_app[\\\"default\\\"]);\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"mergeStrings\",\"part1\",\"part2\",\"sizeDiff\",\"length\",\"ERROR_FACTORY\",\"create\",\"resultArray\",\"i\",\"push\",\"charAt\",\"join\",\"getIidPromise\",\"iidPromise\",\"SettingsService\",\"getInstance\",\"installationsService\",\"getId\",\"then\",\"iidVal\",\"iid\",\"getAuthTokenPromise\",\"authTokenPromise\",\"getToken\",\"authTokenVal\",\"getVisibilityState\",\"Api\",\"document\",\"visibilityState\",\"VisibilityState\",\"VISIBLE\",\"HIDDEN\",\"UNKNOWN\",\"getEffectiveConnectionType\",\"navigatorConnection\",\"navigator\",\"connection\",\"effectiveType\",\"isValidCustomAttributeName\",\"name\",\"MAX_ATTRIBUTE_NAME_LENGTH\",\"RESERVED_ATTRIBUTE_PREFIXES\",\"some\",\"matchesReservedPrefix\",\"prefix\",\"startsWith\",\"match\",\"ATTRIBUTE_FORMAT_REGEX\",\"getConfig\",\"config\",\"getStoredConfig\",\"processConfig\",\"Promise\",\"resolve\",\"getRemoteConfig\",\"localStorage\",\"setItem\",\"CONFIG_LOCAL_STORAGE_KEY\",\"JSON\",\"stringify\",\"CONFIG_EXPIRY_LOCAL_STORAGE_KEY\",\"String\",\"Date\",\"now\",\"configTimeToLive\",\"expiryString\",\"getItem\",\"Number\",\"configStringified\",\"parse\",\"configResponse\",\"_a\",\"authToken\",\"configEndPoint\",\"getProjectId\",\"projectId\",\"getApiKey\",\"request\",\"Request\",\"method\",\"headers\",\"Authorization\",\"body\",\"app_instance_id\",\"app_instance_id_token\",\"app_id\",\"getAppId\",\"app_version\",\"SDK_VERSION\",\"sdk_version\",\"REMOTE_CONFIG_SDK_VERSION\",\"fetch\",\"response\",\"ok\",\"json\",\"consoleLogger\",\"info\",\"COULD_NOT_GET_CONFIG_MSG\",\"settingsServiceInstance\",\"entries\",\"loggingEnabled\",\"undefined\",\"fpr_enabled\",\"DEFAULT_CONFIGS\",\"fpr_log_source\",\"logSource\",\"fpr_log_endpoint_url\",\"logEndPointUrl\",\"fpr_log_transport_key\",\"transportKey\",\"fpr_vc_network_request_sampling_rate\",\"networkRequestsSamplingRate\",\"fpr_vc_trace_sampling_rate\",\"tracesSamplingRate\",\"logTraceAfterSampling\",\"Math\",\"random\",\"logNetworkAfterSampling\",\"getInitializationPromise\",\"initializationStatus\",\"initializationPromise\",\"initializePerf\",\"getDocumentReadyComplete\",\"readyState\",\"addEventListener\",\"handler_1\",\"removeEventListener\",\"processQueue\",\"timeOffset\",\"setTimeout\",\"remainingTries\",\"queue\",\"DEFAULT_SEND_INTERVAL_MS\",\"dispatchQueueEvents\",\"staged\",\"splice\",\"MAX_EVENT_COUNT_PER_REQUEST\",\"log_event\",\"map\",\"evt\",\"source_extension_json_proto3\",\"message\",\"event_time_ms\",\"eventTime\",\"data\",\"request_time_ms\",\"client_info\",\"client_type\",\"js_client_info\",\"log_source\",\"sendEventsToFl\",\"_tslib\",\"__spreadArray\",\"postToFlEndpoint\",\"res\",\"transportWait\",\"nextRequestWaitMillis\",\"requestOffset\",\"isNaN\",\"max\",\"logResponseDetails\",\"Array\",\"isArray\",\"responseAction\",\"DEFAULT_REMAINING_TRIES\",\"flTransportFullUrl\",\"getFlTransportFullUrl\",\"transportHandler\",\"serializer\",\"args\",\"_i\",\"arguments\",\"apply\",\"logTrace\",\"trace\",\"settingsService\",\"instrumentationEnabled\",\"isAuto\",\"dataCollectionEnabled\",\"requiredApisAvailable\",\"sendTraceLog\",\"logger\",\"resourceType\",\"logNetworkRequest\",\"networkRequest\",\"networkRequestUrl\",\"url\",\"logEndpointUrl\",\"split\",\"flEndpointUrl\",\"flTransportEndpointUrl\",\"resource\",\"networkRequestMetric\",\"http_method\",\"httpMethod\",\"http_response_code\",\"response_payload_bytes\",\"responsePayloadBytes\",\"client_start_time_us\",\"startTimeUs\",\"time_to_response_initiated_us\",\"timeToResponseInitiatedUs\",\"time_to_response_completed_us\",\"timeToResponseCompletedUs\",\"perfMetric\",\"application_info\",\"getApplicationInfo\",\"network_request_metric\",\"traceMetric\",\"is_auto\",\"duration_us\",\"durationUs\",\"Object\",\"keys\",\"counters\",\"customAttributes\",\"getAttributes\",\"custom_attributes\",\"trace_metric\",\"getUrl\",\"google_app_id\",\"web_app_info\",\"page_url\",\"service_worker_status\",\"serviceWorker\",\"controller\",\"visibility_state\",\"effective_connection_type\",\"application_process_state\",\"createNetworkRequestEntry\",\"entry\",\"responseStart\",\"timeOrigin\",\"getTimeOrigin\",\"floor\",\"startTime\",\"responseEnd\",\"transferSize\",\"setupOobResources\",\"setupOobTraces\",\"api\",\"resources_1\",\"getEntriesByType\",\"resources\",\"setupObserver\",\"measures_1\",\"measures\",\"createUserTimingTrace\",\"measure\",\"navigationTimings\",\"paintTimings\",\"onFirstInputDelay\",\"timeoutId_1\",\"Trace\",\"createOobTrace\",\"FID_WAIT_TIME_MS\",\"fid\",\"clearTimeout\",\"measureName\",\"TRACE_MEASURE_PREFIX\",\"substring\",\"registerPerformance\",\"instance\",\"INTERNAL\",\"registerComponent\",\"_component\",\"Component\",\"container\",\"app\",\"getProvider\",\"getImmediate\",\"installations\",\"DEFAULT_ENTRY_NAME\",\"window\",\"windowInstance\",\"firebaseAppInstance\",\"PerformanceController\",\"registerVersion\",\"version\",\"defineProperty\",\"value\",\"_app\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"_util\",\"_logger\",\"ERROR_DESCRIPTION_MAP\",\"ErrorFactory\",\"SERVICE\",\"SERVICE_NAME\",\"Logger\",\"logLevel\",\"LogLevel\",\"INFO\",\"apiInstance\",\"performance\",\"PerformanceObserver\",\"windowLocation\",\"location\",\"cookieEnabled\",\"perfMetrics\",\"prototype\",\"Api.prototype.getUrl\",\"href\",\"mark\",\"Api.prototype.mark\",\"Api.prototype.measure\",\"mark1\",\"mark2\",\"Api.prototype.getEntriesByType\",\"type\",\"getEntriesByName\",\"Api.prototype.getEntriesByName\",\"Api.prototype.getTimeOrigin\",\"timing\",\"navigationStart\",\"Api.prototype.requiredApisAvailable\",\"isIndexedDBAvailable\",\"Api.prototype.setupObserver\",\"entryType\",\"callback\",\"observe\",\"observer\",\"list\",\"getEntries\",\"entryTypes\",\"Api.getInstance\",\"SettingsService.prototype.getAppId\",\"appId\",\"options\",\"SettingsService.prototype.getProjectId\",\"SettingsService.prototype.getApiKey\",\"apiKey\",\"SettingsService.prototype.getFlTransportFullUrl\",\"concat\",\"SettingsService.getInstance\",\"isTransportSetup\",\"oobMetrics\",\"FIRST_PAINT_COUNTER_NAME\",\"FIRST_CONTENTFUL_PAINT_COUNTER_NAME\",\"FIRST_INPUT_DELAY_COUNTER_NAME\",\"traceMeasureName\",\"state\",\"randomId\",\"traceStartMark\",\"traceStopMark\",\"traceMeasure\",\"calculateTraceMetrics\",\"start\",\"Trace.prototype.start\",\"traceName\",\"stop\",\"Trace.prototype.stop\",\"record\",\"Trace.prototype.record\",\"duration\",\"attributes\",\"__assign\",\"metrics\",\"metric\",\"incrementMetric\",\"Trace.prototype.incrementMetric\",\"counter\",\"numAsInteger\",\"putMetric\",\"Trace.prototype.putMetric\",\"MAX_METRIC_NAME_LENGTH\",\"OOB_TRACE_PAGE_LOAD_PREFIX\",\"indexOf\",\"RESERVED_AUTO_PREFIX\",\"valueAsInteger\",\"customMetricName\",\"getMetric\",\"Trace.prototype.getMetric\",\"putAttribute\",\"Trace.prototype.putAttribute\",\"attr\",\"isValidName\",\"isValidValue\",\"MAX_ATTRIBUTE_VALUE_LENGTH\",\"attributeName\",\"attributeValue\",\"getAttribute\",\"Trace.prototype.getAttribute\",\"removeAttribute\",\"Trace.prototype.removeAttribute\",\"Trace.prototype.getAttributes\",\"setStartTime\",\"Trace.prototype.setStartTime\",\"setDuration\",\"Trace.prototype.setDuration\",\"Trace.prototype.calculateTraceMetrics\",\"perfMeasureEntries\",\"perfMeasureEntry\",\"Trace.createOobTrace\",\"firstInputDelay\",\"route\",\"timeOriginUs\",\"domInteractive\",\"domContentLoadedEventEnd\",\"loadEventEnd\",\"firstPaint\",\"find\",\"paintObject\",\"FIRST_PAINT\",\"firstContentfulPaint\",\"FIRST_CONTENTFUL_PAINT\",\"Trace.createUserTimingTrace\",\"validateIndexedDBOpenable\",\"isAvailable\",\"INITIAL_SEND_TIME_DELAY_MS\",\"error\",\"PerformanceController.prototype.trace\",\"get\",\"set\",\"val\",\"enumerable\",\"configurable\"]\n}\n"]