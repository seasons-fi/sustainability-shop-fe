["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@firebase/storage/dist/index.browser.esm.js"],"~:js","shadow$provide.module$node_modules$$firebase$storage$dist$index_browser_esm=function(global,require,module,exports){function _typeof(obj$jscomp$0){_typeof=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj};return _typeof(obj$jscomp$0)}function unknown(){return new FirebaseStorageError(\"unknown\",\"An unknown error occurred, please check the error payload for server response.\")}\nfunction canceled(){return new FirebaseStorageError(\"canceled\",\"User canceled the upload/download.\")}function cannotSliceBlob(){return new FirebaseStorageError(\"cannot-slice-blob\",\"Cannot slice blob for upload. Please retry the upload.\")}function invalidArgument(message){return new FirebaseStorageError(\"invalid-argument\",message)}function appDeleted(){return new FirebaseStorageError(\"app-deleted\",\"The Firebase app was deleted.\")}function invalidRootOperation(name){return new FirebaseStorageError(\"invalid-root-operation\",\n\"The operation '\"+name+\"' cannot be performed on a root reference, create a non-root reference using child, such as .child('file.png').\")}function invalidFormat(format,message){return new FirebaseStorageError(\"invalid-format\",\"String does not match format '\"+format+\"': \"+message)}function internalError(message){throw new FirebaseStorageError(\"internal-error\",\"Internal error: \"+message);}function dataFromString(format,stringData){switch(format){case StringFormat.RAW:return new StringData(utf8Bytes_(stringData));\ncase StringFormat.BASE64:case StringFormat.BASE64URL:return new StringData(base64Bytes_(format,stringData));case StringFormat.DATA_URL:format=new DataURLParts(stringData);if(format.base64)var JSCompiler_inline_result=base64Bytes_(StringFormat.BASE64,format.rest);else{try{JSCompiler_inline_result=decodeURIComponent(format.rest)}catch(e){throw invalidFormat(StringFormat.DATA_URL,\"Malformed data URL.\");}JSCompiler_inline_result=utf8Bytes_(JSCompiler_inline_result)}stringData=(new DataURLParts(stringData)).contentType;\nreturn new StringData(JSCompiler_inline_result,stringData)}throw unknown();}function utf8Bytes_(value){for(var b=[],i=0;i<value.length;i++){var c=value.charCodeAt(i);if(127>=c)b.push(c);else if(2047>=c)b.push(192|c>>6,128|c&63);else if(55296===(c&64512))if(i<value.length-1&&56320===(value.charCodeAt(i+1)&64512)){var lo=value.charCodeAt(++i);c=65536|(c&1023)<<10|lo&1023;b.push(240|c>>18,128|c>>12&63,128|c>>6&63,128|c&63)}else b.push(239,191,189);else 56320===(c&64512)?b.push(239,191,189):b.push(224|\nc>>12,128|c>>6&63,128|c&63)}return new Uint8Array(b)}function base64Bytes_(format,value){switch(format){case StringFormat.BASE64:var hasMinus=-1!==value.indexOf(\"-\"),hasUnder=-1!==value.indexOf(\"_\");if(hasMinus||hasUnder)throw invalidFormat(format,\"Invalid character '\"+(hasMinus?\"-\":\"_\")+\"' found: is it base64url encoded?\");break;case StringFormat.BASE64URL:hasMinus=-1!==value.indexOf(\"+\");hasUnder=-1!==value.indexOf(\"/\");if(hasMinus||hasUnder)throw invalidFormat(format,\"Invalid character '\"+(hasMinus?\n\"+\":\"/\")+\"' found: is it base64 encoded?\");value=value.replace(/-/g,\"+\").replace(/_/g,\"/\")}try{var bytes=atob(value)}catch(e){throw invalidFormat(format,\"Invalid character found\");}format=new Uint8Array(bytes.length);for(value=0;value<bytes.length;value++)format[value]=bytes.charCodeAt(value);return format}function taskStateFromInternalTaskState(state){switch(state){case \"running\":case \"pausing\":case \"canceling\":return TaskState.RUNNING;case \"paused\":return TaskState.PAUSED;case \"success\":return TaskState.SUCCESS;\ncase \"canceled\":return TaskState.CANCELED;case \"error\":return TaskState.ERROR;default:return TaskState.ERROR}}function start(f,callback,timeout){function triggerCallback(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];triggeredCallback||(triggeredCallback=!0,callback.apply(null,args))}function callWithDelay(millis){timeoutId=setTimeout(function(){timeoutId=null;f(handler,2===cancelState)},millis)}function handler(success){for(var args=[],_i=1;_i<arguments.length;_i++)args[_i-\n1]=arguments[_i];triggeredCallback||(success?triggerCallback.call.apply(triggerCallback,(0,_tslib.__spreadArray)([null,success],args)):2===cancelState||hitTimeout?triggerCallback.call.apply(triggerCallback,(0,_tslib.__spreadArray)([null,success],args)):(64>waitSeconds&&(waitSeconds*=2),1===cancelState?(cancelState=2,args=0):args=1E3*(waitSeconds+Math.random()),callWithDelay(args)))}function stop(wasTimeout){stopped||(stopped=!0,triggeredCallback||(null!==timeoutId?(wasTimeout||(cancelState=2),clearTimeout(timeoutId),\ncallWithDelay(0)):wasTimeout||(cancelState=1)))}var waitSeconds=1,timeoutId=null,hitTimeout=!1,cancelState=0,triggeredCallback=!1,stopped=!1;callWithDelay(0);setTimeout(function(){hitTimeout=!0;stop(!0)},timeout);return stop}function isString(p){return\"string\"===typeof p||p instanceof String}function isNativeBlob(p){return isNativeBlobDefined()&&p instanceof Blob}function isNativeBlobDefined(){return\"undefined\"!==typeof Blob}function validateNumber(argument,minValue,maxValue,value){if(value<minValue)throw invalidArgument(\"Invalid value for '\"+\nargument+\"'. Expected \"+minValue+\" or greater.\");if(value>maxValue)throw invalidArgument(\"Invalid value for '\"+argument+\"'. Expected \"+maxValue+\" or less.\");}function makeUrl(urlPart,host){var protocolMatch=host.match(/^(\\w+):\\/\\/.+/),origin=host;null==(null===protocolMatch||void 0===protocolMatch?void 0:protocolMatch[1])&&(origin=\"https://\"+host);return origin+\"/v0\"+urlPart}function makeQueryString(params){var encode=encodeURIComponent,queryPart=\"?\",key;for(key in params)if(params.hasOwnProperty(key)){var nextPart=\nencode(key)+\"\\x3d\"+encode(params[key]);queryPart=queryPart+nextPart+\"\\x26\"}return queryPart=queryPart.slice(0,-1)}function makeRequest(requestInfo,appId,authToken,appCheckToken,pool,firebaseVersion){var queryPart=makeQueryString(requestInfo.urlParams);queryPart=requestInfo.url+queryPart;var headers=Object.assign({},requestInfo.headers);appId&&(headers[\"X-Firebase-GMPID\"]=appId);null!==authToken&&0<authToken.length&&(headers.Authorization=\"Firebase \"+authToken);headers[\"X-Firebase-Storage-Version\"]=\n\"webjs/\"+(null!==firebaseVersion&&void 0!==firebaseVersion?firebaseVersion:\"AppManager\");null!==appCheckToken&&(headers[\"X-Firebase-AppCheck\"]=appCheckToken);return new NetworkRequest(queryPart,requestInfo.method,headers,requestInfo.body,requestInfo.successCodes,requestInfo.additionalRetryCodes,requestInfo.handler,requestInfo.errorHandler,requestInfo.timeout,requestInfo.progressCallback,pool)}function getBlob(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];_i=\"undefined\"!==\ntypeof BlobBuilder?BlobBuilder:\"undefined\"!==typeof WebKitBlobBuilder?WebKitBlobBuilder:void 0;if(void 0!==_i){_i=new _i;for(var i=0;i<args.length;i++)_i.append(args[i]);return _i.getBlob()}if(isNativeBlobDefined())return new Blob(args);throw new FirebaseStorageError(\"unsupported-environment\",\"This browser doesn't seem to support creating Blobs\");}function jsonObjectOrNull(s){try{var obj=JSON.parse(s)}catch(e){return null}s=obj;return\"object\"!==_typeof(s)||Array.isArray(s)?null:obj}function child(path,\nchildPath){childPath=childPath.split(\"/\").filter(function(component){return 0<component.length}).join(\"/\");return 0===path.length?childPath:path+\"/\"+childPath}function lastComponent(path){var index=path.lastIndexOf(\"/\",path.length-2);return-1===index?path:path.slice(index+1)}function noXform_(metadata,value){return value}function getMappings(){if(mappings_)return mappings_;var mappings=[];mappings.push(new Mapping(\"bucket\"));mappings.push(new Mapping(\"generation\"));mappings.push(new Mapping(\"metageneration\"));\nmappings.push(new Mapping(\"name\",\"fullPath\",!0));var nameMapping=new Mapping(\"name\");nameMapping.xform=function(_metadata,fullPath){_metadata=!isString(fullPath)||2>fullPath.length?fullPath:lastComponent(fullPath);return _metadata};mappings.push(nameMapping);nameMapping=new Mapping(\"size\");nameMapping.xform=function(_metadata,size){return void 0!==size?Number(size):size};mappings.push(nameMapping);mappings.push(new Mapping(\"timeCreated\"));mappings.push(new Mapping(\"updated\"));mappings.push(new Mapping(\"md5Hash\",\nnull,!0));mappings.push(new Mapping(\"cacheControl\",null,!0));mappings.push(new Mapping(\"contentDisposition\",null,!0));mappings.push(new Mapping(\"contentEncoding\",null,!0));mappings.push(new Mapping(\"contentLanguage\",null,!0));mappings.push(new Mapping(\"contentType\",null,!0));mappings.push(new Mapping(\"metadata\",\"customMetadata\",!0));return mappings_=mappings}function addRef(metadata,service){Object.defineProperty(metadata,\"ref\",{get:function(){var loc=new Location$jscomp$0(metadata.bucket,metadata.fullPath);\nreturn service._makeStorageReference(loc)}})}function fromResourceString(service,resourceString,mappings){resourceString=jsonObjectOrNull(resourceString);if(null===resourceString)return null;for(var metadata={type:\"file\"},len=mappings.length,i=0;i<len;i++){var mapping=mappings[i];metadata[mapping.local]=mapping.xform(metadata,resourceString[mapping.server])}addRef(metadata,service);return metadata}function downloadUrlFromResourceString(metadata,resourceString,host){resourceString=jsonObjectOrNull(resourceString);\nif(null===resourceString||!isString(resourceString.downloadTokens))return null;resourceString=resourceString.downloadTokens;if(0===resourceString.length)return null;var encode=encodeURIComponent;return resourceString.split(\",\").map(function(token){var path=metadata.fullPath;path=\"/b/\"+encode(metadata.bucket)+\"/o/\"+encode(path);path=makeUrl(path,host);token=makeQueryString({alt:\"media\",token});return path+token})[0]}function toResourceString(metadata,mappings){for(var resource={},len=mappings.length,\ni=0;i<len;i++){var mapping=mappings[i];mapping.writable&&(resource[mapping.server]=metadata[mapping.local])}return JSON.stringify(resource)}function handlerCheck(cndn){if(!cndn)throw unknown();}function metadataHandler(service,mappings){return function(xhr,text){xhr=fromResourceString(service,text,mappings);handlerCheck(null!==xhr);return xhr}}function listHandler(service,bucket){return function(xhr,text){text=jsonObjectOrNull(text);if(null===text)xhr=null;else{xhr={prefixes:[],items:[],nextPageToken:text.nextPageToken};\nif(text.prefixes)for(var _i=0,_a=text.prefixes;_i<_a.length;_i++){var pathWithoutTrailingSlash=_a[_i].replace(/\\/$/,\"\");pathWithoutTrailingSlash=service._makeStorageReference(new Location$jscomp$0(bucket,pathWithoutTrailingSlash));xhr.prefixes.push(pathWithoutTrailingSlash)}if(text.items)for(_i=0,text=text.items;_i<text.length;_i++)pathWithoutTrailingSlash=service._makeStorageReference(new Location$jscomp$0(bucket,text[_i].name)),xhr.items.push(pathWithoutTrailingSlash)}handlerCheck(null!==xhr);return xhr}}\nfunction downloadUrlHandler(service,mappings){return function(xhr,text){xhr=fromResourceString(service,text,mappings);handlerCheck(null!==xhr);return downloadUrlFromResourceString(xhr,text,service.host)}}function sharedErrorHandler(location){return function(xhr,err){xhr=401===xhr.getStatus()?xhr.getResponseText().includes(\"Firebase App Check token is invalid\")?new FirebaseStorageError(\"unauthorized-app\",\"This app does not have permission to access Firebase Storage on this project.\"):new FirebaseStorageError(\"unauthenticated\",\n\"User is not authenticated, please authenticate using Firebase Authentication and try again.\"):402===xhr.getStatus()?new FirebaseStorageError(\"quota-exceeded\",\"Quota for bucket '\"+location.bucket+\"' exceeded, please view quota on https://firebase.google.com/pricing/.\"):403===xhr.getStatus()?new FirebaseStorageError(\"unauthorized\",\"User does not have permission to access '\"+location.path+\"'.\"):err;xhr.serverResponse=err.serverResponse;return xhr}}function objectErrorHandler(location){var shared=sharedErrorHandler(location);\nreturn function(xhr,err){var newErr=shared(xhr,err);404===xhr.getStatus()&&(newErr=new FirebaseStorageError(\"object-not-found\",\"Object '\"+location.path+\"' does not exist.\"));newErr.serverResponse=err.serverResponse;return newErr}}function getMetadata$2(service,location,mappings){var urlPart=location.fullServerUrl();urlPart=makeUrl(urlPart,service.host);var timeout=service.maxOperationRetryTime;service=new RequestInfo(urlPart,\"GET\",metadataHandler(service,mappings),timeout);service.errorHandler=objectErrorHandler(location);\nreturn service}function getDownloadUrl(service,location,mappings){var urlPart=location.fullServerUrl();urlPart=makeUrl(urlPart,service.host);var timeout=service.maxOperationRetryTime;service=new RequestInfo(urlPart,\"GET\",downloadUrlHandler(service,mappings),timeout);service.errorHandler=objectErrorHandler(location);return service}function deleteObject$2(service,location){var urlPart=location.fullServerUrl();urlPart=makeUrl(urlPart,service.host);service=new RequestInfo(urlPart,\"DELETE\",function(_xhr,\n_text){},service.maxOperationRetryTime);service.successCodes=[200,204];service.errorHandler=objectErrorHandler(location);return service}function metadataForUpload_(location,blob,metadata){metadata=Object.assign({},metadata);metadata.fullPath=location.path;metadata.size=blob.size();metadata.contentType||(metadata.contentType=blob&&blob.type()||\"application/octet-stream\");return metadata}function multipartUpload(service,location,mappings,blob,metadata){var urlPart=location.bucketOnlyServerUrl(),headers=\n{\"X-Goog-Upload-Protocol\":\"multipart\"};var boundary=\"\";for(var i=0;2>i;i++)boundary+=Math.random().toString().slice(2);headers[\"Content-Type\"]=\"multipart/related; boundary\\x3d\"+boundary;metadata=metadataForUpload_(location,blob,metadata);i=toResourceString(metadata,mappings);blob=FbsBlob.getBlob(\"--\"+boundary+\"\\r\\nContent-Type: application/json; charset\\x3dutf-8\\r\\n\\r\\n\"+i+\"\\r\\n--\"+boundary+\"\\r\\nContent-Type: \"+metadata.contentType+\"\\r\\n\\r\\n\",blob,\"\\r\\n--\"+boundary+\"--\");if(null===blob)throw cannotSliceBlob();\nmetadata={name:metadata.fullPath};urlPart=makeUrl(urlPart,service.host);boundary=service.maxUploadRetryTime;service=new RequestInfo(urlPart,\"POST\",metadataHandler(service,mappings),boundary);service.urlParams=metadata;service.headers=headers;service.body=blob.uploadData();service.errorHandler=sharedErrorHandler(location);return service}function checkResumeHeader_(xhr,allowed){var status=null;try{status=xhr.getResponseHeader(\"X-Goog-Upload-Status\")}catch(e){handlerCheck(!1)}xhr=allowed||[\"active\"];\nhandlerCheck(!!status&&-1!==xhr.indexOf(status));return status}function createResumableUpload(service,location,mappings,blob,metadata){var urlPart=location.bucketOnlyServerUrl(),metadataForUpload=metadataForUpload_(location,blob,metadata);metadata={name:metadataForUpload.fullPath};urlPart=makeUrl(urlPart,service.host);blob={\"X-Goog-Upload-Protocol\":\"resumable\",\"X-Goog-Upload-Command\":\"start\",\"X-Goog-Upload-Header-Content-Length\":\"\"+blob.size(),\"X-Goog-Upload-Header-Content-Type\":metadataForUpload.contentType,\n\"Content-Type\":\"application/json; charset\\x3dutf-8\"};mappings=toResourceString(metadataForUpload,mappings);service=new RequestInfo(urlPart,\"POST\",function(xhr){checkResumeHeader_(xhr);try{var url=xhr.getResponseHeader(\"X-Goog-Upload-URL\")}catch(e){handlerCheck(!1)}handlerCheck(isString(url));return url},service.maxUploadRetryTime);service.urlParams=metadata;service.headers=blob;service.body=mappings;service.errorHandler=sharedErrorHandler(location);return service}function getResumableUploadStatus(service,\nlocation,url,blob){service=new RequestInfo(url,\"POST\",function(xhr){var status=checkResumeHeader_(xhr,[\"active\",\"final\"]),sizeString=null;try{sizeString=xhr.getResponseHeader(\"X-Goog-Upload-Size-Received\")}catch(e){handlerCheck(!1)}sizeString||handlerCheck(!1);xhr=Number(sizeString);handlerCheck(!isNaN(xhr));return new ResumableUploadStatus(xhr,blob.size(),\"final\"===status)},service.maxUploadRetryTime);service.headers={\"X-Goog-Upload-Command\":\"query\"};service.errorHandler=sharedErrorHandler(location);\nreturn service}function continueResumableUpload(location,service,url,blob,chunkSize,mappings,status,progressCallback){var status_=new ResumableUploadStatus(0,0);status?(status_.current=status.current,status_.total=status.total):(status_.current=0,status_.total=blob.size());if(blob.size()!==status_.total)throw new FirebaseStorageError(\"server-file-wrong-size\",\"Server recorded incorrect upload file size, please retry the upload.\");var bytesToUpload=status=status_.total-status_.current;0<chunkSize&&\n(bytesToUpload=Math.min(bytesToUpload,chunkSize));var startByte=status_.current;chunkSize={\"X-Goog-Upload-Command\":bytesToUpload===status?\"upload, finalize\":\"upload\",\"X-Goog-Upload-Offset\":\"\"+status_.current};status=blob.slice(startByte,startByte+bytesToUpload);if(null===status)throw cannotSliceBlob();url=new RequestInfo(url,\"POST\",function(xhr,text){var uploadStatus=checkResumeHeader_(xhr,[\"active\",\"final\"]),newCurrent=status_.current+bytesToUpload,size=blob.size();xhr=\"final\"===uploadStatus?metadataHandler(service,\nmappings)(xhr,text):null;return new ResumableUploadStatus(newCurrent,size,\"final\"===uploadStatus,xhr)},service.maxUploadRetryTime);url.headers=chunkSize;url.body=status.uploadData();url.progressCallback=progressCallback||null;url.errorHandler=sharedErrorHandler(location);return url}function async(f){return function(){for(var argsToForward=[],_i=0;_i<arguments.length;_i++)argsToForward[_i]=arguments[_i];Promise.resolve().then(function(){return f.apply(void 0,argsToForward)})}}function listAll$1(ref){var accumulator=\n{prefixes:[],items:[]};return listAllHelper(ref,accumulator).then(function(){return accumulator})}function listAllHelper(ref,accumulator,pageToken){return(0,_tslib.__awaiter)(this,void 0,void 0,function(){var opt,nextPage,_a,_b;return(0,_tslib.__generator)(this,function(_c){switch(_c.label){case 0:return opt={pageToken},[4,list$1(ref,opt)];case 1:return nextPage=_c.sent(),(_a=accumulator.prefixes).push.apply(_a,nextPage.prefixes),(_b=accumulator.items).push.apply(_b,nextPage.items),null==nextPage.nextPageToken?\n[3,3]:[4,listAllHelper(ref,accumulator,nextPage.nextPageToken)];case 2:_c.sent(),_c.label=3;case 3:return[2]}})})}function list$1(ref,options){return(0,_tslib.__awaiter)(this,void 0,void 0,function(){var op,requestInfo;return(0,_tslib.__generator)(this,function(_a){switch(_a.label){case 0:null!=options&&\"number\"===typeof options.maxResults&&validateNumber(\"options.maxResults\",1,1E3,options.maxResults);op=options||{};var service=ref.storage;_a=ref._location;var pageToken=op.pageToken,maxResults=op.maxResults,\nurlParams={};urlParams.prefix=_a.isRoot?\"\":_a.path+\"/\";urlParams.delimiter=\"/\";pageToken&&(urlParams.pageToken=pageToken);maxResults&&(urlParams.maxResults=maxResults);pageToken=_a.bucketOnlyServerUrl();pageToken=makeUrl(pageToken,service.host);maxResults=service.maxOperationRetryTime;service=new RequestInfo(pageToken,\"GET\",listHandler(service,_a.bucket),maxResults);service.urlParams=urlParams;service.errorHandler=sharedErrorHandler(_a);requestInfo=service;return[4,ref.storage.makeRequestWithTokens(requestInfo)];\ncase 1:return[2,_a.sent().getPromise()]}})})}function getMetadata$1(ref){return(0,_tslib.__awaiter)(this,void 0,void 0,function(){var requestInfo;return(0,_tslib.__generator)(this,function(_a){switch(_a.label){case 0:return ref._throwIfRoot(\"getMetadata\"),requestInfo=getMetadata$2(ref.storage,ref._location,getMappings()),[4,ref.storage.makeRequestWithTokens(requestInfo)];case 1:return[2,_a.sent().getPromise()]}})})}function updateMetadata$1(ref,metadata){return(0,_tslib.__awaiter)(this,void 0,void 0,\nfunction(){var requestInfo;return(0,_tslib.__generator)(this,function(_a){switch(_a.label){case 0:ref._throwIfRoot(\"updateMetadata\");var service=ref.storage;_a=ref._location;var mappings=getMappings(),urlPart=_a.fullServerUrl(),url=makeUrl(urlPart,service.host);urlPart=toResourceString(metadata,mappings);var timeout=service.maxOperationRetryTime;service=new RequestInfo(url,\"PATCH\",metadataHandler(service,mappings),timeout);service.headers={\"Content-Type\":\"application/json; charset\\x3dutf-8\"};service.body=\nurlPart;service.errorHandler=objectErrorHandler(_a);requestInfo=service;return[4,ref.storage.makeRequestWithTokens(requestInfo)];case 1:return[2,_a.sent().getPromise()]}})})}function getDownloadURL$1(ref){return(0,_tslib.__awaiter)(this,void 0,void 0,function(){var requestInfo;return(0,_tslib.__generator)(this,function(_a){switch(_a.label){case 0:return ref._throwIfRoot(\"getDownloadURL\"),requestInfo=getDownloadUrl(ref.storage,ref._location,getMappings()),[4,ref.storage.makeRequestWithTokens(requestInfo)];\ncase 1:return[2,_a.sent().getPromise().then(function(url){if(null===url)throw new FirebaseStorageError(\"no-download-url\",\"The given file does not have any download URLs.\");return url})]}})})}function deleteObject$1(ref){return(0,_tslib.__awaiter)(this,void 0,void 0,function(){var requestInfo;return(0,_tslib.__generator)(this,function(_a){switch(_a.label){case 0:return ref._throwIfRoot(\"deleteObject\"),requestInfo=deleteObject$2(ref.storage,ref._location),[4,ref.storage.makeRequestWithTokens(requestInfo)];\ncase 1:return[2,_a.sent().getPromise()]}})})}function _getChild$1(ref,childPath){childPath=child(ref._location.path,childPath);childPath=new Location$jscomp$0(ref._location.bucket,childPath);return new Reference(ref.storage,childPath)}function isUrl(path){return/^[A-Za-z]+:\\/\\//.test(path)}function refFromPath(ref,path){if(ref instanceof FirebaseStorageImpl){if(null==ref._bucket)throw new FirebaseStorageError(\"no-default-bucket\",\"No default bucket found. Did you set the 'storageBucket' property when initializing the app?\");\nref=new Reference(ref,ref._bucket);return null!=path?refFromPath(ref,path):ref}if(void 0!==path){if(path.includes(\"..\"))throw invalidArgument('`path` param cannot contain \"..\"');return _getChild$1(ref,path)}return ref}function extractBucket(host,config){config=null===config||void 0===config?void 0:config.storageBucket;return null==config?null:Location$jscomp$0.makeFromBucketSpec(config,host)}function list(ref,options){ref=(0,_util.getModularInstance)(ref);return list$1(ref,options)}function listAll(ref){ref=\n(0,_util.getModularInstance)(ref);return listAll$1(ref)}function ref$jscomp$0(serviceOrRef,pathOrUrl){serviceOrRef=(0,_util.getModularInstance)(serviceOrRef);if(pathOrUrl&&isUrl(pathOrUrl))if(serviceOrRef instanceof FirebaseStorageImpl)pathOrUrl=new Reference(serviceOrRef,pathOrUrl);else throw invalidArgument(\"To use ref(service, url), the first argument must be a Storage instance.\");else pathOrUrl=refFromPath(serviceOrRef,pathOrUrl);return pathOrUrl}function factory(container,_a){_a=_a.instanceIdentifier;\nvar app=container.getProvider(\"app\").getImmediate(),authProvider=container.getProvider(\"auth-internal\");container=container.getProvider(\"app-check-internal\");return new StorageServiceCompat(app,new FirebaseStorageImpl(app,authProvider,container,new ConnectionPool,_a,_app[\"default\"].SDK_VERSION))}function registerStorage(instance){var namespaceExports={TaskState,TaskEvent,StringFormat,Storage:FirebaseStorageImpl,Reference:ReferenceCompat};instance.INTERNAL.registerComponent((new _component.Component(STORAGE_TYPE,\nfactory,\"PUBLIC\")).setServiceProps(namespaceExports).setMultipleInstances(!0));instance.registerVersion(name$jscomp$0,version)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.registerStorage=registerStorage;var _app=function(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}(require(\"module$node_modules$$firebase$app$dist$index_esm\")),_tslib=require(\"module$node_modules$tslib$tslib\"),_util=require(\"module$node_modules$$firebase$util$dist$index_esm\"),_component=require(\"module$node_modules$$firebase$component$dist$index_esm\"),\nFirebaseStorageError=function(_super){function FirebaseStorageError(code,message){code=_super.call(this,\"storage/\"+code,\"Firebase Storage: \"+message+\" (storage/\"+code+\")\")||this;code.customData={serverResponse:null};code._baseMessage=code.message;Object.setPrototypeOf(code,FirebaseStorageError.prototype);return code}(0,_tslib.__extends)(FirebaseStorageError,_super);FirebaseStorageError.prototype._codeEquals=function(code){return\"storage/\"+code===this.code};Object.defineProperty(FirebaseStorageError.prototype,\n\"serverResponse\",{get:function(){return this.customData.serverResponse},set:function(serverResponse){this.customData.serverResponse=serverResponse;this.message=this.customData.serverResponse?this._baseMessage+\"\\n\"+this.customData.serverResponse:this._baseMessage},enumerable:!1,configurable:!0});return FirebaseStorageError}(_util.FirebaseError),StringFormat={RAW:\"raw\",BASE64:\"base64\",BASE64URL:\"base64url\",DATA_URL:\"data_url\"},StringData=function(){return function(data,contentType){this.data=data;this.contentType=\ncontentType||null}}(),DataURLParts=function(){return function(dataURL){this.base64=!1;this.contentType=null;var matches=dataURL.match(/^data:([^,]+)?,/);if(null===matches)throw invalidFormat(StringFormat.DATA_URL,\"Must be formatted 'data:[\\x3cmediatype\\x3e][;base64],\\x3cdata\\x3e\");matches=matches[1]||null;if(null!=matches){var JSCompiler_inline_result=7<=matches.length?\";base64\"===matches.substring(matches.length-7):!1;this.contentType=(this.base64=JSCompiler_inline_result)?matches.substring(0,matches.length-\n7):matches}this.rest=dataURL.substring(dataURL.indexOf(\",\")+1)}}(),TaskEvent={STATE_CHANGED:\"state_changed\"},TaskState={RUNNING:\"running\",PAUSED:\"paused\",SUCCESS:\"success\",CANCELED:\"canceled\",ERROR:\"error\"},ErrorCode;(function(ErrorCode){ErrorCode[ErrorCode.NO_ERROR=0]=\"NO_ERROR\";ErrorCode[ErrorCode.NETWORK_ERROR=1]=\"NETWORK_ERROR\";ErrorCode[ErrorCode.ABORT=2]=\"ABORT\"})(ErrorCode||(ErrorCode={}));var XhrConnection=function(){function XhrConnection(){var _this=this;this.sent_=!1;this.xhr_=new XMLHttpRequest;\nthis.errorCode_=ErrorCode.NO_ERROR;this.sendPromise_=new Promise(function(resolve){_this.xhr_.addEventListener(\"abort\",function(){_this.errorCode_=ErrorCode.ABORT;resolve()});_this.xhr_.addEventListener(\"error\",function(){_this.errorCode_=ErrorCode.NETWORK_ERROR;resolve()});_this.xhr_.addEventListener(\"load\",function(){resolve()})})}XhrConnection.prototype.send=function(url,method,body,headers){if(this.sent_)throw internalError(\"cannot .send() more than once\");this.sent_=!0;this.xhr_.open(method,\nurl,!0);if(void 0!==headers)for(var key in headers)headers.hasOwnProperty(key)&&this.xhr_.setRequestHeader(key,headers[key].toString());void 0!==body?this.xhr_.send(body):this.xhr_.send();return this.sendPromise_};XhrConnection.prototype.getErrorCode=function(){if(!this.sent_)throw internalError(\"cannot .getErrorCode() before sending\");return this.errorCode_};XhrConnection.prototype.getStatus=function(){if(!this.sent_)throw internalError(\"cannot .getStatus() before sending\");try{return this.xhr_.status}catch(e){return-1}};\nXhrConnection.prototype.getResponseText=function(){if(!this.sent_)throw internalError(\"cannot .getResponseText() before sending\");return this.xhr_.responseText};XhrConnection.prototype.abort=function(){this.xhr_.abort()};XhrConnection.prototype.getResponseHeader=function(header){return this.xhr_.getResponseHeader(header)};XhrConnection.prototype.addUploadProgressListener=function(listener){null!=this.xhr_.upload&&this.xhr_.upload.addEventListener(\"progress\",listener)};XhrConnection.prototype.removeUploadProgressListener=\nfunction(listener){null!=this.xhr_.upload&&this.xhr_.upload.removeEventListener(\"progress\",listener)};return XhrConnection}(),ConnectionPool=function(){function ConnectionPool(){}ConnectionPool.prototype.createConnection=function(){return new XhrConnection};return ConnectionPool}(),Location$jscomp$0=function(){function Location(bucket,path){this.bucket=bucket;this.path_=path}Object.defineProperty(Location.prototype,\"path\",{get:function(){return this.path_},enumerable:!1,configurable:!0});Object.defineProperty(Location.prototype,\n\"isRoot\",{get:function(){return 0===this.path.length},enumerable:!1,configurable:!0});Location.prototype.fullServerUrl=function(){var encode=encodeURIComponent;return\"/b/\"+encode(this.bucket)+\"/o/\"+encode(this.path)};Location.prototype.bucketOnlyServerUrl=function(){return\"/b/\"+encodeURIComponent(this.bucket)+\"/o\"};Location.makeFromBucketSpec=function(bucketString,host){try{var bucketLocation=Location.makeFromUrl(bucketString,host)}catch(e){return new Location(bucketString,\"\")}if(\"\"===bucketLocation.path)return bucketLocation;\nthrow new FirebaseStorageError(\"invalid-default-bucket\",\"Invalid default bucket '\"+bucketString+\"'.\");};Location.makeFromUrl=function(url,host){function httpModify(loc){loc.path_=decodeURIComponent(loc.path)}for(var location=null,firebaseStorageHost=host.replace(/[.]/g,\"\\\\.\"),groups=[{regex:/^gs:\\/\\/([A-Za-z0-9.\\-_]+)(\\/(.*))?$/i,indices:{bucket:1,path:3},postModify:function(loc){\"/\"===loc.path.charAt(loc.path.length-1)&&(loc.path_=loc.path_.slice(0,-1))}},{regex:new RegExp(\"^https?://\"+firebaseStorageHost+\n\"/v[A-Za-z0-9_]+/b/([A-Za-z0-9.\\\\-_]+)/o(/([^?#]*).*)?$\",\"i\"),indices:{bucket:1,path:3},postModify:httpModify},{regex:new RegExp(\"^https?://\"+(\"firebasestorage.googleapis.com\"===host?\"(?:storage.googleapis.com|storage.cloud.google.com)\":host)+\"/([A-Za-z0-9.\\\\-_]+)/([^?#]*)\",\"i\"),indices:{bucket:1,path:2},postModify:httpModify}],i=0;i<groups.length;i++)if(host=groups[i],firebaseStorageHost=host.regex.exec(url)){location=firebaseStorageHost[host.indices.bucket];(firebaseStorageHost=firebaseStorageHost[host.indices.path])||\n(firebaseStorageHost=\"\");location=new Location(location,firebaseStorageHost);host.postModify(location);break}if(null==location)throw new FirebaseStorageError(\"invalid-url\",\"Invalid URL '\"+url+\"'.\");return location};return Location}(),FailRequest=function(){function FailRequest(error){this.promise_=Promise.reject(error)}FailRequest.prototype.getPromise=function(){return this.promise_};FailRequest.prototype.cancel=function(_appDelete){};return FailRequest}(),NetworkRequest=function(){function NetworkRequest(url,\nmethod,headers,body,successCodes,additionalRetryCodes,callback,errorCallback,timeout,progressCallback,pool){var _this=this;this.backoffId_=this.pendingConnection_=null;this.appDelete_=this.canceled_=!1;this.url_=url;this.method_=method;this.headers_=headers;this.body_=body;this.successCodes_=successCodes.slice();this.additionalRetryCodes_=additionalRetryCodes.slice();this.callback_=callback;this.errorCallback_=errorCallback;this.progressCallback_=progressCallback;this.timeout_=timeout;this.pool_=\npool;this.promise_=new Promise(function(resolve,reject){_this.resolve_=resolve;_this.reject_=reject;_this.start_()})}NetworkRequest.prototype.start_=function(){function doTheRequest(backoffCallback,canceled){function progressListener(progressEvent){var loaded=progressEvent.loaded;progressEvent=progressEvent.lengthComputable?progressEvent.total:-1;null!==self.progressCallback_&&self.progressCallback_(loaded,progressEvent)}if(canceled)backoffCallback(!1,new RequestEndStatus(!1,null,!0));else{var connection=\nself.pool_.createConnection();self.pendingConnection_=connection;null!==self.progressCallback_&&connection.addUploadProgressListener(progressListener);connection.send(self.url_,self.method_,self.body_,self.headers_).then(function(){null!==self.progressCallback_&&connection.removeUploadProgressListener(progressListener);self.pendingConnection_=null;var hitServer=connection.getErrorCode()===ErrorCode.NO_ERROR,status=connection.getStatus();!hitServer||self.isRetryStatusCode_(status)?(hitServer=connection.getErrorCode()===\nErrorCode.ABORT,backoffCallback(!1,new RequestEndStatus(!1,null,hitServer))):(hitServer=-1!==self.successCodes_.indexOf(status),backoffCallback(!0,new RequestEndStatus(hitServer,connection)))})}}function backoffDone(requestWentThrough,status){var resolve=self.resolve_;requestWentThrough=self.reject_;var connection=status.connection;if(status.wasSuccessCode)try{var result=self.callback_(connection,connection.getResponseText());void 0!==result?resolve(result):resolve()}catch(e){requestWentThrough(e)}else null!==\nconnection?(status=unknown(),status.serverResponse=connection.getResponseText(),self.errorCallback_?requestWentThrough(self.errorCallback_(connection,status)):requestWentThrough(status)):(status=status.canceled?self.appDelete_?appDeleted():canceled():new FirebaseStorageError(\"retry-limit-exceeded\",\"Max retry time for operation exceeded, please try again.\"),requestWentThrough(status))}var self=this;this.canceled_?backoffDone(!1,new RequestEndStatus(!1,null,!0)):this.backoffId_=start(doTheRequest,backoffDone,\nthis.timeout_)};NetworkRequest.prototype.getPromise=function(){return this.promise_};NetworkRequest.prototype.cancel=function(appDelete){this.canceled_=!0;this.appDelete_=appDelete||!1;null!==this.backoffId_&&(0,this.backoffId_)(!1);null!==this.pendingConnection_&&this.pendingConnection_.abort()};NetworkRequest.prototype.isRetryStatusCode_=function(status){var isFiveHundredCode=500<=status&&600>status,isExtraRetryCode=-1!==[408,429].indexOf(status);status=-1!==this.additionalRetryCodes_.indexOf(status);\nreturn isFiveHundredCode||isExtraRetryCode||status};return NetworkRequest}(),RequestEndStatus=function(){return function(wasSuccessCode,connection,canceled){this.wasSuccessCode=wasSuccessCode;this.connection=connection;this.canceled=!!canceled}}(),FbsBlob=function(){function FbsBlob(data,elideCopy){var size=0,blobType=\"\";isNativeBlob(data)?(this.data_=data,size=data.size,blobType=data.type):data instanceof ArrayBuffer?(elideCopy?this.data_=new Uint8Array(data):(this.data_=new Uint8Array(data.byteLength),\nthis.data_.set(new Uint8Array(data))),size=this.data_.length):data instanceof Uint8Array&&(elideCopy?this.data_=data:(this.data_=new Uint8Array(data.length),this.data_.set(data)),size=data.length);this.size_=size;this.type_=blobType}FbsBlob.prototype.size=function(){return this.size_};FbsBlob.prototype.type=function(){return this.type_};FbsBlob.prototype.slice=function(startByte,endByte){if(isNativeBlob(this.data_)){var blob=this.data_;startByte=blob.webkitSlice?blob.webkitSlice(startByte,endByte):\nblob.mozSlice?blob.mozSlice(startByte,endByte):blob.slice?blob.slice(startByte,endByte):null;return null===startByte?null:new FbsBlob(startByte)}startByte=new Uint8Array(this.data_.buffer,startByte,endByte-startByte);return new FbsBlob(startByte,!0)};FbsBlob.getBlob=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];if(isNativeBlobDefined())return args=args.map(function(val){return val instanceof FbsBlob?val.data_:val}),new FbsBlob(getBlob.apply(null,args));args=args.map(function(val){return isString(val)?\ndataFromString(StringFormat.RAW,val).data:val.data_});var finalLength_1=0;args.forEach(function(array){finalLength_1+=array.byteLength});var merged_1=new Uint8Array(finalLength_1),index_1=0;args.forEach(function(array){for(var i=0;i<array.length;i++)merged_1[index_1++]=array[i]});return new FbsBlob(merged_1,!0)};FbsBlob.prototype.uploadData=function(){return this.data_};return FbsBlob}(),Mapping=function(){return function(server,local,writable,xform){this.server=server;this.local=local||server;this.writable=\n!!writable;this.xform=xform||noXform_}}(),mappings_=null,RequestInfo=function(){return function(url,method,handler,timeout){this.url=url;this.method=method;this.handler=handler;this.timeout=timeout;this.urlParams={};this.headers={};this.progressCallback=this.errorHandler=this.body=null;this.successCodes=[200];this.additionalRetryCodes=[]}}(),ResumableUploadStatus=function(){return function(current,total,finalized,metadata){this.current=current;this.total=total;this.finalized=!!finalized;this.metadata=\nmetadata||null}}(),Observer=function(){return function(nextOrObserver,error,complete){\"function\"===typeof nextOrObserver||null!=error||null!=complete?(this.next=nextOrObserver,this.error=error,this.complete=complete):(this.next=nextOrObserver.next,this.error=nextOrObserver.error,this.complete=nextOrObserver.complete)}}(),UploadTask=function(){function UploadTask(ref,blob,metadata){var _this=this;void 0===metadata&&(metadata=null);this._transferred=0;this._needToFetchMetadata=this._needToFetchStatus=\n!1;this._observers=[];this._request=this._uploadUrl=this._error=void 0;this._chunkMultiplier=1;this._reject=this._resolve=void 0;this._ref=ref;this._blob=blob;this._metadata=metadata;this._mappings=getMappings();this._resumable=this._shouldDoResumable(this._blob);this._state=\"running\";this._errorHandler=function(error){_this._request=void 0;_this._chunkMultiplier=1;error._codeEquals(\"canceled\")?(_this._needToFetchStatus=!0,_this.completeTransitions_()):(_this._error=error,_this._transition(\"error\"))};\nthis._metadataErrorHandler=function(error){_this._request=void 0;error._codeEquals(\"canceled\")?_this.completeTransitions_():(_this._error=error,_this._transition(\"error\"))};this._promise=new Promise(function(resolve,reject){_this._resolve=resolve;_this._reject=reject;_this._start()});this._promise.then(null,function(){})}UploadTask.prototype._makeProgressCallback=function(){var _this=this,sizeBefore=this._transferred;return function(loaded){return _this._updateProgress(sizeBefore+loaded)}};UploadTask.prototype._shouldDoResumable=\nfunction(blob){return 262144<blob.size()};UploadTask.prototype._start=function(){\"running\"===this._state&&void 0===this._request&&(this._resumable?void 0===this._uploadUrl?this._createResumable():this._needToFetchStatus?this._fetchStatus():this._needToFetchMetadata?this._fetchMetadata():this._continueUpload():this._oneShotUpload())};UploadTask.prototype._resolveToken=function(callback){var _this=this;Promise.all([this._ref.storage._getAuthToken(),this._ref.storage._getAppCheckToken()]).then(function(_a){var authToken=\n_a[0];_a=_a[1];switch(_this._state){case \"running\":callback(authToken,_a);break;case \"canceling\":_this._transition(\"canceled\");break;case \"pausing\":_this._transition(\"paused\")}})};UploadTask.prototype._createResumable=function(){var _this=this;this._resolveToken(function(authToken,appCheckToken){var requestInfo=createResumableUpload(_this._ref.storage,_this._ref._location,_this._mappings,_this._blob,_this._metadata);authToken=_this._ref.storage._makeRequest(requestInfo,authToken,appCheckToken);_this._request=\nauthToken;authToken.getPromise().then(function(url){_this._request=void 0;_this._uploadUrl=url;_this._needToFetchStatus=!1;_this.completeTransitions_()},_this._errorHandler)})};UploadTask.prototype._fetchStatus=function(){var _this=this,url=this._uploadUrl;this._resolveToken(function(authToken,appCheckToken){var requestInfo=getResumableUploadStatus(_this._ref.storage,_this._ref._location,url,_this._blob);authToken=_this._ref.storage._makeRequest(requestInfo,authToken,appCheckToken);_this._request=\nauthToken;authToken.getPromise().then(function(status){_this._request=void 0;_this._updateProgress(status.current);_this._needToFetchStatus=!1;status.finalized&&(_this._needToFetchMetadata=!0);_this.completeTransitions_()},_this._errorHandler)})};UploadTask.prototype._continueUpload=function(){var _this=this,chunkSize=262144*this._chunkMultiplier,status=new ResumableUploadStatus(this._transferred,this._blob.size()),url=this._uploadUrl;this._resolveToken(function(authToken,appCheckToken){try{var requestInfo=\ncontinueResumableUpload(_this._ref._location,_this._ref.storage,url,_this._blob,chunkSize,_this._mappings,status,_this._makeProgressCallback())}catch(e){_this._error=e;_this._transition(\"error\");return}authToken=_this._ref.storage._makeRequest(requestInfo,authToken,appCheckToken);_this._request=authToken;authToken.getPromise().then(function(newStatus){_this._increaseMultiplier();_this._request=void 0;_this._updateProgress(newStatus.current);newStatus.finalized?(_this._metadata=newStatus.metadata,\n_this._transition(\"success\")):_this.completeTransitions_()},_this._errorHandler)})};UploadTask.prototype._increaseMultiplier=function(){33554432>262144*this._chunkMultiplier&&(this._chunkMultiplier*=2)};UploadTask.prototype._fetchMetadata=function(){var _this=this;this._resolveToken(function(authToken,appCheckToken){var requestInfo=getMetadata$2(_this._ref.storage,_this._ref._location,_this._mappings);authToken=_this._ref.storage._makeRequest(requestInfo,authToken,appCheckToken);_this._request=authToken;\nauthToken.getPromise().then(function(metadata){_this._request=void 0;_this._metadata=metadata;_this._transition(\"success\")},_this._metadataErrorHandler)})};UploadTask.prototype._oneShotUpload=function(){var _this=this;this._resolveToken(function(authToken,appCheckToken){var requestInfo=multipartUpload(_this._ref.storage,_this._ref._location,_this._mappings,_this._blob,_this._metadata);authToken=_this._ref.storage._makeRequest(requestInfo,authToken,appCheckToken);_this._request=authToken;authToken.getPromise().then(function(metadata){_this._request=\nvoid 0;_this._metadata=metadata;_this._updateProgress(_this._blob.size());_this._transition(\"success\")},_this._errorHandler)})};UploadTask.prototype._updateProgress=function(transferred){var old=this._transferred;this._transferred=transferred;this._transferred!==old&&this._notifyObservers()};UploadTask.prototype._transition=function(state){if(this._state!==state)switch(state){case \"canceling\":this._state=state;void 0!==this._request&&this._request.cancel();break;case \"pausing\":this._state=state;void 0!==\nthis._request&&this._request.cancel();break;case \"running\":var wasPaused=\"paused\"===this._state;this._state=state;wasPaused&&(this._notifyObservers(),this._start());break;case \"paused\":this._state=state;this._notifyObservers();break;case \"canceled\":this._error=canceled();this._state=state;this._notifyObservers();break;case \"error\":this._state=state;this._notifyObservers();break;case \"success\":this._state=state,this._notifyObservers()}};UploadTask.prototype.completeTransitions_=function(){switch(this._state){case \"pausing\":this._transition(\"paused\");\nbreak;case \"canceling\":this._transition(\"canceled\");break;case \"running\":this._start()}};Object.defineProperty(UploadTask.prototype,\"snapshot\",{get:function(){var externalState=taskStateFromInternalTaskState(this._state);return{bytesTransferred:this._transferred,totalBytes:this._blob.size(),state:externalState,metadata:this._metadata,task:this,ref:this._ref}},enumerable:!1,configurable:!0});UploadTask.prototype.on=function(type,nextOrObserver,error,completed){var _this=this,observer=new Observer(nextOrObserver,\nerror,completed);this._addObserver(observer);return function(){_this._removeObserver(observer)}};UploadTask.prototype.then=function(onFulfilled,onRejected){return this._promise.then(onFulfilled,onRejected)};UploadTask.prototype[\"catch\"]=function(onRejected){return this.then(null,onRejected)};UploadTask.prototype._addObserver=function(observer){this._observers.push(observer);this._notifyObserver(observer)};UploadTask.prototype._removeObserver=function(observer){observer=this._observers.indexOf(observer);\n-1!==observer&&this._observers.splice(observer,1)};UploadTask.prototype._notifyObservers=function(){var _this=this;this._finishPromise();this._observers.slice().forEach(function(observer){_this._notifyObserver(observer)})};UploadTask.prototype._finishPromise=function(){if(void 0!==this._resolve){var triggered=!0;switch(taskStateFromInternalTaskState(this._state)){case TaskState.SUCCESS:async(this._resolve.bind(null,this.snapshot))();break;case TaskState.CANCELED:case TaskState.ERROR:async(this._reject.bind(null,\nthis._error))();break;default:triggered=!1}triggered&&(this._reject=this._resolve=void 0)}};UploadTask.prototype._notifyObserver=function(observer){switch(taskStateFromInternalTaskState(this._state)){case TaskState.RUNNING:case TaskState.PAUSED:observer.next&&async(observer.next.bind(observer,this.snapshot))();break;case TaskState.SUCCESS:observer.complete&&async(observer.complete.bind(observer))();break;case TaskState.CANCELED:case TaskState.ERROR:observer.error&&async(observer.error.bind(observer,\nthis._error))();break;default:observer.error&&async(observer.error.bind(observer,this._error))()}};UploadTask.prototype.resume=function(){var valid=\"paused\"===this._state||\"pausing\"===this._state;valid&&this._transition(\"running\");return valid};UploadTask.prototype.pause=function(){var valid=\"running\"===this._state;valid&&this._transition(\"pausing\");return valid};UploadTask.prototype.cancel=function(){var valid=\"running\"===this._state||\"pausing\"===this._state;valid&&this._transition(\"canceling\");\nreturn valid};return UploadTask}(),Reference=function(){function Reference(_service,location){this._service=_service;this._location=location instanceof Location$jscomp$0?location:Location$jscomp$0.makeFromUrl(location,_service.host)}Reference.prototype.toString=function(){return\"gs://\"+this._location.bucket+\"/\"+this._location.path};Reference.prototype._newRef=function(service,location){return new Reference(service,location)};Object.defineProperty(Reference.prototype,\"root\",{get:function(){var location=\nnew Location$jscomp$0(this._location.bucket,\"\");return this._newRef(this._service,location)},enumerable:!1,configurable:!0});Object.defineProperty(Reference.prototype,\"bucket\",{get:function(){return this._location.bucket},enumerable:!1,configurable:!0});Object.defineProperty(Reference.prototype,\"fullPath\",{get:function(){return this._location.path},enumerable:!1,configurable:!0});Object.defineProperty(Reference.prototype,\"name\",{get:function(){return lastComponent(this._location.path)},enumerable:!1,\nconfigurable:!0});Object.defineProperty(Reference.prototype,\"storage\",{get:function(){return this._service},enumerable:!1,configurable:!0});Object.defineProperty(Reference.prototype,\"parent\",{get:function(){var newPath=this._location.path;if(0===newPath.length)newPath=null;else{var index=newPath.lastIndexOf(\"/\");newPath=-1===index?\"\":newPath.slice(0,index)}if(null===newPath)return null;newPath=new Location$jscomp$0(this._location.bucket,newPath);return new Reference(this._service,newPath)},enumerable:!1,\nconfigurable:!0});Reference.prototype._throwIfRoot=function(name){if(\"\"===this._location.path)throw invalidRootOperation(name);};return Reference}(),FirebaseStorageImpl=function(){function FirebaseStorageImpl(app,_authProvider,_appCheckProvider,_pool,_url,_firebaseVersion){this.app=app;this._authProvider=_authProvider;this._appCheckProvider=_appCheckProvider;this._pool=_pool;this._url=_url;this._firebaseVersion=_firebaseVersion;this._bucket=null;this._host=\"firebasestorage.googleapis.com\";this._appId=\nnull;this._deleted=!1;this._maxOperationRetryTime=12E4;this._maxUploadRetryTime=6E5;this._requests=new Set;this._bucket=null!=_url?Location$jscomp$0.makeFromBucketSpec(_url,this._host):extractBucket(this._host,this.app.options)}Object.defineProperty(FirebaseStorageImpl.prototype,\"host\",{get:function(){return this._host},set:function(host){this._host=host;this._bucket=null!=this._url?Location$jscomp$0.makeFromBucketSpec(this._url,host):extractBucket(host,this.app.options)},enumerable:!1,configurable:!0});\nObject.defineProperty(FirebaseStorageImpl.prototype,\"maxUploadRetryTime\",{get:function(){return this._maxUploadRetryTime},set:function(time){validateNumber(\"time\",0,Number.POSITIVE_INFINITY,time);this._maxUploadRetryTime=time},enumerable:!1,configurable:!0});Object.defineProperty(FirebaseStorageImpl.prototype,\"maxOperationRetryTime\",{get:function(){return this._maxOperationRetryTime},set:function(time){validateNumber(\"time\",0,Number.POSITIVE_INFINITY,time);this._maxOperationRetryTime=time},enumerable:!1,\nconfigurable:!0});FirebaseStorageImpl.prototype._getAuthToken=function(){return(0,_tslib.__awaiter)(this,void 0,void 0,function(){var auth,tokenData;return(0,_tslib.__generator)(this,function(_a){switch(_a.label){case 0:return(auth=this._authProvider.getImmediate({optional:!0}))?[4,auth.getToken()]:[3,2];case 1:tokenData=_a.sent();if(null!==tokenData)return[2,tokenData.accessToken];_a.label=2;case 2:return[2,null]}})})};FirebaseStorageImpl.prototype._getAppCheckToken=function(){return(0,_tslib.__awaiter)(this,\nvoid 0,void 0,function(){var appCheck,result;return(0,_tslib.__generator)(this,function(_a){switch(_a.label){case 0:return(appCheck=this._appCheckProvider.getImmediate({optional:!0}))?[4,appCheck.getToken()]:[3,2];case 1:return result=_a.sent(),[2,result.token];case 2:return[2,null]}})})};FirebaseStorageImpl.prototype._delete=function(){this._deleted||(this._deleted=!0,this._requests.forEach(function(request){return request.cancel()}),this._requests.clear());return Promise.resolve()};FirebaseStorageImpl.prototype._makeStorageReference=\nfunction(loc){return new Reference(this,loc)};FirebaseStorageImpl.prototype._makeRequest=function(requestInfo,authToken,appCheckToken){var _this=this;if(this._deleted)return new FailRequest(appDeleted());var request_1=makeRequest(requestInfo,this._appId,authToken,appCheckToken,this._pool,this._firebaseVersion);this._requests.add(request_1);request_1.getPromise().then(function(){return _this._requests[\"delete\"](request_1)},function(){return _this._requests[\"delete\"](request_1)});return request_1};\nFirebaseStorageImpl.prototype.makeRequestWithTokens=function(requestInfo){return(0,_tslib.__awaiter)(this,void 0,void 0,function(){var _a,authToken,appCheckToken;return(0,_tslib.__generator)(this,function(_b){switch(_b.label){case 0:return[4,Promise.all([this._getAuthToken(),this._getAppCheckToken()])];case 1:return _a=_b.sent(),authToken=_a[0],appCheckToken=_a[1],[2,this._makeRequest(requestInfo,authToken,appCheckToken)]}})})};return FirebaseStorageImpl}(),UploadTaskSnapshotCompat=function(){function UploadTaskSnapshotCompat(_delegate,\ntask,ref){this._delegate=_delegate;this.task=task;this.ref=ref}Object.defineProperty(UploadTaskSnapshotCompat.prototype,\"bytesTransferred\",{get:function(){return this._delegate.bytesTransferred},enumerable:!1,configurable:!0});Object.defineProperty(UploadTaskSnapshotCompat.prototype,\"metadata\",{get:function(){return this._delegate.metadata},enumerable:!1,configurable:!0});Object.defineProperty(UploadTaskSnapshotCompat.prototype,\"state\",{get:function(){return this._delegate.state},enumerable:!1,configurable:!0});\nObject.defineProperty(UploadTaskSnapshotCompat.prototype,\"totalBytes\",{get:function(){return this._delegate.totalBytes},enumerable:!1,configurable:!0});return UploadTaskSnapshotCompat}(),UploadTaskCompat=function(){function UploadTaskCompat(_delegate,_ref){this._delegate=_delegate;this._ref=_ref;this.cancel=this._delegate.cancel.bind(this._delegate);this[\"catch\"]=this._delegate[\"catch\"].bind(this._delegate);this.pause=this._delegate.pause.bind(this._delegate);this.resume=this._delegate.resume.bind(this._delegate)}\nObject.defineProperty(UploadTaskCompat.prototype,\"snapshot\",{get:function(){return new UploadTaskSnapshotCompat(this._delegate.snapshot,this,this._ref)},enumerable:!1,configurable:!0});UploadTaskCompat.prototype.then=function(onFulfilled,onRejected){var _this=this;return this._delegate.then(function(snapshot){if(onFulfilled)return onFulfilled(new UploadTaskSnapshotCompat(snapshot,_this,_this._ref))},onRejected)};UploadTaskCompat.prototype.on=function(type,nextOrObserver,error,completed){var _this=\nthis,wrappedNextOrObserver=void 0;nextOrObserver&&(wrappedNextOrObserver=\"function\"===typeof nextOrObserver?function(taskSnapshot){return nextOrObserver(new UploadTaskSnapshotCompat(taskSnapshot,_this,_this._ref))}:{next:nextOrObserver.next?function(taskSnapshot){return nextOrObserver.next(new UploadTaskSnapshotCompat(taskSnapshot,_this,_this._ref))}:void 0,complete:nextOrObserver.complete||void 0,error:nextOrObserver.error||void 0});return this._delegate.on(type,wrappedNextOrObserver,error||void 0,\ncompleted||void 0)};return UploadTaskCompat}(),ListResultCompat=function(){function ListResultCompat(_delegate,_service){this._delegate=_delegate;this._service=_service}Object.defineProperty(ListResultCompat.prototype,\"prefixes\",{get:function(){var _this=this;return this._delegate.prefixes.map(function(ref){return new ReferenceCompat(ref,_this._service)})},enumerable:!1,configurable:!0});Object.defineProperty(ListResultCompat.prototype,\"items\",{get:function(){var _this=this;return this._delegate.items.map(function(ref){return new ReferenceCompat(ref,\n_this._service)})},enumerable:!1,configurable:!0});Object.defineProperty(ListResultCompat.prototype,\"nextPageToken\",{get:function(){return this._delegate.nextPageToken||null},enumerable:!1,configurable:!0});return ListResultCompat}(),ReferenceCompat=function(){function ReferenceCompat(_delegate,storage){this._delegate=_delegate;this.storage=storage}Object.defineProperty(ReferenceCompat.prototype,\"name\",{get:function(){return this._delegate.name},enumerable:!1,configurable:!0});Object.defineProperty(ReferenceCompat.prototype,\n\"bucket\",{get:function(){return this._delegate.bucket},enumerable:!1,configurable:!0});Object.defineProperty(ReferenceCompat.prototype,\"fullPath\",{get:function(){return this._delegate.fullPath},enumerable:!1,configurable:!0});ReferenceCompat.prototype.toString=function(){return this._delegate.toString()};ReferenceCompat.prototype.child=function(childPath){childPath=_getChild$1(this._delegate,childPath);return new ReferenceCompat(childPath,this.storage)};Object.defineProperty(ReferenceCompat.prototype,\n\"root\",{get:function(){return new ReferenceCompat(this._delegate.root,this.storage)},enumerable:!1,configurable:!0});Object.defineProperty(ReferenceCompat.prototype,\"parent\",{get:function(){var reference=this._delegate.parent;return null==reference?null:new ReferenceCompat(reference,this.storage)},enumerable:!1,configurable:!0});ReferenceCompat.prototype.put=function(data,metadata){this._throwIfRoot(\"put\");var ref=this._delegate;ref=(0,_util.getModularInstance)(ref);ref._throwIfRoot(\"uploadBytesResumable\");\ndata=new UploadTask(ref,new FbsBlob(data),metadata);return new UploadTaskCompat(data,this)};ReferenceCompat.prototype.putString=function(value,format,metadata){void 0===format&&(format=StringFormat.RAW);this._throwIfRoot(\"putString\");value=dataFromString(format,value);metadata=(0,_tslib.__assign)({},metadata);null==metadata.contentType&&null!=value.contentType&&(metadata.contentType=value.contentType);return new UploadTaskCompat(new UploadTask(this._delegate,new FbsBlob(value.data,!0),metadata),this)};\nReferenceCompat.prototype.listAll=function(){var _this=this;return listAll(this._delegate).then(function(r){return new ListResultCompat(r,_this.storage)})};ReferenceCompat.prototype.list=function(options){var _this=this;return list(this._delegate,options||void 0).then(function(r){return new ListResultCompat(r,_this.storage)})};ReferenceCompat.prototype.getMetadata=function(){var ref=this._delegate;ref=(0,_util.getModularInstance)(ref);return getMetadata$1(ref)};ReferenceCompat.prototype.updateMetadata=\nfunction(metadata){var ref=this._delegate;ref=(0,_util.getModularInstance)(ref);return updateMetadata$1(ref,metadata)};ReferenceCompat.prototype.getDownloadURL=function(){var ref=this._delegate;ref=(0,_util.getModularInstance)(ref);return getDownloadURL$1(ref)};ReferenceCompat.prototype[\"delete\"]=function(){this._throwIfRoot(\"delete\");var ref=this._delegate;ref=(0,_util.getModularInstance)(ref);return deleteObject$1(ref)};ReferenceCompat.prototype._throwIfRoot=function(name){if(\"\"===this._delegate._location.path)throw invalidRootOperation(name);\n};return ReferenceCompat}(),StorageServiceCompat=function(){function StorageServiceCompat(app,_delegate){this.app=app;this._delegate=_delegate}Object.defineProperty(StorageServiceCompat.prototype,\"maxOperationRetryTime\",{get:function(){return this._delegate.maxOperationRetryTime},enumerable:!1,configurable:!0});Object.defineProperty(StorageServiceCompat.prototype,\"maxUploadRetryTime\",{get:function(){return this._delegate.maxUploadRetryTime},enumerable:!1,configurable:!0});StorageServiceCompat.prototype.ref=\nfunction(path){if(isUrl(path))throw invalidArgument(\"ref() expected a child path but got a URL, use refFromURL instead.\");return new ReferenceCompat(ref$jscomp$0(this._delegate,path),this)};StorageServiceCompat.prototype.refFromURL=function(url){if(!isUrl(url))throw invalidArgument(\"refFromURL() expected a full URL but got a child path, use ref() instead.\");try{Location$jscomp$0.makeFromUrl(url,this._delegate.host)}catch(e){throw invalidArgument(\"refFromUrl() expected a valid full URL but got an invalid one.\");\n}return new ReferenceCompat(ref$jscomp$0(this._delegate,url),this)};StorageServiceCompat.prototype.setMaxUploadRetryTime=function(time){this._delegate.maxUploadRetryTime=time};StorageServiceCompat.prototype.setMaxOperationRetryTime=function(time){this._delegate.maxOperationRetryTime=time};StorageServiceCompat.prototype.useEmulator=function(host,port){this._delegate.host=\"http://\"+host+\":\"+port};return StorageServiceCompat}(),name$jscomp$0=\"@firebase/storage\",version=\"0.6.1\",STORAGE_TYPE=\"storage\";\nregisterStorage(_app[\"default\"])}","~:source","shadow$provide[\"module$node_modules$$firebase$storage$dist$index_browser_esm\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerStorage = registerStorage;\n\nvar _app = _interopRequireDefault(require(\"@firebase/app\"));\n\nvar _tslib = require(\"tslib\");\n\nvar _util = require(\"@firebase/util\");\n\nvar _component = require(\"@firebase/component\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\n\n/**\r\n * Domain name for firebase storage.\r\n */\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\n\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\n\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\n\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n/**\r\n * An error returned by the Firebase Storage SDK.\r\n * @public\r\n */\n\nvar FirebaseStorageError =\n/** @class */\nfunction (_super) {\n  (0, _tslib.__extends)(FirebaseStorageError, _super);\n  /**\r\n   * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\r\n   *  added to the end of the message.\r\n   * @param message  - Error message.\r\n   */\n\n  function FirebaseStorageError(code, message) {\n    var _this = _super.call(this, prependCode(code), \"Firebase Storage: \" + message + \" (\" + prependCode(code) + \")\") || this;\n    /**\r\n     * Stores custom error data unque to FirebaseStorageError.\r\n     */\n\n\n    _this.customData = {\n      serverResponse: null\n    };\n    _this._baseMessage = _this.message; // Without this, `instanceof FirebaseStorageError`, in tests for example,\n    // returns false.\n\n    Object.setPrototypeOf(_this, FirebaseStorageError.prototype);\n    return _this;\n  }\n  /**\r\n   * Compares a StorageErrorCode against this error's code, filtering out the prefix.\r\n   */\n\n\n  FirebaseStorageError.prototype._codeEquals = function (code) {\n    return prependCode(code) === this.code;\n  };\n\n  Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\n    /**\r\n     * Optional response message that was added by the server.\r\n     */\n    get: function get() {\n      return this.customData.serverResponse;\n    },\n    set: function set(serverResponse) {\n      this.customData.serverResponse = serverResponse;\n\n      if (this.customData.serverResponse) {\n        this.message = this._baseMessage + \"\\n\" + this.customData.serverResponse;\n      } else {\n        this.message = this._baseMessage;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return FirebaseStorageError;\n}(_util.FirebaseError);\n\nfunction prependCode(code) {\n  return 'storage/' + code;\n}\n\nfunction unknown() {\n  var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n  return new FirebaseStorageError(\"unknown\"\n  /* UNKNOWN */\n  , message);\n}\n\nfunction objectNotFound(path) {\n  return new FirebaseStorageError(\"object-not-found\"\n  /* OBJECT_NOT_FOUND */\n  , \"Object '\" + path + \"' does not exist.\");\n}\n\nfunction quotaExceeded(bucket) {\n  return new FirebaseStorageError(\"quota-exceeded\"\n  /* QUOTA_EXCEEDED */\n  , \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\n\nfunction unauthenticated() {\n  var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n  return new FirebaseStorageError(\"unauthenticated\"\n  /* UNAUTHENTICATED */\n  , message);\n}\n\nfunction unauthorizedApp() {\n  return new FirebaseStorageError(\"unauthorized-app\"\n  /* UNAUTHORIZED_APP */\n  , 'This app does not have permission to access Firebase Storage on this project.');\n}\n\nfunction unauthorized(path) {\n  return new FirebaseStorageError(\"unauthorized\"\n  /* UNAUTHORIZED */\n  , \"User does not have permission to access '\" + path + \"'.\");\n}\n\nfunction retryLimitExceeded() {\n  return new FirebaseStorageError(\"retry-limit-exceeded\"\n  /* RETRY_LIMIT_EXCEEDED */\n  , 'Max retry time for operation exceeded, please try again.');\n}\n\nfunction canceled() {\n  return new FirebaseStorageError(\"canceled\"\n  /* CANCELED */\n  , 'User canceled the upload/download.');\n}\n\nfunction invalidUrl(url) {\n  return new FirebaseStorageError(\"invalid-url\"\n  /* INVALID_URL */\n  , \"Invalid URL '\" + url + \"'.\");\n}\n\nfunction invalidDefaultBucket(bucket) {\n  return new FirebaseStorageError(\"invalid-default-bucket\"\n  /* INVALID_DEFAULT_BUCKET */\n  , \"Invalid default bucket '\" + bucket + \"'.\");\n}\n\nfunction noDefaultBucket() {\n  return new FirebaseStorageError(\"no-default-bucket\"\n  /* NO_DEFAULT_BUCKET */\n  , 'No default bucket ' + \"found. Did you set the '\" + CONFIG_STORAGE_BUCKET_KEY + \"' property when initializing the app?\");\n}\n\nfunction cannotSliceBlob() {\n  return new FirebaseStorageError(\"cannot-slice-blob\"\n  /* CANNOT_SLICE_BLOB */\n  , 'Cannot slice blob for upload. Please retry the upload.');\n}\n\nfunction serverFileWrongSize() {\n  return new FirebaseStorageError(\"server-file-wrong-size\"\n  /* SERVER_FILE_WRONG_SIZE */\n  , 'Server recorded incorrect upload file size, please retry the upload.');\n}\n\nfunction noDownloadURL() {\n  return new FirebaseStorageError(\"no-download-url\"\n  /* NO_DOWNLOAD_URL */\n  , 'The given file does not have any download URLs.');\n}\n\nfunction invalidArgument(message) {\n  return new FirebaseStorageError(\"invalid-argument\"\n  /* INVALID_ARGUMENT */\n  , message);\n}\n\nfunction appDeleted() {\n  return new FirebaseStorageError(\"app-deleted\"\n  /* APP_DELETED */\n  , 'The Firebase app was deleted.');\n}\n/**\r\n * @param name - The name of the operation that was invalid.\r\n */\n\n\nfunction invalidRootOperation(name) {\n  return new FirebaseStorageError(\"invalid-root-operation\"\n  /* INVALID_ROOT_OPERATION */\n  , \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\n\n\nfunction invalidFormat(format, message) {\n  return new FirebaseStorageError(\"invalid-format\"\n  /* INVALID_FORMAT */\n  , \"String does not match format '\" + format + \"': \" + message);\n}\n/**\r\n * @param message - A message describing the internal error.\r\n */\n\n\nfunction internalError(message) {\n  throw new FirebaseStorageError(\"internal-error\"\n  /* INTERNAL_ERROR */\n  , 'Internal error: ' + message);\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** Converts a Base64 encoded string to a binary string. */\n\n\nfunction decodeBase64(encoded) {\n  return atob(encoded);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An enumeration of the possible string formats for upload.\r\n * @public\r\n */\n\n\nvar StringFormat = {\n  /**\r\n   * Indicates the string should be interpreted \"raw\", that is, as normal text.\r\n   * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\r\n   * sequence.\r\n   * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\r\n   * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\r\n   */\n  RAW: 'raw',\n\n  /**\r\n   * Indicates the string should be interpreted as base64-encoded data.\r\n   * Padding characters (trailing '='s) are optional.\r\n   * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\r\n   * ad 69 8e fb e1 3a b7 bf eb 97\r\n   */\n  BASE64: 'base64',\n\n  /**\r\n   * Indicates the string should be interpreted as base64url-encoded data.\r\n   * Padding characters (trailing '='s) are optional.\r\n   * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\r\n   * ad 69 8e fb e1 3a b7 bf eb 97\r\n   */\n  BASE64URL: 'base64url',\n\n  /**\r\n   * Indicates the string is a data URL, such as one obtained from\r\n   * canvas.toDataURL().\r\n   * Example: the string 'data:application/octet-stream;base64,aaaa'\r\n   * becomes the byte sequence\r\n   * 69 a6 9a\r\n   * (the content-type \"application/octet-stream\" is also applied, but can\r\n   * be overridden in the metadata object).\r\n   */\n  DATA_URL: 'data_url'\n};\n\nvar StringData =\n/** @class */\nfunction () {\n  function StringData(data, contentType) {\n    this.data = data;\n    this.contentType = contentType || null;\n  }\n\n  return StringData;\n}();\n\nfunction dataFromString(format, stringData) {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\n    // do nothing\n  } // assert(false);\n\n\n  throw unknown();\n}\n\nfunction utf8Bytes_(value) {\n  var b = [];\n\n  for (var i = 0; i < value.length; i++) {\n    var c = value.charCodeAt(i);\n\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | c >> 6, 128 | c & 63);\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            var hi = c;\n            var lo = value.charCodeAt(++i);\n            c = 65536 | (hi & 1023) << 10 | lo & 1023;\n            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        }\n      }\n    }\n  }\n\n  return new Uint8Array(b);\n}\n\nfunction percentEncodedBytes_(value) {\n  var decoded;\n\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n\n  return utf8Bytes_(decoded);\n}\n\nfunction base64Bytes_(format, value) {\n  switch (format) {\n    case StringFormat.BASE64:\n      {\n        var hasMinus = value.indexOf('-') !== -1;\n        var hasUnder = value.indexOf('_') !== -1;\n\n        if (hasMinus || hasUnder) {\n          var invalidChar = hasMinus ? '-' : '_';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n        }\n\n        break;\n      }\n\n    case StringFormat.BASE64URL:\n      {\n        var hasPlus = value.indexOf('+') !== -1;\n        var hasSlash = value.indexOf('/') !== -1;\n\n        if (hasPlus || hasSlash) {\n          var invalidChar = hasPlus ? '+' : '/';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\n        }\n\n        value = value.replace(/-/g, '+').replace(/_/g, '/');\n        break;\n      }\n    // do nothing\n  }\n\n  var bytes;\n\n  try {\n    bytes = decodeBase64(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n\n  var array = new Uint8Array(bytes.length);\n\n  for (var i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar DataURLParts =\n/** @class */\nfunction () {\n  function DataURLParts(dataURL) {\n    this.base64 = false;\n    this.contentType = null;\n    var matches = dataURL.match(/^data:([^,]+)?,/);\n\n    if (matches === null) {\n      throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n    }\n\n    var middle = matches[1] || null;\n\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n    }\n\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n\n  return DataURLParts;\n}();\n\nfunction dataURLBytes_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nfunction dataURLContentType_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s, end) {\n  var longEnough = s.length >= end.length;\n\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An event that is triggered on a task.\r\n */\n\n\nvar TaskEvent = {\n  /**\r\n   * For this event,\r\n   * <ul>\r\n   *   <li>The `next` function is triggered on progress updates and when the\r\n   *       task is paused/resumed with an `UploadTaskSnapshot` as the first\r\n   *       argument.</li>\r\n   *   <li>The `error` function is triggered if the upload is canceled or fails\r\n   *       for another reason.</li>\r\n   *   <li>The `complete` function is triggered if the upload completes\r\n   *       successfully.</li>\r\n   * </ul>\r\n   */\n  STATE_CHANGED: 'state_changed'\n};\n/**\r\n * Represents the current state of a running upload.\r\n */\n\nvar TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nfunction taskStateFromInternalTaskState(state) {\n  switch (state) {\n    case \"running\"\n    /* RUNNING */\n    :\n    case \"pausing\"\n    /* PAUSING */\n    :\n    case \"canceling\"\n    /* CANCELING */\n    :\n      return TaskState.RUNNING;\n\n    case \"paused\"\n    /* PAUSED */\n    :\n      return TaskState.PAUSED;\n\n    case \"success\"\n    /* SUCCESS */\n    :\n      return TaskState.SUCCESS;\n\n    case \"canceled\"\n    /* CANCELED */\n    :\n      return TaskState.CANCELED;\n\n    case \"error\"\n    /* ERROR */\n    :\n      return TaskState.ERROR;\n\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Error codes for requests made by the the XhrIo wrapper.\r\n */\n\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n  ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (ErrorCode = {}));\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\r\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\r\n */\n\n\nvar XhrConnection =\n/** @class */\nfunction () {\n  function XhrConnection() {\n    var _this = this;\n\n    this.sent_ = false;\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(function (resolve) {\n      _this.xhr_.addEventListener('abort', function () {\n        _this.errorCode_ = ErrorCode.ABORT;\n        resolve();\n      });\n\n      _this.xhr_.addEventListener('error', function () {\n        _this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve();\n      });\n\n      _this.xhr_.addEventListener('load', function () {\n        resolve();\n      });\n    });\n  }\n  /**\r\n   * @override\r\n   */\n\n\n  XhrConnection.prototype.send = function (url, method, body, headers) {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n\n    if (headers !== undefined) {\n      for (var key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n\n    if (body !== undefined) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n\n    return this.sendPromise_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  XhrConnection.prototype.getErrorCode = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n\n    return this.errorCode_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  XhrConnection.prototype.getStatus = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  XhrConnection.prototype.getResponseText = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n\n    return this.xhr_.responseText;\n  };\n  /**\r\n   * Aborts the request.\r\n   * @override\r\n   */\n\n\n  XhrConnection.prototype.abort = function () {\n    this.xhr_.abort();\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  XhrConnection.prototype.getResponseHeader = function (header) {\n    return this.xhr_.getResponseHeader(header);\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  XhrConnection.prototype.addUploadProgressListener = function (listener) {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  XhrConnection.prototype.removeUploadProgressListener = function (listener) {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  };\n\n  return XhrConnection;\n}();\n\nfunction newConnection() {\n  return new XhrConnection();\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\n\n\nvar ConnectionPool =\n/** @class */\nfunction () {\n  function ConnectionPool() {}\n\n  ConnectionPool.prototype.createConnection = function () {\n    return newConnection();\n  };\n\n  return ConnectionPool;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Firebase Storage location data.\r\n *\r\n * @internal\r\n */\n\n\nvar Location =\n/** @class */\nfunction () {\n  function Location(bucket, path) {\n    this.bucket = bucket;\n    this.path_ = path;\n  }\n\n  Object.defineProperty(Location.prototype, \"path\", {\n    get: function get() {\n      return this.path_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Location.prototype, \"isRoot\", {\n    get: function get() {\n      return this.path.length === 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Location.prototype.fullServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  };\n\n  Location.prototype.bucketOnlyServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  };\n\n  Location.makeFromBucketSpec = function (bucketString, host) {\n    var bucketLocation;\n\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString, host);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  };\n\n  Location.makeFromUrl = function (url, host) {\n    var location = null;\n    var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n\n    var gsPath = '(/(.*))?$';\n    var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    var gsIndices = {\n      bucket: 1,\n      path: 3\n    };\n\n    function httpModify(loc) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n\n    var version = 'v[A-Za-z0-9_]+';\n    var firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\n    var firebaseStoragePath = '(/([^?#]*).*)?$';\n    var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\n    var firebaseStorageIndices = {\n      bucket: 1,\n      path: 3\n    };\n    var cloudStorageHost = host === DEFAULT_HOST ? '(?:storage.googleapis.com|storage.cloud.google.com)' : host;\n    var cloudStoragePath = '([^?#]*)';\n    var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\n    var cloudStorageIndices = {\n      bucket: 1,\n      path: 2\n    };\n    var groups = [{\n      regex: gsRegex,\n      indices: gsIndices,\n      postModify: gsModify\n    }, {\n      regex: firebaseStorageRegExp,\n      indices: firebaseStorageIndices,\n      postModify: httpModify\n    }, {\n      regex: cloudStorageRegExp,\n      indices: cloudStorageIndices,\n      postModify: httpModify\n    }];\n\n    for (var i = 0; i < groups.length; i++) {\n      var group = groups[i];\n      var captures = group.regex.exec(url);\n\n      if (captures) {\n        var bucketValue = captures[group.indices.bucket];\n        var pathValue = captures[group.indices.path];\n\n        if (!pathValue) {\n          pathValue = '';\n        }\n\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n\n    return location;\n  };\n\n  return Location;\n}();\n/**\r\n * A request whose promise always fails.\r\n */\n\n\nvar FailRequest =\n/** @class */\nfunction () {\n  function FailRequest(error) {\n    this.promise_ = Promise.reject(error);\n  }\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.cancel = function (_appDelete) {};\n\n  return FailRequest;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\n\n\nfunction start(f, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ncallback, timeout) {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  var waitSeconds = 1; // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var timeoutId = null;\n  var hitTimeout = false;\n  var cancelState = 0;\n\n  function canceled() {\n    return cancelState === 2;\n  }\n\n  var triggeredCallback = false;\n\n  function triggerCallback() {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis) {\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  function handler(success) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (success) {\n      triggerCallback.call.apply(triggerCallback, (0, _tslib.__spreadArray)([null, success], args));\n      return;\n    }\n\n    var mustStop = canceled() || hitTimeout;\n\n    if (mustStop) {\n      triggerCallback.call.apply(triggerCallback, (0, _tslib.__spreadArray)([null, success], args));\n      return;\n    }\n\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n\n    var waitMillis;\n\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n\n    callWithDelay(waitMillis);\n  }\n\n  var stopped = false;\n\n  function stop(wasTimeout) {\n    if (stopped) {\n      return;\n    }\n\n    stopped = true;\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n\n  callWithDelay(0);\n  setTimeout(function () {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\n\n\nfunction stop(id) {\n  id(false);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isJustDef(p) {\n  return p !== void 0;\n} // eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction isFunction(p) {\n  return typeof p === 'function';\n}\n\nfunction isNonArrayObject(p) {\n  return _typeof(p) === 'object' && !Array.isArray(p);\n}\n\nfunction isString(p) {\n  return typeof p === 'string' || p instanceof String;\n}\n\nfunction isNativeBlob(p) {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nfunction isNativeBlobDefined() {\n  return typeof Blob !== 'undefined';\n}\n\nfunction validateNumber(argument, minValue, maxValue, value) {\n  if (value < minValue) {\n    throw invalidArgument(\"Invalid value for '\" + argument + \"'. Expected \" + minValue + \" or greater.\");\n  }\n\n  if (value > maxValue) {\n    throw invalidArgument(\"Invalid value for '\" + argument + \"'. Expected \" + maxValue + \" or less.\");\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction makeUrl(urlPart, host) {\n  var protocolMatch = host.match(/^(\\w+):\\/\\/.+/);\n  var protocol = protocolMatch === null || protocolMatch === void 0 ? void 0 : protocolMatch[1];\n  var origin = host;\n\n  if (protocol == null) {\n    origin = \"https://\" + host;\n  }\n\n  return origin + \"/v0\" + urlPart;\n}\n\nfunction makeQueryString(params) {\n  var encode = encodeURIComponent;\n  var queryPart = '?';\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      var nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  } // Chop off the extra '&' or '?' on the end\n\n\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar NetworkRequest =\n/** @class */\nfunction () {\n  function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\n    var _this = this;\n\n    this.pendingConnection_ = null;\n    this.backoffId_ = null;\n    this.canceled_ = false;\n    this.appDelete_ = false;\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n\n      _this.start_();\n    });\n  }\n  /**\r\n   * Actually starts the retry loop.\r\n   */\n\n\n  NetworkRequest.prototype.start_ = function () {\n    var self = this;\n\n    function doTheRequest(backoffCallback, canceled) {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n\n      var connection = self.pool_.createConnection();\n      self.pendingConnection_ = connection;\n\n      function progressListener(progressEvent) {\n        var loaded = progressEvent.loaded;\n        var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n\n      if (self.progressCallback_ !== null) {\n        connection.addUploadProgressListener(progressListener);\n      } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n      connection.send(self.url_, self.method_, self.body_, self.headers_).then(function () {\n        if (self.progressCallback_ !== null) {\n          connection.removeUploadProgressListener(progressListener);\n        }\n\n        self.pendingConnection_ = null;\n        var hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\n        var status = connection.getStatus();\n\n        if (!hitServer || self.isRetryStatusCode_(status)) {\n          var wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\n          backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n          return;\n        }\n\n        var successCode = self.successCodes_.indexOf(status) !== -1;\n        backoffCallback(true, new RequestEndStatus(successCode, connection));\n      });\n    }\n    /**\r\n     * @param requestWentThrough - True if the request eventually went\r\n     *     through, false if it hit the retry limit or was canceled.\r\n     */\n\n\n    function backoffDone(requestWentThrough, status) {\n      var resolve = self.resolve_;\n      var reject = self.reject_;\n      var connection = status.connection;\n\n      if (status.wasSuccessCode) {\n        try {\n          var result = self.callback_(connection, connection.getResponseText());\n\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (connection !== null) {\n          var err = unknown();\n          err.serverResponse = connection.getResponseText();\n\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(connection, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            var err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            var err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.cancel = function (appDelete) {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n\n    if (this.pendingConnection_ !== null) {\n      this.pendingConnection_.abort();\n    }\n  };\n\n  NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    var isFiveHundredCode = status >= 500 && status < 600;\n    var extraRetryCodes = [// Request Timeout: web server didn't receive full request in time.\n    408, // Too Many Requests: you're getting rate-limited, basically.\n    429];\n    var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  };\n\n  return NetworkRequest;\n}();\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\n\n\nvar RequestEndStatus =\n/** @class */\nfunction () {\n  function RequestEndStatus(wasSuccessCode, connection, canceled) {\n    this.wasSuccessCode = wasSuccessCode;\n    this.connection = connection;\n    this.canceled = !!canceled;\n  }\n\n  return RequestEndStatus;\n}();\n\nfunction addAuthHeader_(headers, authToken) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nfunction addVersionHeader_(headers, firebaseVersion) {\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + (firebaseVersion !== null && firebaseVersion !== void 0 ? firebaseVersion : 'AppManager');\n}\n\nfunction addGmpidHeader_(headers, appId) {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\nfunction addAppCheckHeader_(headers, appCheckToken) {\n  if (appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = appCheckToken;\n  }\n}\n\nfunction makeRequest(requestInfo, appId, authToken, appCheckToken, pool, firebaseVersion) {\n  var queryPart = makeQueryString(requestInfo.urlParams);\n  var url = requestInfo.url + queryPart;\n  var headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers, firebaseVersion);\n  addAppCheckHeader_(headers, appCheckToken);\n  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getBlobBuilder() {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\n\n\nfunction getBlob() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var BlobBuilder = getBlobBuilder();\n\n  if (BlobBuilder !== undefined) {\n    var bb = new BlobBuilder();\n\n    for (var i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new FirebaseStorageError(\"unsupported-environment\"\n      /* UNSUPPORTED_ENVIRONMENT */\n      , \"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\n\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n *\r\n * @internal\r\n */\n\n\nvar FbsBlob =\n/** @class */\nfunction () {\n  function FbsBlob(data, elideCopy) {\n    var size = 0;\n    var blobType = '';\n\n    if (isNativeBlob(data)) {\n      this.data_ = data;\n      size = data.size;\n      blobType = data.type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data);\n      }\n\n      size = data.length;\n    }\n\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  FbsBlob.prototype.size = function () {\n    return this.size_;\n  };\n\n  FbsBlob.prototype.type = function () {\n    return this.type_;\n  };\n\n  FbsBlob.prototype.slice = function (startByte, endByte) {\n    if (isNativeBlob(this.data_)) {\n      var realBlob = this.data_;\n      var sliced = sliceBlob(realBlob, startByte, endByte);\n\n      if (sliced === null) {\n        return null;\n      }\n\n      return new FbsBlob(sliced);\n    } else {\n      var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n      return new FbsBlob(slice, true);\n    }\n  };\n\n  FbsBlob.getBlob = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (isNativeBlobDefined()) {\n      var blobby = args.map(function (val) {\n        if (val instanceof FbsBlob) {\n          return val.data_;\n        } else {\n          return val;\n        }\n      });\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      var uint8Arrays = args.map(function (val) {\n        if (isString(val)) {\n          return dataFromString(StringFormat.RAW, val).data;\n        } else {\n          // Blobs don't exist, so this has to be a Uint8Array.\n          return val.data_;\n        }\n      });\n      var finalLength_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        finalLength_1 += array.byteLength;\n      });\n      var merged_1 = new Uint8Array(finalLength_1);\n      var index_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        for (var i = 0; i < array.length; i++) {\n          merged_1[index_1++] = array[i];\n        }\n      });\n      return new FbsBlob(merged_1, true);\n    }\n  };\n\n  FbsBlob.prototype.uploadData = function () {\n    return this.data_;\n  };\n\n  return FbsBlob;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\n\n\nfunction jsonObjectOrNull(s) {\n  var obj;\n\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n\n/**\r\n * @return Null if the path is already at the root.\r\n */\n\n\nfunction parent(path) {\n  if (path.length === 0) {\n    return null;\n  }\n\n  var index = path.lastIndexOf('/');\n\n  if (index === -1) {\n    return '';\n  }\n\n  var newPath = path.slice(0, index);\n  return newPath;\n}\n\nfunction child(path, childPath) {\n  var canonicalChildPath = childPath.split('/').filter(function (component) {\n    return component.length > 0;\n  }).join('/');\n\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\n\n\nfunction lastComponent(path) {\n  var index = path.lastIndexOf('/', path.length - 2);\n\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction noXform_(metadata, value) {\n  return value;\n}\n\nvar Mapping =\n/** @class */\nfunction () {\n  function Mapping(server, local, writable, xform) {\n    this.server = server;\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n\n  return Mapping;\n}();\n\nvar mappings_ = null;\n\nfunction xformPath(fullPath) {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nfunction getMappings() {\n  if (mappings_) {\n    return mappings_;\n  }\n\n  var mappings = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n\n  function mappingsXformPath(_metadata, fullPath) {\n    return xformPath(fullPath);\n  }\n\n  var nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n  /**\r\n   * Coerces the second param to a number, if it is defined.\r\n   */\n\n  function xformSize(_metadata, size) {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n\n  var sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nfunction addRef(metadata, service) {\n  function generateRef() {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var loc = new Location(bucket, path);\n    return service._makeStorageReference(loc);\n  }\n\n  Object.defineProperty(metadata, 'ref', {\n    get: generateRef\n  });\n}\n\nfunction fromResource(service, resource, mappings) {\n  var metadata = {};\n  metadata['type'] = 'file';\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n\n  addRef(metadata, service);\n  return metadata;\n}\n\nfunction fromResourceString(service, resourceString, mappings) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromResource(service, resource, mappings);\n}\n\nfunction downloadUrlFromResourceString(metadata, resourceString, host) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n\n  var tokens = obj['downloadTokens'];\n\n  if (tokens.length === 0) {\n    return null;\n  }\n\n  var encode = encodeURIComponent;\n  var tokensList = tokens.split(',');\n  var urls = tokensList.map(function (token) {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    var base = makeUrl(urlPart, host);\n    var queryString = makeQueryString({\n      alt: 'media',\n      token: token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nfunction toResourceString(metadata, mappings) {\n  var resource = {};\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n\n  return JSON.stringify(resource);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PREFIXES_KEY = 'prefixes';\nvar ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(service, bucket, resource) {\n  var listResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n\n  if (resource[PREFIXES_KEY]) {\n    for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\n      var path = _a[_i];\n      var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n\n      var reference = service._makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\n\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\n      var item = _c[_b];\n\n      var reference = service._makeStorageReference(new Location(bucket, item['name']));\n\n      listResult.items.push(reference);\n    }\n  }\n\n  return listResult;\n}\n\nfunction fromResponseString(service, bucket, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromBackendResponse(service, bucket, resource);\n}\n\nvar RequestInfo =\n/** @class */\nfunction () {\n  function RequestInfo(url, method,\n  /**\r\n   * Returns the value with which to resolve the request's promise. Only called\r\n   * if the request is successful. Throw from this function to reject the\r\n   * returned Request's promise with the thrown error.\r\n   * Note: The XhrIo passed to this function may be reused after this callback\r\n   * returns. Do not keep a reference to it in any way.\r\n   */\n  handler, timeout) {\n    this.url = url;\n    this.method = method;\n    this.handler = handler;\n    this.timeout = timeout;\n    this.urlParams = {};\n    this.headers = {};\n    this.body = null;\n    this.errorHandler = null;\n    /**\r\n     * Called with the current number of bytes uploaded and total size (-1 if not\r\n     * computable) of the request body (i.e. used to report upload progress).\r\n     */\n\n    this.progressCallback = null;\n    this.successCodes = [200];\n    this.additionalRetryCodes = [];\n  }\n\n  return RequestInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\n\n\nfunction handlerCheck(cndn) {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nfunction metadataHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata;\n  }\n\n  return handler;\n}\n\nfunction listHandler(service, bucket) {\n  function handler(xhr, text) {\n    var listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult;\n  }\n\n  return handler;\n}\n\nfunction downloadUrlHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(metadata, text, service.host);\n  }\n\n  return handler;\n}\n\nfunction sharedErrorHandler(location) {\n  function errorHandler(xhr, err) {\n    var newErr;\n\n    if (xhr.getStatus() === 401) {\n      if ( // This exact message string is the only consistent part of the\n      // server's error response that identifies it as an App Check error.\n      xhr.getResponseText().includes('Firebase App Check token is invalid')) {\n        newErr = unauthorizedApp();\n      } else {\n        newErr = unauthenticated();\n      }\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction objectErrorHandler(location) {\n  var shared = sharedErrorHandler(location);\n\n  function errorHandler(xhr, err) {\n    var newErr = shared(xhr, err);\n\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction getMetadata$2(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart, service.host);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction list$2(service, location, delimiter, pageToken, maxResults) {\n  var urlParams = {};\n\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n\n  var urlPart = location.bucketOnlyServerUrl();\n  var url = makeUrl(urlPart, service.host);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nfunction getDownloadUrl(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart, service.host);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction updateMetadata$2(service, location, metadata, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart, service.host);\n  var method = 'PATCH';\n  var body = toResourceString(metadata, mappings);\n  var headers = {\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction deleteObject$2(service, location) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart, service.host);\n  var method = 'DELETE';\n  var timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr, _text) {}\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction determineContentType_(metadata, blob) {\n  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\n\nfunction metadataForUpload_(location, blob, metadata) {\n  var metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n\n  return metadataClone;\n}\n/**\r\n * Prepare RequestInfo for uploads as Content-Type: multipart.\r\n */\n\n\nfunction multipartUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var headers = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary() {\n    var str = '';\n\n    for (var i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n\n    return str;\n  }\n\n  var boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  var metadata_ = metadataForUpload_(location, blob, metadata);\n  var metadataString = toResourceString(metadata_, mappings);\n  var preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata_['contentType'] + '\\r\\n\\r\\n';\n  var postBlobPart = '\\r\\n--' + boundary + '--';\n  var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  var urlParams = {\n    name: metadata_['fullPath']\n  };\n  var url = makeUrl(urlPart, service.host);\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\n\n\nvar ResumableUploadStatus =\n/** @class */\nfunction () {\n  function ResumableUploadStatus(current, total, finalized, metadata) {\n    this.current = current;\n    this.total = total;\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n\n  return ResumableUploadStatus;\n}();\n\nfunction checkResumeHeader_(xhr, allowed) {\n  var status = null;\n\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n\n  var allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status;\n}\n\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var metadataForUpload = metadataForUpload_(location, blob, metadata);\n  var urlParams = {\n    name: metadataForUpload['fullPath']\n  };\n  var url = makeUrl(urlPart, service.host);\n  var method = 'POST';\n  var headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': \"\" + blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var body = toResourceString(metadataForUpload, mappings);\n  var timeout = service.maxUploadRetryTime;\n\n  function handler(xhr) {\n    checkResumeHeader_(xhr);\n    var url;\n\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    handlerCheck(isString(url));\n    return url;\n  }\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\n\n\nfunction getResumableUploadStatus(service, location, url, blob) {\n  var headers = {\n    'X-Goog-Upload-Command': 'query'\n  };\n\n  function handler(xhr) {\n    var status = checkResumeHeader_(xhr, ['active', 'final']);\n    var sizeString = null;\n\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    var size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\n\n\nvar RESUMABLE_UPLOAD_CHUNK_SIZE = 256 * 1024;\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\n\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  var status_ = new ResumableUploadStatus(0, 0);\n\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n\n  var bytesLeft = status_.total - status_.current;\n  var bytesToUpload = bytesLeft;\n\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n\n  var startByte = status_.current;\n  var endByte = startByte + bytesToUpload;\n  var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  var headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': \"\" + status_.current\n  };\n  var body = blob.slice(startByte, endByte);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr, text) {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    var newCurrent = status_.current + bytesToUpload;\n    var size = blob.size();\n    var metadata;\n\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n\n    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n  }\n\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Observer =\n/** @class */\nfunction () {\n  function Observer(nextOrObserver, error, complete) {\n    var asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\n\n    if (asFunctions) {\n      this.next = nextOrObserver;\n      this.error = error;\n      this.complete = complete;\n    } else {\n      var observer = nextOrObserver;\n      this.next = observer.next;\n      this.error = observer.error;\n      this.complete = observer.complete;\n    }\n  }\n\n  return Observer;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction async(f) {\n  return function () {\n    var argsToForward = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      argsToForward[_i] = arguments[_i];\n    } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    Promise.resolve().then(function () {\n      return f.apply(void 0, argsToForward);\n    });\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n * @internal\r\n */\n\n\nvar UploadTask =\n/** @class */\nfunction () {\n  /**\r\n   * @param ref - The firebaseStorage.Reference object this task came\r\n   *     from, untyped to avoid cyclic dependencies.\r\n   * @param blob - The blob to upload.\r\n   */\n  function UploadTask(ref, blob, metadata) {\n    var _this = this;\n\n    if (metadata === void 0) {\n      metadata = null;\n    }\n    /**\r\n     * Number of bytes transferred so far.\r\n     */\n\n\n    this._transferred = 0;\n    this._needToFetchStatus = false;\n    this._needToFetchMetadata = false;\n    this._observers = [];\n    this._error = undefined;\n    this._uploadUrl = undefined;\n    this._request = undefined;\n    this._chunkMultiplier = 1;\n    this._resolve = undefined;\n    this._reject = undefined;\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = \"running\"\n    /* RUNNING */\n    ;\n\n    this._errorHandler = function (error) {\n      _this._request = undefined;\n      _this._chunkMultiplier = 1;\n\n      if (error._codeEquals(\"canceled\"\n      /* CANCELED */\n      )) {\n        _this._needToFetchStatus = true;\n\n        _this.completeTransitions_();\n      } else {\n        _this._error = error;\n\n        _this._transition(\"error\"\n        /* ERROR */\n        );\n      }\n    };\n\n    this._metadataErrorHandler = function (error) {\n      _this._request = undefined;\n\n      if (error._codeEquals(\"canceled\"\n      /* CANCELED */\n      )) {\n        _this.completeTransitions_();\n      } else {\n        _this._error = error;\n\n        _this._transition(\"error\"\n        /* ERROR */\n        );\n      }\n    };\n\n    this._promise = new Promise(function (resolve, reject) {\n      _this._resolve = resolve;\n      _this._reject = reject;\n\n      _this._start();\n    }); // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n\n    this._promise.then(null, function () {});\n  }\n\n  UploadTask.prototype._makeProgressCallback = function () {\n    var _this = this;\n\n    var sizeBefore = this._transferred;\n    return function (loaded) {\n      return _this._updateProgress(sizeBefore + loaded);\n    };\n  };\n\n  UploadTask.prototype._shouldDoResumable = function (blob) {\n    return blob.size() > 256 * 1024;\n  };\n\n  UploadTask.prototype._start = function () {\n    if (this._state !== \"running\"\n    /* RUNNING */\n    ) {\n        // This can happen if someone pauses us in a resume callback, for example.\n        return;\n      }\n\n    if (this._request !== undefined) {\n      return;\n    }\n\n    if (this._resumable) {\n      if (this._uploadUrl === undefined) {\n        this._createResumable();\n      } else {\n        if (this._needToFetchStatus) {\n          this._fetchStatus();\n        } else {\n          if (this._needToFetchMetadata) {\n            // Happens if we miss the metadata on upload completion.\n            this._fetchMetadata();\n          } else {\n            this._continueUpload();\n          }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }\n  };\n\n  UploadTask.prototype._resolveToken = function (callback) {\n    var _this = this; // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    Promise.all([this._ref.storage._getAuthToken(), this._ref.storage._getAppCheckToken()]).then(function (_a) {\n      var authToken = _a[0],\n          appCheckToken = _a[1];\n\n      switch (_this._state) {\n        case \"running\"\n        /* RUNNING */\n        :\n          callback(authToken, appCheckToken);\n          break;\n\n        case \"canceling\"\n        /* CANCELING */\n        :\n          _this._transition(\"canceled\"\n          /* CANCELED */\n          );\n\n          break;\n\n        case \"pausing\"\n        /* PAUSING */\n        :\n          _this._transition(\"paused\"\n          /* PAUSED */\n          );\n\n          break;\n      }\n    });\n  }; // TODO(andysoto): assert false\n\n\n  UploadTask.prototype._createResumable = function () {\n    var _this = this;\n\n    this._resolveToken(function (authToken, appCheckToken) {\n      var requestInfo = createResumableUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\n\n      var createRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\n\n      _this._request = createRequest;\n      createRequest.getPromise().then(function (url) {\n        _this._request = undefined;\n        _this._uploadUrl = url;\n        _this._needToFetchStatus = false;\n\n        _this.completeTransitions_();\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._fetchStatus = function () {\n    var _this = this; // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n\n    var url = this._uploadUrl;\n\n    this._resolveToken(function (authToken, appCheckToken) {\n      var requestInfo = getResumableUploadStatus(_this._ref.storage, _this._ref._location, url, _this._blob);\n\n      var statusRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\n\n      _this._request = statusRequest;\n      statusRequest.getPromise().then(function (status) {\n        status = status;\n        _this._request = undefined;\n\n        _this._updateProgress(status.current);\n\n        _this._needToFetchStatus = false;\n\n        if (status.finalized) {\n          _this._needToFetchMetadata = true;\n        }\n\n        _this.completeTransitions_();\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._continueUpload = function () {\n    var _this = this;\n\n    var chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n    var status = new ResumableUploadStatus(this._transferred, this._blob.size()); // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n    var url = this._uploadUrl;\n\n    this._resolveToken(function (authToken, appCheckToken) {\n      var requestInfo;\n\n      try {\n        requestInfo = continueResumableUpload(_this._ref._location, _this._ref.storage, url, _this._blob, chunkSize, _this._mappings, status, _this._makeProgressCallback());\n      } catch (e) {\n        _this._error = e;\n\n        _this._transition(\"error\"\n        /* ERROR */\n        );\n\n        return;\n      }\n\n      var uploadRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\n\n      _this._request = uploadRequest;\n      uploadRequest.getPromise().then(function (newStatus) {\n        _this._increaseMultiplier();\n\n        _this._request = undefined;\n\n        _this._updateProgress(newStatus.current);\n\n        if (newStatus.finalized) {\n          _this._metadata = newStatus.metadata;\n\n          _this._transition(\"success\"\n          /* SUCCESS */\n          );\n        } else {\n          _this.completeTransitions_();\n        }\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._increaseMultiplier = function () {\n    var currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier; // Max chunk size is 32M.\n\n    if (currentSize < 32 * 1024 * 1024) {\n      this._chunkMultiplier *= 2;\n    }\n  };\n\n  UploadTask.prototype._fetchMetadata = function () {\n    var _this = this;\n\n    this._resolveToken(function (authToken, appCheckToken) {\n      var requestInfo = getMetadata$2(_this._ref.storage, _this._ref._location, _this._mappings);\n\n      var metadataRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\n\n      _this._request = metadataRequest;\n      metadataRequest.getPromise().then(function (metadata) {\n        _this._request = undefined;\n        _this._metadata = metadata;\n\n        _this._transition(\"success\"\n        /* SUCCESS */\n        );\n      }, _this._metadataErrorHandler);\n    });\n  };\n\n  UploadTask.prototype._oneShotUpload = function () {\n    var _this = this;\n\n    this._resolveToken(function (authToken, appCheckToken) {\n      var requestInfo = multipartUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\n\n      var multipartRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\n\n      _this._request = multipartRequest;\n      multipartRequest.getPromise().then(function (metadata) {\n        _this._request = undefined;\n        _this._metadata = metadata;\n\n        _this._updateProgress(_this._blob.size());\n\n        _this._transition(\"success\"\n        /* SUCCESS */\n        );\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._updateProgress = function (transferred) {\n    var old = this._transferred;\n    this._transferred = transferred; // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n\n    if (this._transferred !== old) {\n      this._notifyObservers();\n    }\n  };\n\n  UploadTask.prototype._transition = function (state) {\n    if (this._state === state) {\n      return;\n    }\n\n    switch (state) {\n      case \"canceling\"\n      /* CANCELING */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n\n        break;\n\n      case \"pausing\"\n      /* PAUSING */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this._state = state;\n\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n\n        break;\n\n      case \"running\"\n      /* RUNNING */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        var wasPaused = this._state === \"paused\"\n        /* PAUSED */\n        ;\n        this._state = state;\n\n        if (wasPaused) {\n          this._notifyObservers();\n\n          this._start();\n        }\n\n        break;\n\n      case \"paused\"\n      /* PAUSED */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n\n      case \"canceled\"\n      /* CANCELED */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._error = canceled();\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n\n      case \"error\"\n      /* ERROR */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n\n      case \"success\"\n      /* SUCCESS */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n    }\n  };\n\n  UploadTask.prototype.completeTransitions_ = function () {\n    switch (this._state) {\n      case \"pausing\"\n      /* PAUSING */\n      :\n        this._transition(\"paused\"\n        /* PAUSED */\n        );\n\n        break;\n\n      case \"canceling\"\n      /* CANCELING */\n      :\n        this._transition(\"canceled\"\n        /* CANCELED */\n        );\n\n        break;\n\n      case \"running\"\n      /* RUNNING */\n      :\n        this._start();\n\n        break;\n    }\n  };\n\n  Object.defineProperty(UploadTask.prototype, \"snapshot\", {\n    /**\r\n     * A snapshot of the current task state.\r\n     */\n    get: function get() {\n      var externalState = taskStateFromInternalTaskState(this._state);\n      return {\n        bytesTransferred: this._transferred,\n        totalBytes: this._blob.size(),\n        state: externalState,\n        metadata: this._metadata,\n        task: this,\n        ref: this._ref\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Adds a callback for an event.\r\n   * @param type - The type of event to listen for.\r\n   * @param nextOrObserver -\r\n   *     The `next` function, which gets called for each item in\r\n   *     the event stream, or an observer object with some or all of these three\r\n   *     properties (`next`, `error`, `complete`).\r\n   * @param error - A function that gets called with a `FirebaseStorageError`\r\n   *     if the event stream ends due to an error.\r\n   * @param completed - A function that gets called if the\r\n   *     event stream ends normally.\r\n   * @returns\r\n   *     If only the event argument is passed, returns a function you can use to\r\n   *     add callbacks (see the examples above). If more than just the event\r\n   *     argument is passed, returns a function you can call to unregister the\r\n   *     callbacks.\r\n   */\n\n  UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\n    var _this = this;\n\n    var observer = new Observer(nextOrObserver, error, completed);\n\n    this._addObserver(observer);\n\n    return function () {\n      _this._removeObserver(observer);\n    };\n  };\n  /**\r\n   * This object behaves like a Promise, and resolves with its snapshot data\r\n   * when the upload completes.\r\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n   * @param onRejected - The rejection callback.\r\n   */\n\n\n  UploadTask.prototype.then = function (onFulfilled, onRejected) {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this._promise.then(onFulfilled, onRejected);\n  };\n  /**\r\n   * Equivalent to calling `then(null, onRejected)`.\r\n   */\n\n\n  UploadTask.prototype[\"catch\"] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n  /**\r\n   * Adds the given observer.\r\n   */\n\n\n  UploadTask.prototype._addObserver = function (observer) {\n    this._observers.push(observer);\n\n    this._notifyObserver(observer);\n  };\n  /**\r\n   * Removes the given observer.\r\n   */\n\n\n  UploadTask.prototype._removeObserver = function (observer) {\n    var i = this._observers.indexOf(observer);\n\n    if (i !== -1) {\n      this._observers.splice(i, 1);\n    }\n  };\n\n  UploadTask.prototype._notifyObservers = function () {\n    var _this = this;\n\n    this._finishPromise();\n\n    var observers = this._observers.slice();\n\n    observers.forEach(function (observer) {\n      _this._notifyObserver(observer);\n    });\n  };\n\n  UploadTask.prototype._finishPromise = function () {\n    if (this._resolve !== undefined) {\n      var triggered = true;\n\n      switch (taskStateFromInternalTaskState(this._state)) {\n        case TaskState.SUCCESS:\n          async(this._resolve.bind(null, this.snapshot))();\n          break;\n\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          var toCall = this._reject;\n          async(toCall.bind(null, this._error))();\n          break;\n\n        default:\n          triggered = false;\n          break;\n      }\n\n      if (triggered) {\n        this._resolve = undefined;\n        this._reject = undefined;\n      }\n    }\n  };\n\n  UploadTask.prototype._notifyObserver = function (observer) {\n    var externalState = taskStateFromInternalTaskState(this._state);\n\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          async(observer.next.bind(observer, this.snapshot))();\n        }\n\n        break;\n\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          async(observer.complete.bind(observer))();\n        }\n\n        break;\n\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          async(observer.error.bind(observer, this._error))();\n        }\n\n        break;\n\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          async(observer.error.bind(observer, this._error))();\n        }\n\n    }\n  };\n  /**\r\n   * Resumes a paused task. Has no effect on a currently running or failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.resume = function () {\n    var valid = this._state === \"paused\"\n    /* PAUSED */\n    || this._state === \"pausing\"\n    /* PAUSING */\n    ;\n\n    if (valid) {\n      this._transition(\"running\"\n      /* RUNNING */\n      );\n    }\n\n    return valid;\n  };\n  /**\r\n   * Pauses a currently running task. Has no effect on a paused or failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.pause = function () {\n    var valid = this._state === \"running\"\n    /* RUNNING */\n    ;\n\n    if (valid) {\n      this._transition(\"pausing\"\n      /* PAUSING */\n      );\n    }\n\n    return valid;\n  };\n  /**\r\n   * Cancels a currently running or paused task. Has no effect on a complete or\r\n   * failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.cancel = function () {\n    var valid = this._state === \"running\"\n    /* RUNNING */\n    || this._state === \"pausing\"\n    /* PAUSING */\n    ;\n\n    if (valid) {\n      this._transition(\"canceling\"\n      /* CANCELING */\n      );\n    }\n\n    return valid;\n  };\n\n  return UploadTask;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @internal\r\n * @param _location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction () {\n  function Reference(_service, location) {\n    this._service = _service;\n\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location, _service.host);\n    }\n  }\n  /**\r\n   * Returns the URL for the bucket and path this object references,\r\n   *     in the form gs://<bucket>/<object-path>\r\n   * @override\r\n   */\n\n\n  Reference.prototype.toString = function () {\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\n  };\n\n  Reference.prototype._newRef = function (service, location) {\n    return new Reference(service, location);\n  };\n\n  Object.defineProperty(Reference.prototype, \"root\", {\n    /**\r\n     * A reference to the root of this object's bucket.\r\n     */\n    get: function get() {\n      var location = new Location(this._location.bucket, '');\n      return this._newRef(this._service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"bucket\", {\n    /**\r\n     * The name of the bucket containing this reference's object.\r\n     */\n    get: function get() {\n      return this._location.bucket;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"fullPath\", {\n    /**\r\n     * The full path of this object.\r\n     */\n    get: function get() {\n      return this._location.path;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"name\", {\n    /**\r\n     * The short name of this object, which is the last component of the full path.\r\n     * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\r\n     */\n    get: function get() {\n      return lastComponent(this._location.path);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"storage\", {\n    /**\r\n     * The `StorageService` instance this `StorageReference` is associated with.\r\n     */\n    get: function get() {\n      return this._service;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    /**\r\n     * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\r\n     * this reference is the root.\r\n     */\n    get: function get() {\n      var newPath = parent(this._location.path);\n\n      if (newPath === null) {\n        return null;\n      }\n\n      var location = new Location(this._location.bucket, newPath);\n      return new Reference(this._service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Utility function to throw an error in methods that do not accept a root reference.\r\n   */\n\n  Reference.prototype._throwIfRoot = function (name) {\n    if (this._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n\n  return Reference;\n}();\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns An UploadTask\r\n */\n\n\nfunction uploadBytesResumable$1(ref, data, metadata) {\n  ref._throwIfRoot('uploadBytesResumable');\n\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\n\n\nfunction listAll$1(ref) {\n  var accumulator = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(function () {\n    return accumulator;\n  });\n}\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\n\n\nfunction listAllHelper(ref, accumulator, pageToken) {\n  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n    var opt, nextPage;\n\n    var _a, _b;\n\n    return (0, _tslib.__generator)(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          opt = {\n            // maxResults is 1000 by default.\n            pageToken: pageToken\n          };\n          return [4\n          /*yield*/\n          , list$1(ref, opt)];\n\n        case 1:\n          nextPage = _c.sent();\n\n          (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\n\n          (_b = accumulator.items).push.apply(_b, nextPage.items);\n\n          if (!(nextPage.nextPageToken != null)) return [3\n          /*break*/\n          , 3];\n          return [4\n          /*yield*/\n          , listAllHelper(ref, accumulator, nextPage.nextPageToken)];\n\n        case 2:\n          _c.sent();\n\n          _c.label = 3;\n\n        case 3:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\n\n\nfunction list$1(ref, options) {\n  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n    var op, requestInfo;\n    return (0, _tslib.__generator)(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (options != null) {\n            if (typeof options.maxResults === 'number') {\n              validateNumber('options.maxResults',\n              /* minValue= */\n              1,\n              /* maxValue= */\n              1000, options.maxResults);\n            }\n          }\n\n          op = options || {};\n          requestInfo = list$2(ref.storage, ref._location,\n          /*delimiter= */\n          '/', op.pageToken, op.maxResults);\n          return [4\n          /*yield*/\n          , ref.storage.makeRequestWithTokens(requestInfo)];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent().getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * A promise that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\n\n\nfunction getMetadata$1(ref) {\n  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n    var requestInfo;\n    return (0, _tslib.__generator)(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('getMetadata');\n\n          requestInfo = getMetadata$2(ref.storage, ref._location, getMappings());\n          return [4\n          /*yield*/\n          , ref.storage.makeRequestWithTokens(requestInfo)];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent().getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A promise that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\n\n\nfunction updateMetadata$1(ref, metadata) {\n  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n    var requestInfo;\n    return (0, _tslib.__generator)(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('updateMetadata');\n\n          requestInfo = updateMetadata$2(ref.storage, ref._location, metadata, getMappings());\n          return [4\n          /*yield*/\n          , ref.storage.makeRequestWithTokens(requestInfo)];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent().getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A promise that resolves with the download\r\n *     URL for this object.\r\n */\n\n\nfunction getDownloadURL$1(ref) {\n  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n    var requestInfo;\n    return (0, _tslib.__generator)(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('getDownloadURL');\n\n          requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\n          return [4\n          /*yield*/\n          , ref.storage.makeRequestWithTokens(requestInfo)];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent().getPromise().then(function (url) {\n            if (url === null) {\n              throw noDownloadURL();\n            }\n\n            return url;\n          })];\n      }\n    });\n  });\n}\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A promise that resolves if the deletion succeeds.\r\n */\n\n\nfunction deleteObject$1(ref) {\n  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n    var requestInfo;\n    return (0, _tslib.__generator)(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('deleteObject');\n\n          requestInfo = deleteObject$2(ref.storage, ref._location);\n          return [4\n          /*yield*/\n          , ref.storage.makeRequestWithTokens(requestInfo)];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent().getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n *\r\n * @param ref - StorageReference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n *\r\n */\n\n\nfunction _getChild$1(ref, childPath) {\n  var newPath = child(ref._location.path, childPath);\n  var location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isUrl(path) {\n  return /^[A-Za-z]+:\\/\\//.test(path);\n}\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\n\n\nfunction refFromURL(service, url) {\n  return new Reference(service, url);\n}\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\n\n\nfunction refFromPath(ref, path) {\n  if (ref instanceof FirebaseStorageImpl) {\n    var service = ref;\n\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n\n    var reference = new Reference(service, service._bucket);\n\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      if (path.includes('..')) {\n        throw invalidArgument('`path` param cannot contain \"..\"');\n      }\n\n      return _getChild$1(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\n\nfunction ref$1(serviceOrRef, pathOrUrl) {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof FirebaseStorageImpl) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extractBucket(host, config) {\n  var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\n\n  if (bucketString == null) {\n    return null;\n  }\n\n  return Location.makeFromBucketSpec(bucketString, host);\n}\n\nfunction connectStorageEmulator$1(storage, host, port) {\n  storage.host = \"http://\" + host + \":\" + port;\n}\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @public\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n */\n\n\nvar FirebaseStorageImpl =\n/** @class */\nfunction () {\n  function FirebaseStorageImpl(\n  /**\r\n   * FirebaseApp associated with this StorageService instance.\r\n   */\n  app, _authProvider,\n  /**\r\n   * @internal\r\n   */\n  _appCheckProvider,\n  /**\r\n   * @internal\r\n   */\n  _pool, _url, _firebaseVersion) {\n    this.app = app;\n    this._authProvider = _authProvider;\n    this._appCheckProvider = _appCheckProvider;\n    this._pool = _pool;\n    this._url = _url;\n    this._firebaseVersion = _firebaseVersion;\n    this._bucket = null;\n    /**\r\n     * This string can be in the formats:\r\n     * - host\r\n     * - host:port\r\n     * - protocol://host:port\r\n     */\n\n    this._host = DEFAULT_HOST;\n    this._appId = null;\n    this._deleted = false;\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url, this._host);\n    } else {\n      this._bucket = extractBucket(this._host, this.app.options);\n    }\n  }\n\n  Object.defineProperty(FirebaseStorageImpl.prototype, \"host\", {\n    get: function get() {\n      return this._host;\n    },\n\n    /**\r\n     * Set host string for this service.\r\n     * @param host - host string in the form of host, host:port,\r\n     * or protocol://host:port\r\n     */\n    set: function set(host) {\n      this._host = host;\n\n      if (this._url != null) {\n        this._bucket = Location.makeFromBucketSpec(this._url, host);\n      } else {\n        this._bucket = extractBucket(host, this.app.options);\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageImpl.prototype, \"maxUploadRetryTime\", {\n    /**\r\n     * The maximum time to retry uploads in milliseconds.\r\n     */\n    get: function get() {\n      return this._maxUploadRetryTime;\n    },\n    set: function set(time) {\n      validateNumber('time',\n      /* minValue=*/\n      0,\n      /* maxValue= */\n      Number.POSITIVE_INFINITY, time);\n      this._maxUploadRetryTime = time;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageImpl.prototype, \"maxOperationRetryTime\", {\n    /**\r\n     * The maximum time to retry operations other than uploads or downloads in\r\n     * milliseconds.\r\n     */\n    get: function get() {\n      return this._maxOperationRetryTime;\n    },\n    set: function set(time) {\n      validateNumber('time',\n      /* minValue=*/\n      0,\n      /* maxValue= */\n      Number.POSITIVE_INFINITY, time);\n      this._maxOperationRetryTime = time;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  FirebaseStorageImpl.prototype._getAuthToken = function () {\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n      var auth, tokenData;\n      return (0, _tslib.__generator)(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            auth = this._authProvider.getImmediate({\n              optional: true\n            });\n            if (!auth) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , auth.getToken()];\n\n          case 1:\n            tokenData = _a.sent();\n\n            if (tokenData !== null) {\n              return [2\n              /*return*/\n              , tokenData.accessToken];\n            }\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , null];\n        }\n      });\n    });\n  };\n\n  FirebaseStorageImpl.prototype._getAppCheckToken = function () {\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n      var appCheck, result;\n      return (0, _tslib.__generator)(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            appCheck = this._appCheckProvider.getImmediate({\n              optional: true\n            });\n            if (!appCheck) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , appCheck.getToken()];\n\n          case 1:\n            result = _a.sent(); // TODO: What do we want to do if there is an error getting the token?\n            // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\n            // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\n            // the token (actual or dummy) to send requests.\n\n            return [2\n            /*return*/\n            , result.token];\n\n          case 2:\n            return [2\n            /*return*/\n            , null];\n        }\n      });\n    });\n  };\n  /**\r\n   * Stop running requests and prevent more from being created.\r\n   */\n\n\n  FirebaseStorageImpl.prototype._delete = function () {\n    if (!this._deleted) {\n      this._deleted = true;\n\n      this._requests.forEach(function (request) {\n        return request.cancel();\n      });\n\n      this._requests.clear();\n    }\n\n    return Promise.resolve();\n  };\n  /**\r\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n   * at the given Location.\r\n   */\n\n\n  FirebaseStorageImpl.prototype._makeStorageReference = function (loc) {\n    return new Reference(this, loc);\n  };\n  /**\r\n   * @param requestInfo - HTTP RequestInfo object\r\n   * @param authToken - Firebase auth token\r\n   */\n\n\n  FirebaseStorageImpl.prototype._makeRequest = function (requestInfo, authToken, appCheckToken) {\n    var _this = this;\n\n    if (!this._deleted) {\n      var request_1 = makeRequest(requestInfo, this._appId, authToken, appCheckToken, this._pool, this._firebaseVersion);\n\n      this._requests.add(request_1); // Request removes itself from set when complete.\n\n\n      request_1.getPromise().then(function () {\n        return _this._requests[\"delete\"](request_1);\n      }, function () {\n        return _this._requests[\"delete\"](request_1);\n      });\n      return request_1;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  };\n\n  FirebaseStorageImpl.prototype.makeRequestWithTokens = function (requestInfo) {\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n      var _a, authToken, appCheckToken;\n\n      return (0, _tslib.__generator)(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all([this._getAuthToken(), this._getAppCheckToken()])];\n\n          case 1:\n            _a = _b.sent(), authToken = _a[0], appCheckToken = _a[1];\n            return [2\n            /*return*/\n            , this._makeRequest(requestInfo, authToken, appCheckToken)];\n        }\n      });\n    });\n  };\n\n  return FirebaseStorageImpl;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns An UploadTask\r\n */\n\n\nfunction uploadBytesResumable(ref, data, metadata) {\n  ref = (0, _util.getModularInstance)(ref);\n  return uploadBytesResumable$1(ref, data, metadata);\n}\n/**\r\n * A promise that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\n\n\nfunction getMetadata(ref) {\n  ref = (0, _util.getModularInstance)(ref);\n  return getMetadata$1(ref);\n}\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A promise that resolves with the new metadata for this object.\r\n */\n\n\nfunction updateMetadata(ref, metadata) {\n  ref = (0, _util.getModularInstance)(ref);\n  return updateMetadata$1(ref, metadata);\n}\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\n\n\nfunction list(ref, options) {\n  ref = (0, _util.getModularInstance)(ref);\n  return list$1(ref, options);\n}\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\n\n\nfunction listAll(ref) {\n  ref = (0, _util.getModularInstance)(ref);\n  return listAll$1(ref);\n}\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A promise that resolves with the download\r\n *     URL for this object.\r\n */\n\n\nfunction getDownloadURL(ref) {\n  ref = (0, _util.getModularInstance)(ref);\n  return getDownloadURL$1(ref);\n}\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A promise that resolves if the deletion succeeds.\r\n */\n\n\nfunction deleteObject(ref) {\n  ref = (0, _util.getModularInstance)(ref);\n  return deleteObject$1(ref);\n}\n\nfunction ref(serviceOrRef, pathOrUrl) {\n  serviceOrRef = (0, _util.getModularInstance)(serviceOrRef);\n  return ref$1(serviceOrRef, pathOrUrl);\n}\n/**\r\n * @internal\r\n */\n\n\nfunction _getChild(ref, childPath) {\n  return _getChild$1(ref, childPath);\n}\n/**\r\n * Modify this `StorageService` instance to communicate with the Cloud Storage emulator.\r\n *\r\n * @param storage - The `StorageService` instance\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 5001)\r\n * @public\r\n */\n\n\nfunction connectStorageEmulator(storage, host, port) {\n  connectStorageEmulator$1(storage, host, port);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar UploadTaskSnapshotCompat =\n/** @class */\nfunction () {\n  function UploadTaskSnapshotCompat(_delegate, task, ref) {\n    this._delegate = _delegate;\n    this.task = task;\n    this.ref = ref;\n  }\n\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"bytesTransferred\", {\n    get: function get() {\n      return this._delegate.bytesTransferred;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"metadata\", {\n    get: function get() {\n      return this._delegate.metadata;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"state\", {\n    get: function get() {\n      return this._delegate.state;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"totalBytes\", {\n    get: function get() {\n      return this._delegate.totalBytes;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return UploadTaskSnapshotCompat;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar UploadTaskCompat =\n/** @class */\nfunction () {\n  function UploadTaskCompat(_delegate, _ref) {\n    this._delegate = _delegate;\n    this._ref = _ref;\n    this.cancel = this._delegate.cancel.bind(this._delegate);\n    this[\"catch\"] = this._delegate[\"catch\"].bind(this._delegate);\n    this.pause = this._delegate.pause.bind(this._delegate);\n    this.resume = this._delegate.resume.bind(this._delegate);\n  }\n\n  Object.defineProperty(UploadTaskCompat.prototype, \"snapshot\", {\n    get: function get() {\n      return new UploadTaskSnapshotCompat(this._delegate.snapshot, this, this._ref);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  UploadTaskCompat.prototype.then = function (onFulfilled, onRejected) {\n    var _this = this;\n\n    return this._delegate.then(function (snapshot) {\n      if (onFulfilled) {\n        return onFulfilled(new UploadTaskSnapshotCompat(snapshot, _this, _this._ref));\n      }\n    }, onRejected);\n  };\n\n  UploadTaskCompat.prototype.on = function (type, nextOrObserver, error, completed) {\n    var _this = this;\n\n    var wrappedNextOrObserver = undefined;\n\n    if (!!nextOrObserver) {\n      if (typeof nextOrObserver === 'function') {\n        wrappedNextOrObserver = function wrappedNextOrObserver(taskSnapshot) {\n          return nextOrObserver(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\n        };\n      } else {\n        wrappedNextOrObserver = {\n          next: !!nextOrObserver.next ? function (taskSnapshot) {\n            return nextOrObserver.next(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\n          } : undefined,\n          complete: nextOrObserver.complete || undefined,\n          error: nextOrObserver.error || undefined\n        };\n      }\n    }\n\n    return this._delegate.on(type, wrappedNextOrObserver, error || undefined, completed || undefined);\n  };\n\n  return UploadTaskCompat;\n}();\n\nvar ListResultCompat =\n/** @class */\nfunction () {\n  function ListResultCompat(_delegate, _service) {\n    this._delegate = _delegate;\n    this._service = _service;\n  }\n\n  Object.defineProperty(ListResultCompat.prototype, \"prefixes\", {\n    get: function get() {\n      var _this = this;\n\n      return this._delegate.prefixes.map(function (ref) {\n        return new ReferenceCompat(ref, _this._service);\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ListResultCompat.prototype, \"items\", {\n    get: function get() {\n      var _this = this;\n\n      return this._delegate.items.map(function (ref) {\n        return new ReferenceCompat(ref, _this._service);\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ListResultCompat.prototype, \"nextPageToken\", {\n    get: function get() {\n      return this._delegate.nextPageToken || null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ListResultCompat;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *  http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ReferenceCompat =\n/** @class */\nfunction () {\n  function ReferenceCompat(_delegate, storage) {\n    this._delegate = _delegate;\n    this.storage = storage;\n  }\n\n  Object.defineProperty(ReferenceCompat.prototype, \"name\", {\n    get: function get() {\n      return this._delegate.name;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceCompat.prototype, \"bucket\", {\n    get: function get() {\n      return this._delegate.bucket;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceCompat.prototype, \"fullPath\", {\n    get: function get() {\n      return this._delegate.fullPath;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ReferenceCompat.prototype.toString = function () {\n    return this._delegate.toString();\n  };\n  /**\r\n   * @returns A reference to the object obtained by\r\n   * appending childPath, removing any duplicate, beginning, or trailing\r\n   * slashes.\r\n   */\n\n\n  ReferenceCompat.prototype.child = function (childPath) {\n    var reference = _getChild(this._delegate, childPath);\n\n    return new ReferenceCompat(reference, this.storage);\n  };\n\n  Object.defineProperty(ReferenceCompat.prototype, \"root\", {\n    get: function get() {\n      return new ReferenceCompat(this._delegate.root, this.storage);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceCompat.prototype, \"parent\", {\n    /**\r\n     * @returns A reference to the parent of the\r\n     * current object, or null if the current object is the root.\r\n     */\n    get: function get() {\n      var reference = this._delegate.parent;\n\n      if (reference == null) {\n        return null;\n      }\n\n      return new ReferenceCompat(reference, this.storage);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Uploads a blob to this object's location.\r\n   * @param data - The blob to upload.\r\n   * @returns An UploadTask that lets you control and\r\n   * observe the upload.\r\n   */\n\n  ReferenceCompat.prototype.put = function (data, metadata) {\n    this._throwIfRoot('put');\n\n    return new UploadTaskCompat(uploadBytesResumable(this._delegate, data, metadata), this);\n  };\n  /**\r\n   * Uploads a string to this object's location.\r\n   * @param value - The string to upload.\r\n   * @param format - The format of the string to upload.\r\n   * @returns An UploadTask that lets you control and\r\n   * observe the upload.\r\n   */\n\n\n  ReferenceCompat.prototype.putString = function (value, format, metadata) {\n    if (format === void 0) {\n      format = StringFormat.RAW;\n    }\n\n    this._throwIfRoot('putString');\n\n    var data = dataFromString(format, value);\n    var metadataClone = (0, _tslib.__assign)({}, metadata);\n\n    if (metadataClone['contentType'] == null && data.contentType != null) {\n      metadataClone['contentType'] = data.contentType;\n    }\n\n    return new UploadTaskCompat(new UploadTask(this._delegate, new FbsBlob(data.data, true), metadataClone), this);\n  };\n  /**\r\n   * List all items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * This is a helper method for calling list() repeatedly until there are\r\n   * no more results. The default pagination size is 1000.\r\n   *\r\n   * Note: The results may not be consistent if objects are changed while this\r\n   * operation is running.\r\n   *\r\n   * Warning: listAll may potentially consume too many resources if there are\r\n   * too many results.\r\n   *\r\n   * @returns A Promise that resolves with all the items and prefixes under\r\n   *  the current storage reference. `prefixes` contains references to\r\n   *  sub-directories and `items` contains references to objects in this\r\n   *  folder. `nextPageToken` is never returned.\r\n   */\n\n\n  ReferenceCompat.prototype.listAll = function () {\n    var _this = this;\n\n    return listAll(this._delegate).then(function (r) {\n      return new ListResultCompat(r, _this.storage);\n    });\n  };\n  /**\r\n   * List items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * List API is only available for Firebase Rules Version 2.\r\n   *\r\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n   * delimited folder structure. Refer to GCS's List API if you want to learn more.\r\n   *\r\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n   * support objects whose paths end with \"/\" or contain two consecutive\r\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n   * list() may fail if there are too many unsupported objects in the bucket.\r\n   *\r\n   * @param options - See ListOptions for details.\r\n   * @returns A Promise that resolves with the items and prefixes.\r\n   * `prefixes` contains references to sub-folders and `items`\r\n   * contains references to objects in this folder. `nextPageToken`\r\n   * can be used to get the rest of the results.\r\n   */\n\n\n  ReferenceCompat.prototype.list = function (options) {\n    var _this = this;\n\n    return list(this._delegate, options || undefined).then(function (r) {\n      return new ListResultCompat(r, _this.storage);\n    });\n  };\n  /**\r\n   * A promise that resolves with the metadata for this object. If this\r\n   * object doesn't exist or metadata cannot be retreived, the promise is\r\n   * rejected.\r\n   */\n\n\n  ReferenceCompat.prototype.getMetadata = function () {\n    return getMetadata(this._delegate);\n  };\n  /**\r\n   * Updates the metadata for this object.\r\n   * @param metadata - The new metadata for the object.\r\n   * Only values that have been explicitly set will be changed. Explicitly\r\n   * setting a value to null will remove the metadata.\r\n   * @returns A promise that resolves\r\n   * with the new metadata for this object.\r\n   * @see firebaseStorage.Reference.prototype.getMetadata\r\n   */\n\n\n  ReferenceCompat.prototype.updateMetadata = function (metadata) {\n    return updateMetadata(this._delegate, metadata);\n  };\n  /**\r\n   * @returns A promise that resolves with the download\r\n   * URL for this object.\r\n   */\n\n\n  ReferenceCompat.prototype.getDownloadURL = function () {\n    return getDownloadURL(this._delegate);\n  };\n  /**\r\n   * Deletes the object at this location.\r\n   * @returns A promise that resolves if the deletion succeeds.\r\n   */\n\n\n  ReferenceCompat.prototype[\"delete\"] = function () {\n    this._throwIfRoot('delete');\n\n    return deleteObject(this._delegate);\n  };\n\n  ReferenceCompat.prototype._throwIfRoot = function (name) {\n    if (this._delegate._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n\n  return ReferenceCompat;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n */\n\n\nvar StorageServiceCompat =\n/** @class */\nfunction () {\n  function StorageServiceCompat(app, _delegate) {\n    this.app = app;\n    this._delegate = _delegate;\n  }\n\n  Object.defineProperty(StorageServiceCompat.prototype, \"maxOperationRetryTime\", {\n    get: function get() {\n      return this._delegate.maxOperationRetryTime;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StorageServiceCompat.prototype, \"maxUploadRetryTime\", {\n    get: function get() {\n      return this._delegate.maxUploadRetryTime;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns a firebaseStorage.Reference for the given path in the default\r\n   * bucket.\r\n   */\n\n  StorageServiceCompat.prototype.ref = function (path) {\n    if (isUrl(path)) {\n      throw invalidArgument('ref() expected a child path but got a URL, use refFromURL instead.');\n    }\n\n    return new ReferenceCompat(ref(this._delegate, path), this);\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n   * which must be a gs:// or http[s]:// URL.\r\n   */\n\n\n  StorageServiceCompat.prototype.refFromURL = function (url) {\n    if (!isUrl(url)) {\n      throw invalidArgument('refFromURL() expected a full URL but got a child path, use ref() instead.');\n    }\n\n    try {\n      Location.makeFromUrl(url, this._delegate.host);\n    } catch (e) {\n      throw invalidArgument('refFromUrl() expected a valid full URL but got an invalid one.');\n    }\n\n    return new ReferenceCompat(ref(this._delegate, url), this);\n  };\n\n  StorageServiceCompat.prototype.setMaxUploadRetryTime = function (time) {\n    this._delegate.maxUploadRetryTime = time;\n  };\n\n  StorageServiceCompat.prototype.setMaxOperationRetryTime = function (time) {\n    this._delegate.maxOperationRetryTime = time;\n  };\n\n  StorageServiceCompat.prototype.useEmulator = function (host, port) {\n    connectStorageEmulator(this._delegate, host, port);\n  };\n\n  return StorageServiceCompat;\n}();\n\nvar name = \"@firebase/storage\";\nvar version = \"0.6.1\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Storage.\r\n */\n\nvar STORAGE_TYPE = 'storage';\n\nfunction factory(container, _a) {\n  var url = _a.instanceIdentifier; // Dependencies\n  // TODO: This should eventually be 'app-compat'\n\n  var app = container.getProvider('app').getImmediate();\n  var authProvider = container.getProvider('auth-internal');\n  var appCheckProvider = container.getProvider('app-check-internal'); // TODO: get StorageService instance from component framework instead\n  // of creating a new one.\n\n  var storageServiceCompat = new StorageServiceCompat(app, new FirebaseStorageImpl(app, authProvider, appCheckProvider, new ConnectionPool(), url, _app[\"default\"].SDK_VERSION));\n  return storageServiceCompat;\n}\n\nfunction registerStorage(instance) {\n  var namespaceExports = {\n    // no-inline\n    TaskState: TaskState,\n    TaskEvent: TaskEvent,\n    StringFormat: StringFormat,\n    Storage: FirebaseStorageImpl,\n    Reference: ReferenceCompat\n  };\n  instance.INTERNAL.registerComponent(new _component.Component(STORAGE_TYPE, factory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps(namespaceExports).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n}\n\nregisterStorage(_app[\"default\"]);\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$firebase$util$dist$index_esm","~$module$node_modules$tslib$tslib","~$shadow.js","~$module$node_modules$$firebase$app$dist$index_esm","~$module$node_modules$$firebase$component$dist$index_esm"]],"~:properties",["^5",["_reject","total","BASE64","TaskState","_appId","progressCallback","SUCCESS","message","registerStorage","_location","finalized","pageToken","_resolve","CANCELED","Storage","updateMetadata","maxUploadRetryTime","_addObserver","xhr_","handler","_url","list","url","next","token","optional","body","appDelete_","prefixes","customData","_resolveToken","server","_ref","cancel","_requests","_transition","path_","_metadataErrorHandler","_uploadUrl","pendingConnection_","getStatus","successCodes_","callback_","put","_createResumable","host","getResponseText","TaskEvent","child","_authProvider","send","backoffId_","_fetchStatus","label","method","bucket","size_","_notifyObservers","parent","_appCheckProvider","__esModule","storage","complete","getResponseHeader","path","_newRef","regex","error","successCodes","type_","_makeStorageReference","totalBytes","_getAppCheckToken","xform","toString","method_","fullPath","snapshot","root","maxOperationRetryTime","rest","base64","makeFromUrl","refFromURL","_delete","_bucket","_host","getBlob","_needToFetchMetadata","makeRequestWithTokens","body_","_mappings","putString","DATA_URL","getDownloadURL","ERROR","_promise","name","_continueUpload","connection","_request","configurable","additionalRetryCodes_","_metadata","_state","_service","value","_observers","items","_blob","listAll","_removeObserver","_pool","enumerable","_chunkMultiplier","progressCallback_","_makeProgressCallback","STATE_CHANGED","_increaseMultiplier","_finishPromise","timeout","pause","sent_","alt","pool_","_firebaseVersion","url_","writable","createConnection","on","addUploadProgressListener","_throwIfRoot","current","removeUploadProgressListener","headers_","metadata","_transferred","_makeRequest","task","_resumable","_deleted","BASE64URL","fullServerUrl","setMaxOperationRetryTime","_updateProgress","isRetryStatusCode_","_errorHandler","promise_","errorHandler","type","StringFormat","app","reject_","_notifyObserver","getErrorCode","_start","additionalRetryCodes","nextPageToken","state","errorCode_","ref","bucketOnlyServerUrl","slice","completeTransitions_","RAW","data_","timeout_","uploadData","contentType","bytesTransferred","resolve_","_baseMessage","setMaxUploadRetryTime","serverResponse","local","set","_oneShotUpload","_maxUploadRetryTime","abort","getMetadata","_maxOperationRetryTime","then","postModify","size","sendPromise_","canceled_","start_","_fetchMetadata","_delegate","urlParams","useEmulator","errorCallback_","_error","PAUSED","wasSuccessCode","data","get","_getAuthToken","_codeEquals","Reference","_shouldDoResumable","_needToFetchStatus","isRoot","getPromise","RUNNING","makeFromBucketSpec","indices","resume","canceled","headers"]],"~:compiled-at",1627823146981,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$firebase$storage$dist$index_browser_esm.js\",\n\"lineCount\":111,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@firebase/storage/dist/index.browser.esm.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$firebase$storage$dist$index_browser_esm\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.registerStorage = registerStorage;\\n\\nvar _app = _interopRequireDefault(require(\\\"@firebase/app\\\"));\\n\\nvar _tslib = require(\\\"tslib\\\");\\n\\nvar _util = require(\\\"@firebase/util\\\");\\n\\nvar _component = require(\\\"@firebase/component\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\nfunction _typeof(obj) { if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof(obj); }\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * @fileoverview Constants used in the Firebase Storage library.\\r\\n */\\n\\n/**\\r\\n * Domain name for firebase storage.\\r\\n */\\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\\n/**\\r\\n * The key in Firebase config json for the storage bucket.\\r\\n */\\n\\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\\n/**\\r\\n * 2 minutes\\r\\n *\\r\\n * The timeout for all operations except upload.\\r\\n */\\n\\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\\n/**\\r\\n * 10 minutes\\r\\n *\\r\\n * The timeout for upload.\\r\\n */\\n\\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\\n/**\\r\\n * An error returned by the Firebase Storage SDK.\\r\\n * @public\\r\\n */\\n\\nvar FirebaseStorageError =\\n/** @class */\\nfunction (_super) {\\n  (0, _tslib.__extends)(FirebaseStorageError, _super);\\n  /**\\r\\n   * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\\r\\n   *  added to the end of the message.\\r\\n   * @param message  - Error message.\\r\\n   */\\n\\n  function FirebaseStorageError(code, message) {\\n    var _this = _super.call(this, prependCode(code), \\\"Firebase Storage: \\\" + message + \\\" (\\\" + prependCode(code) + \\\")\\\") || this;\\n    /**\\r\\n     * Stores custom error data unque to FirebaseStorageError.\\r\\n     */\\n\\n\\n    _this.customData = {\\n      serverResponse: null\\n    };\\n    _this._baseMessage = _this.message; // Without this, `instanceof FirebaseStorageError`, in tests for example,\\n    // returns false.\\n\\n    Object.setPrototypeOf(_this, FirebaseStorageError.prototype);\\n    return _this;\\n  }\\n  /**\\r\\n   * Compares a StorageErrorCode against this error's code, filtering out the prefix.\\r\\n   */\\n\\n\\n  FirebaseStorageError.prototype._codeEquals = function (code) {\\n    return prependCode(code) === this.code;\\n  };\\n\\n  Object.defineProperty(FirebaseStorageError.prototype, \\\"serverResponse\\\", {\\n    /**\\r\\n     * Optional response message that was added by the server.\\r\\n     */\\n    get: function get() {\\n      return this.customData.serverResponse;\\n    },\\n    set: function set(serverResponse) {\\n      this.customData.serverResponse = serverResponse;\\n\\n      if (this.customData.serverResponse) {\\n        this.message = this._baseMessage + \\\"\\\\n\\\" + this.customData.serverResponse;\\n      } else {\\n        this.message = this._baseMessage;\\n      }\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  return FirebaseStorageError;\\n}(_util.FirebaseError);\\n\\nfunction prependCode(code) {\\n  return 'storage/' + code;\\n}\\n\\nfunction unknown() {\\n  var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\\n  return new FirebaseStorageError(\\\"unknown\\\"\\n  /* UNKNOWN */\\n  , message);\\n}\\n\\nfunction objectNotFound(path) {\\n  return new FirebaseStorageError(\\\"object-not-found\\\"\\n  /* OBJECT_NOT_FOUND */\\n  , \\\"Object '\\\" + path + \\\"' does not exist.\\\");\\n}\\n\\nfunction quotaExceeded(bucket) {\\n  return new FirebaseStorageError(\\\"quota-exceeded\\\"\\n  /* QUOTA_EXCEEDED */\\n  , \\\"Quota for bucket '\\\" + bucket + \\\"' exceeded, please view quota on \\\" + 'https://firebase.google.com/pricing/.');\\n}\\n\\nfunction unauthenticated() {\\n  var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\\n  return new FirebaseStorageError(\\\"unauthenticated\\\"\\n  /* UNAUTHENTICATED */\\n  , message);\\n}\\n\\nfunction unauthorizedApp() {\\n  return new FirebaseStorageError(\\\"unauthorized-app\\\"\\n  /* UNAUTHORIZED_APP */\\n  , 'This app does not have permission to access Firebase Storage on this project.');\\n}\\n\\nfunction unauthorized(path) {\\n  return new FirebaseStorageError(\\\"unauthorized\\\"\\n  /* UNAUTHORIZED */\\n  , \\\"User does not have permission to access '\\\" + path + \\\"'.\\\");\\n}\\n\\nfunction retryLimitExceeded() {\\n  return new FirebaseStorageError(\\\"retry-limit-exceeded\\\"\\n  /* RETRY_LIMIT_EXCEEDED */\\n  , 'Max retry time for operation exceeded, please try again.');\\n}\\n\\nfunction canceled() {\\n  return new FirebaseStorageError(\\\"canceled\\\"\\n  /* CANCELED */\\n  , 'User canceled the upload/download.');\\n}\\n\\nfunction invalidUrl(url) {\\n  return new FirebaseStorageError(\\\"invalid-url\\\"\\n  /* INVALID_URL */\\n  , \\\"Invalid URL '\\\" + url + \\\"'.\\\");\\n}\\n\\nfunction invalidDefaultBucket(bucket) {\\n  return new FirebaseStorageError(\\\"invalid-default-bucket\\\"\\n  /* INVALID_DEFAULT_BUCKET */\\n  , \\\"Invalid default bucket '\\\" + bucket + \\\"'.\\\");\\n}\\n\\nfunction noDefaultBucket() {\\n  return new FirebaseStorageError(\\\"no-default-bucket\\\"\\n  /* NO_DEFAULT_BUCKET */\\n  , 'No default bucket ' + \\\"found. Did you set the '\\\" + CONFIG_STORAGE_BUCKET_KEY + \\\"' property when initializing the app?\\\");\\n}\\n\\nfunction cannotSliceBlob() {\\n  return new FirebaseStorageError(\\\"cannot-slice-blob\\\"\\n  /* CANNOT_SLICE_BLOB */\\n  , 'Cannot slice blob for upload. Please retry the upload.');\\n}\\n\\nfunction serverFileWrongSize() {\\n  return new FirebaseStorageError(\\\"server-file-wrong-size\\\"\\n  /* SERVER_FILE_WRONG_SIZE */\\n  , 'Server recorded incorrect upload file size, please retry the upload.');\\n}\\n\\nfunction noDownloadURL() {\\n  return new FirebaseStorageError(\\\"no-download-url\\\"\\n  /* NO_DOWNLOAD_URL */\\n  , 'The given file does not have any download URLs.');\\n}\\n\\nfunction invalidArgument(message) {\\n  return new FirebaseStorageError(\\\"invalid-argument\\\"\\n  /* INVALID_ARGUMENT */\\n  , message);\\n}\\n\\nfunction appDeleted() {\\n  return new FirebaseStorageError(\\\"app-deleted\\\"\\n  /* APP_DELETED */\\n  , 'The Firebase app was deleted.');\\n}\\n/**\\r\\n * @param name - The name of the operation that was invalid.\\r\\n */\\n\\n\\nfunction invalidRootOperation(name) {\\n  return new FirebaseStorageError(\\\"invalid-root-operation\\\"\\n  /* INVALID_ROOT_OPERATION */\\n  , \\\"The operation '\\\" + name + \\\"' cannot be performed on a root reference, create a non-root \\\" + \\\"reference using child, such as .child('file.png').\\\");\\n}\\n/**\\r\\n * @param format - The format that was not valid.\\r\\n * @param message - A message describing the format violation.\\r\\n */\\n\\n\\nfunction invalidFormat(format, message) {\\n  return new FirebaseStorageError(\\\"invalid-format\\\"\\n  /* INVALID_FORMAT */\\n  , \\\"String does not match format '\\\" + format + \\\"': \\\" + message);\\n}\\n/**\\r\\n * @param message - A message describing the internal error.\\r\\n */\\n\\n\\nfunction internalError(message) {\\n  throw new FirebaseStorageError(\\\"internal-error\\\"\\n  /* INTERNAL_ERROR */\\n  , 'Internal error: ' + message);\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2021 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/** Converts a Base64 encoded string to a binary string. */\\n\\n\\nfunction decodeBase64(encoded) {\\n  return atob(encoded);\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * An enumeration of the possible string formats for upload.\\r\\n * @public\\r\\n */\\n\\n\\nvar StringFormat = {\\n  /**\\r\\n   * Indicates the string should be interpreted \\\"raw\\\", that is, as normal text.\\r\\n   * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\\r\\n   * sequence.\\r\\n   * Example: The string 'Hello! \\\\\\\\ud83d\\\\\\\\ude0a' becomes the byte sequence\\r\\n   * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\\r\\n   */\\n  RAW: 'raw',\\n\\n  /**\\r\\n   * Indicates the string should be interpreted as base64-encoded data.\\r\\n   * Padding characters (trailing '='s) are optional.\\r\\n   * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\\r\\n   * ad 69 8e fb e1 3a b7 bf eb 97\\r\\n   */\\n  BASE64: 'base64',\\n\\n  /**\\r\\n   * Indicates the string should be interpreted as base64url-encoded data.\\r\\n   * Padding characters (trailing '='s) are optional.\\r\\n   * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\\r\\n   * ad 69 8e fb e1 3a b7 bf eb 97\\r\\n   */\\n  BASE64URL: 'base64url',\\n\\n  /**\\r\\n   * Indicates the string is a data URL, such as one obtained from\\r\\n   * canvas.toDataURL().\\r\\n   * Example: the string 'data:application/octet-stream;base64,aaaa'\\r\\n   * becomes the byte sequence\\r\\n   * 69 a6 9a\\r\\n   * (the content-type \\\"application/octet-stream\\\" is also applied, but can\\r\\n   * be overridden in the metadata object).\\r\\n   */\\n  DATA_URL: 'data_url'\\n};\\n\\nvar StringData =\\n/** @class */\\nfunction () {\\n  function StringData(data, contentType) {\\n    this.data = data;\\n    this.contentType = contentType || null;\\n  }\\n\\n  return StringData;\\n}();\\n\\nfunction dataFromString(format, stringData) {\\n  switch (format) {\\n    case StringFormat.RAW:\\n      return new StringData(utf8Bytes_(stringData));\\n\\n    case StringFormat.BASE64:\\n    case StringFormat.BASE64URL:\\n      return new StringData(base64Bytes_(format, stringData));\\n\\n    case StringFormat.DATA_URL:\\n      return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\\n    // do nothing\\n  } // assert(false);\\n\\n\\n  throw unknown();\\n}\\n\\nfunction utf8Bytes_(value) {\\n  var b = [];\\n\\n  for (var i = 0; i < value.length; i++) {\\n    var c = value.charCodeAt(i);\\n\\n    if (c <= 127) {\\n      b.push(c);\\n    } else {\\n      if (c <= 2047) {\\n        b.push(192 | c >> 6, 128 | c & 63);\\n      } else {\\n        if ((c & 64512) === 55296) {\\n          // The start of a surrogate pair.\\n          var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\\n\\n          if (!valid) {\\n            // The second surrogate wasn't there.\\n            b.push(239, 191, 189);\\n          } else {\\n            var hi = c;\\n            var lo = value.charCodeAt(++i);\\n            c = 65536 | (hi & 1023) << 10 | lo & 1023;\\n            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\\n          }\\n        } else {\\n          if ((c & 64512) === 56320) {\\n            // Invalid low surrogate.\\n            b.push(239, 191, 189);\\n          } else {\\n            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  return new Uint8Array(b);\\n}\\n\\nfunction percentEncodedBytes_(value) {\\n  var decoded;\\n\\n  try {\\n    decoded = decodeURIComponent(value);\\n  } catch (e) {\\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\\n  }\\n\\n  return utf8Bytes_(decoded);\\n}\\n\\nfunction base64Bytes_(format, value) {\\n  switch (format) {\\n    case StringFormat.BASE64:\\n      {\\n        var hasMinus = value.indexOf('-') !== -1;\\n        var hasUnder = value.indexOf('_') !== -1;\\n\\n        if (hasMinus || hasUnder) {\\n          var invalidChar = hasMinus ? '-' : '_';\\n          throw invalidFormat(format, \\\"Invalid character '\\\" + invalidChar + \\\"' found: is it base64url encoded?\\\");\\n        }\\n\\n        break;\\n      }\\n\\n    case StringFormat.BASE64URL:\\n      {\\n        var hasPlus = value.indexOf('+') !== -1;\\n        var hasSlash = value.indexOf('/') !== -1;\\n\\n        if (hasPlus || hasSlash) {\\n          var invalidChar = hasPlus ? '+' : '/';\\n          throw invalidFormat(format, \\\"Invalid character '\\\" + invalidChar + \\\"' found: is it base64 encoded?\\\");\\n        }\\n\\n        value = value.replace(/-/g, '+').replace(/_/g, '/');\\n        break;\\n      }\\n    // do nothing\\n  }\\n\\n  var bytes;\\n\\n  try {\\n    bytes = decodeBase64(value);\\n  } catch (e) {\\n    throw invalidFormat(format, 'Invalid character found');\\n  }\\n\\n  var array = new Uint8Array(bytes.length);\\n\\n  for (var i = 0; i < bytes.length; i++) {\\n    array[i] = bytes.charCodeAt(i);\\n  }\\n\\n  return array;\\n}\\n\\nvar DataURLParts =\\n/** @class */\\nfunction () {\\n  function DataURLParts(dataURL) {\\n    this.base64 = false;\\n    this.contentType = null;\\n    var matches = dataURL.match(/^data:([^,]+)?,/);\\n\\n    if (matches === null) {\\n      throw invalidFormat(StringFormat.DATA_URL, \\\"Must be formatted 'data:[<mediatype>][;base64],<data>\\\");\\n    }\\n\\n    var middle = matches[1] || null;\\n\\n    if (middle != null) {\\n      this.base64 = endsWith(middle, ';base64');\\n      this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\\n    }\\n\\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\\n  }\\n\\n  return DataURLParts;\\n}();\\n\\nfunction dataURLBytes_(dataUrl) {\\n  var parts = new DataURLParts(dataUrl);\\n\\n  if (parts.base64) {\\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\\n  } else {\\n    return percentEncodedBytes_(parts.rest);\\n  }\\n}\\n\\nfunction dataURLContentType_(dataUrl) {\\n  var parts = new DataURLParts(dataUrl);\\n  return parts.contentType;\\n}\\n\\nfunction endsWith(s, end) {\\n  var longEnough = s.length >= end.length;\\n\\n  if (!longEnough) {\\n    return false;\\n  }\\n\\n  return s.substring(s.length - end.length) === end;\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * An event that is triggered on a task.\\r\\n */\\n\\n\\nvar TaskEvent = {\\n  /**\\r\\n   * For this event,\\r\\n   * <ul>\\r\\n   *   <li>The `next` function is triggered on progress updates and when the\\r\\n   *       task is paused/resumed with an `UploadTaskSnapshot` as the first\\r\\n   *       argument.</li>\\r\\n   *   <li>The `error` function is triggered if the upload is canceled or fails\\r\\n   *       for another reason.</li>\\r\\n   *   <li>The `complete` function is triggered if the upload completes\\r\\n   *       successfully.</li>\\r\\n   * </ul>\\r\\n   */\\n  STATE_CHANGED: 'state_changed'\\n};\\n/**\\r\\n * Represents the current state of a running upload.\\r\\n */\\n\\nvar TaskState = {\\n  /** The task is currently transferring data. */\\n  RUNNING: 'running',\\n\\n  /** The task was paused by the user. */\\n  PAUSED: 'paused',\\n\\n  /** The task completed successfully. */\\n  SUCCESS: 'success',\\n\\n  /** The task was canceled. */\\n  CANCELED: 'canceled',\\n\\n  /** The task failed with an error. */\\n  ERROR: 'error'\\n};\\n\\nfunction taskStateFromInternalTaskState(state) {\\n  switch (state) {\\n    case \\\"running\\\"\\n    /* RUNNING */\\n    :\\n    case \\\"pausing\\\"\\n    /* PAUSING */\\n    :\\n    case \\\"canceling\\\"\\n    /* CANCELING */\\n    :\\n      return TaskState.RUNNING;\\n\\n    case \\\"paused\\\"\\n    /* PAUSED */\\n    :\\n      return TaskState.PAUSED;\\n\\n    case \\\"success\\\"\\n    /* SUCCESS */\\n    :\\n      return TaskState.SUCCESS;\\n\\n    case \\\"canceled\\\"\\n    /* CANCELED */\\n    :\\n      return TaskState.CANCELED;\\n\\n    case \\\"error\\\"\\n    /* ERROR */\\n    :\\n      return TaskState.ERROR;\\n\\n    default:\\n      // TODO(andysoto): assert(false);\\n      return TaskState.ERROR;\\n  }\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * Error codes for requests made by the the XhrIo wrapper.\\r\\n */\\n\\n\\nvar ErrorCode;\\n\\n(function (ErrorCode) {\\n  ErrorCode[ErrorCode[\\\"NO_ERROR\\\"] = 0] = \\\"NO_ERROR\\\";\\n  ErrorCode[ErrorCode[\\\"NETWORK_ERROR\\\"] = 1] = \\\"NETWORK_ERROR\\\";\\n  ErrorCode[ErrorCode[\\\"ABORT\\\"] = 2] = \\\"ABORT\\\";\\n})(ErrorCode || (ErrorCode = {}));\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\\r\\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\\r\\n */\\n\\n\\nvar XhrConnection =\\n/** @class */\\nfunction () {\\n  function XhrConnection() {\\n    var _this = this;\\n\\n    this.sent_ = false;\\n    this.xhr_ = new XMLHttpRequest();\\n    this.errorCode_ = ErrorCode.NO_ERROR;\\n    this.sendPromise_ = new Promise(function (resolve) {\\n      _this.xhr_.addEventListener('abort', function () {\\n        _this.errorCode_ = ErrorCode.ABORT;\\n        resolve();\\n      });\\n\\n      _this.xhr_.addEventListener('error', function () {\\n        _this.errorCode_ = ErrorCode.NETWORK_ERROR;\\n        resolve();\\n      });\\n\\n      _this.xhr_.addEventListener('load', function () {\\n        resolve();\\n      });\\n    });\\n  }\\n  /**\\r\\n   * @override\\r\\n   */\\n\\n\\n  XhrConnection.prototype.send = function (url, method, body, headers) {\\n    if (this.sent_) {\\n      throw internalError('cannot .send() more than once');\\n    }\\n\\n    this.sent_ = true;\\n    this.xhr_.open(method, url, true);\\n\\n    if (headers !== undefined) {\\n      for (var key in headers) {\\n        if (headers.hasOwnProperty(key)) {\\n          this.xhr_.setRequestHeader(key, headers[key].toString());\\n        }\\n      }\\n    }\\n\\n    if (body !== undefined) {\\n      this.xhr_.send(body);\\n    } else {\\n      this.xhr_.send();\\n    }\\n\\n    return this.sendPromise_;\\n  };\\n  /**\\r\\n   * @override\\r\\n   */\\n\\n\\n  XhrConnection.prototype.getErrorCode = function () {\\n    if (!this.sent_) {\\n      throw internalError('cannot .getErrorCode() before sending');\\n    }\\n\\n    return this.errorCode_;\\n  };\\n  /**\\r\\n   * @override\\r\\n   */\\n\\n\\n  XhrConnection.prototype.getStatus = function () {\\n    if (!this.sent_) {\\n      throw internalError('cannot .getStatus() before sending');\\n    }\\n\\n    try {\\n      return this.xhr_.status;\\n    } catch (e) {\\n      return -1;\\n    }\\n  };\\n  /**\\r\\n   * @override\\r\\n   */\\n\\n\\n  XhrConnection.prototype.getResponseText = function () {\\n    if (!this.sent_) {\\n      throw internalError('cannot .getResponseText() before sending');\\n    }\\n\\n    return this.xhr_.responseText;\\n  };\\n  /**\\r\\n   * Aborts the request.\\r\\n   * @override\\r\\n   */\\n\\n\\n  XhrConnection.prototype.abort = function () {\\n    this.xhr_.abort();\\n  };\\n  /**\\r\\n   * @override\\r\\n   */\\n\\n\\n  XhrConnection.prototype.getResponseHeader = function (header) {\\n    return this.xhr_.getResponseHeader(header);\\n  };\\n  /**\\r\\n   * @override\\r\\n   */\\n\\n\\n  XhrConnection.prototype.addUploadProgressListener = function (listener) {\\n    if (this.xhr_.upload != null) {\\n      this.xhr_.upload.addEventListener('progress', listener);\\n    }\\n  };\\n  /**\\r\\n   * @override\\r\\n   */\\n\\n\\n  XhrConnection.prototype.removeUploadProgressListener = function (listener) {\\n    if (this.xhr_.upload != null) {\\n      this.xhr_.upload.removeEventListener('progress', listener);\\n    }\\n  };\\n\\n  return XhrConnection;\\n}();\\n\\nfunction newConnection() {\\n  return new XhrConnection();\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * Factory-like class for creating XhrIo instances.\\r\\n */\\n\\n\\nvar ConnectionPool =\\n/** @class */\\nfunction () {\\n  function ConnectionPool() {}\\n\\n  ConnectionPool.prototype.createConnection = function () {\\n    return newConnection();\\n  };\\n\\n  return ConnectionPool;\\n}();\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * Firebase Storage location data.\\r\\n *\\r\\n * @internal\\r\\n */\\n\\n\\nvar Location =\\n/** @class */\\nfunction () {\\n  function Location(bucket, path) {\\n    this.bucket = bucket;\\n    this.path_ = path;\\n  }\\n\\n  Object.defineProperty(Location.prototype, \\\"path\\\", {\\n    get: function get() {\\n      return this.path_;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  Object.defineProperty(Location.prototype, \\\"isRoot\\\", {\\n    get: function get() {\\n      return this.path.length === 0;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n\\n  Location.prototype.fullServerUrl = function () {\\n    var encode = encodeURIComponent;\\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\\n  };\\n\\n  Location.prototype.bucketOnlyServerUrl = function () {\\n    var encode = encodeURIComponent;\\n    return '/b/' + encode(this.bucket) + '/o';\\n  };\\n\\n  Location.makeFromBucketSpec = function (bucketString, host) {\\n    var bucketLocation;\\n\\n    try {\\n      bucketLocation = Location.makeFromUrl(bucketString, host);\\n    } catch (e) {\\n      // Not valid URL, use as-is. This lets you put bare bucket names in\\n      // config.\\n      return new Location(bucketString, '');\\n    }\\n\\n    if (bucketLocation.path === '') {\\n      return bucketLocation;\\n    } else {\\n      throw invalidDefaultBucket(bucketString);\\n    }\\n  };\\n\\n  Location.makeFromUrl = function (url, host) {\\n    var location = null;\\n    var bucketDomain = '([A-Za-z0-9.\\\\\\\\-_]+)';\\n\\n    function gsModify(loc) {\\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\\n        loc.path_ = loc.path_.slice(0, -1);\\n      }\\n    }\\n\\n    var gsPath = '(/(.*))?$';\\n    var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\\n    var gsIndices = {\\n      bucket: 1,\\n      path: 3\\n    };\\n\\n    function httpModify(loc) {\\n      loc.path_ = decodeURIComponent(loc.path);\\n    }\\n\\n    var version = 'v[A-Za-z0-9_]+';\\n    var firebaseStorageHost = host.replace(/[.]/g, '\\\\\\\\.');\\n    var firebaseStoragePath = '(/([^?#]*).*)?$';\\n    var firebaseStorageRegExp = new RegExp(\\\"^https?://\\\" + firebaseStorageHost + \\\"/\\\" + version + \\\"/b/\\\" + bucketDomain + \\\"/o\\\" + firebaseStoragePath, 'i');\\n    var firebaseStorageIndices = {\\n      bucket: 1,\\n      path: 3\\n    };\\n    var cloudStorageHost = host === DEFAULT_HOST ? '(?:storage.googleapis.com|storage.cloud.google.com)' : host;\\n    var cloudStoragePath = '([^?#]*)';\\n    var cloudStorageRegExp = new RegExp(\\\"^https?://\\\" + cloudStorageHost + \\\"/\\\" + bucketDomain + \\\"/\\\" + cloudStoragePath, 'i');\\n    var cloudStorageIndices = {\\n      bucket: 1,\\n      path: 2\\n    };\\n    var groups = [{\\n      regex: gsRegex,\\n      indices: gsIndices,\\n      postModify: gsModify\\n    }, {\\n      regex: firebaseStorageRegExp,\\n      indices: firebaseStorageIndices,\\n      postModify: httpModify\\n    }, {\\n      regex: cloudStorageRegExp,\\n      indices: cloudStorageIndices,\\n      postModify: httpModify\\n    }];\\n\\n    for (var i = 0; i < groups.length; i++) {\\n      var group = groups[i];\\n      var captures = group.regex.exec(url);\\n\\n      if (captures) {\\n        var bucketValue = captures[group.indices.bucket];\\n        var pathValue = captures[group.indices.path];\\n\\n        if (!pathValue) {\\n          pathValue = '';\\n        }\\n\\n        location = new Location(bucketValue, pathValue);\\n        group.postModify(location);\\n        break;\\n      }\\n    }\\n\\n    if (location == null) {\\n      throw invalidUrl(url);\\n    }\\n\\n    return location;\\n  };\\n\\n  return Location;\\n}();\\n/**\\r\\n * A request whose promise always fails.\\r\\n */\\n\\n\\nvar FailRequest =\\n/** @class */\\nfunction () {\\n  function FailRequest(error) {\\n    this.promise_ = Promise.reject(error);\\n  }\\n  /** @inheritDoc */\\n\\n\\n  FailRequest.prototype.getPromise = function () {\\n    return this.promise_;\\n  };\\n  /** @inheritDoc */\\n\\n\\n  FailRequest.prototype.cancel = function (_appDelete) {};\\n\\n  return FailRequest;\\n}();\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * @param f May be invoked\\r\\n *     before the function returns.\\r\\n * @param callback Get all the arguments passed to the function\\r\\n *     passed to f, including the initial boolean.\\r\\n */\\n\\n\\nfunction start(f, // eslint-disable-next-line @typescript-eslint/no-explicit-any\\ncallback, timeout) {\\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\\n  // type instead of a bunch of functions with state shared in the closure)\\n  var waitSeconds = 1; // Would type this as \\\"number\\\" but that doesn't work for Node so \\u00af\\\\_(\\u30c4)_/\\u00af\\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\\n\\n  var timeoutId = null;\\n  var hitTimeout = false;\\n  var cancelState = 0;\\n\\n  function canceled() {\\n    return cancelState === 2;\\n  }\\n\\n  var triggeredCallback = false;\\n\\n  function triggerCallback() {\\n    var args = [];\\n\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n      args[_i] = arguments[_i];\\n    }\\n\\n    if (!triggeredCallback) {\\n      triggeredCallback = true;\\n      callback.apply(null, args);\\n    }\\n  }\\n\\n  function callWithDelay(millis) {\\n    timeoutId = setTimeout(function () {\\n      timeoutId = null;\\n      f(handler, canceled());\\n    }, millis);\\n  }\\n\\n  function handler(success) {\\n    var args = [];\\n\\n    for (var _i = 1; _i < arguments.length; _i++) {\\n      args[_i - 1] = arguments[_i];\\n    }\\n\\n    if (triggeredCallback) {\\n      return;\\n    }\\n\\n    if (success) {\\n      triggerCallback.call.apply(triggerCallback, (0, _tslib.__spreadArray)([null, success], args));\\n      return;\\n    }\\n\\n    var mustStop = canceled() || hitTimeout;\\n\\n    if (mustStop) {\\n      triggerCallback.call.apply(triggerCallback, (0, _tslib.__spreadArray)([null, success], args));\\n      return;\\n    }\\n\\n    if (waitSeconds < 64) {\\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\\n      waitSeconds *= 2;\\n    }\\n\\n    var waitMillis;\\n\\n    if (cancelState === 1) {\\n      cancelState = 2;\\n      waitMillis = 0;\\n    } else {\\n      waitMillis = (waitSeconds + Math.random()) * 1000;\\n    }\\n\\n    callWithDelay(waitMillis);\\n  }\\n\\n  var stopped = false;\\n\\n  function stop(wasTimeout) {\\n    if (stopped) {\\n      return;\\n    }\\n\\n    stopped = true;\\n\\n    if (triggeredCallback) {\\n      return;\\n    }\\n\\n    if (timeoutId !== null) {\\n      if (!wasTimeout) {\\n        cancelState = 2;\\n      }\\n\\n      clearTimeout(timeoutId);\\n      callWithDelay(0);\\n    } else {\\n      if (!wasTimeout) {\\n        cancelState = 1;\\n      }\\n    }\\n  }\\n\\n  callWithDelay(0);\\n  setTimeout(function () {\\n    hitTimeout = true;\\n    stop(true);\\n  }, timeout);\\n  return stop;\\n}\\n/**\\r\\n * Stops the retry loop from repeating.\\r\\n * If the function is currently \\\"in between\\\" retries, it is invoked immediately\\r\\n * with the second parameter as \\\"true\\\". Otherwise, it will be invoked once more\\r\\n * after the current invocation finishes iff the current invocation would have\\r\\n * triggered another retry.\\r\\n */\\n\\n\\nfunction stop(id) {\\n  id(false);\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nfunction isJustDef(p) {\\n  return p !== void 0;\\n} // eslint-disable-next-line @typescript-eslint/ban-types\\n\\n\\nfunction isFunction(p) {\\n  return typeof p === 'function';\\n}\\n\\nfunction isNonArrayObject(p) {\\n  return _typeof(p) === 'object' && !Array.isArray(p);\\n}\\n\\nfunction isString(p) {\\n  return typeof p === 'string' || p instanceof String;\\n}\\n\\nfunction isNativeBlob(p) {\\n  return isNativeBlobDefined() && p instanceof Blob;\\n}\\n\\nfunction isNativeBlobDefined() {\\n  return typeof Blob !== 'undefined';\\n}\\n\\nfunction validateNumber(argument, minValue, maxValue, value) {\\n  if (value < minValue) {\\n    throw invalidArgument(\\\"Invalid value for '\\\" + argument + \\\"'. Expected \\\" + minValue + \\\" or greater.\\\");\\n  }\\n\\n  if (value > maxValue) {\\n    throw invalidArgument(\\\"Invalid value for '\\\" + argument + \\\"'. Expected \\\" + maxValue + \\\" or less.\\\");\\n  }\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nfunction makeUrl(urlPart, host) {\\n  var protocolMatch = host.match(/^(\\\\w+):\\\\/\\\\/.+/);\\n  var protocol = protocolMatch === null || protocolMatch === void 0 ? void 0 : protocolMatch[1];\\n  var origin = host;\\n\\n  if (protocol == null) {\\n    origin = \\\"https://\\\" + host;\\n  }\\n\\n  return origin + \\\"/v0\\\" + urlPart;\\n}\\n\\nfunction makeQueryString(params) {\\n  var encode = encodeURIComponent;\\n  var queryPart = '?';\\n\\n  for (var key in params) {\\n    if (params.hasOwnProperty(key)) {\\n      var nextPart = encode(key) + '=' + encode(params[key]);\\n      queryPart = queryPart + nextPart + '&';\\n    }\\n  } // Chop off the extra '&' or '?' on the end\\n\\n\\n  queryPart = queryPart.slice(0, -1);\\n  return queryPart;\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar NetworkRequest =\\n/** @class */\\nfunction () {\\n  function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\\n    var _this = this;\\n\\n    this.pendingConnection_ = null;\\n    this.backoffId_ = null;\\n    this.canceled_ = false;\\n    this.appDelete_ = false;\\n    this.url_ = url;\\n    this.method_ = method;\\n    this.headers_ = headers;\\n    this.body_ = body;\\n    this.successCodes_ = successCodes.slice();\\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\\n    this.callback_ = callback;\\n    this.errorCallback_ = errorCallback;\\n    this.progressCallback_ = progressCallback;\\n    this.timeout_ = timeout;\\n    this.pool_ = pool;\\n    this.promise_ = new Promise(function (resolve, reject) {\\n      _this.resolve_ = resolve;\\n      _this.reject_ = reject;\\n\\n      _this.start_();\\n    });\\n  }\\n  /**\\r\\n   * Actually starts the retry loop.\\r\\n   */\\n\\n\\n  NetworkRequest.prototype.start_ = function () {\\n    var self = this;\\n\\n    function doTheRequest(backoffCallback, canceled) {\\n      if (canceled) {\\n        backoffCallback(false, new RequestEndStatus(false, null, true));\\n        return;\\n      }\\n\\n      var connection = self.pool_.createConnection();\\n      self.pendingConnection_ = connection;\\n\\n      function progressListener(progressEvent) {\\n        var loaded = progressEvent.loaded;\\n        var total = progressEvent.lengthComputable ? progressEvent.total : -1;\\n\\n        if (self.progressCallback_ !== null) {\\n          self.progressCallback_(loaded, total);\\n        }\\n      }\\n\\n      if (self.progressCallback_ !== null) {\\n        connection.addUploadProgressListener(progressListener);\\n      } // eslint-disable-next-line @typescript-eslint/no-floating-promises\\n\\n\\n      connection.send(self.url_, self.method_, self.body_, self.headers_).then(function () {\\n        if (self.progressCallback_ !== null) {\\n          connection.removeUploadProgressListener(progressListener);\\n        }\\n\\n        self.pendingConnection_ = null;\\n        var hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\\n        var status = connection.getStatus();\\n\\n        if (!hitServer || self.isRetryStatusCode_(status)) {\\n          var wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\\n          backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\\n          return;\\n        }\\n\\n        var successCode = self.successCodes_.indexOf(status) !== -1;\\n        backoffCallback(true, new RequestEndStatus(successCode, connection));\\n      });\\n    }\\n    /**\\r\\n     * @param requestWentThrough - True if the request eventually went\\r\\n     *     through, false if it hit the retry limit or was canceled.\\r\\n     */\\n\\n\\n    function backoffDone(requestWentThrough, status) {\\n      var resolve = self.resolve_;\\n      var reject = self.reject_;\\n      var connection = status.connection;\\n\\n      if (status.wasSuccessCode) {\\n        try {\\n          var result = self.callback_(connection, connection.getResponseText());\\n\\n          if (isJustDef(result)) {\\n            resolve(result);\\n          } else {\\n            resolve();\\n          }\\n        } catch (e) {\\n          reject(e);\\n        }\\n      } else {\\n        if (connection !== null) {\\n          var err = unknown();\\n          err.serverResponse = connection.getResponseText();\\n\\n          if (self.errorCallback_) {\\n            reject(self.errorCallback_(connection, err));\\n          } else {\\n            reject(err);\\n          }\\n        } else {\\n          if (status.canceled) {\\n            var err = self.appDelete_ ? appDeleted() : canceled();\\n            reject(err);\\n          } else {\\n            var err = retryLimitExceeded();\\n            reject(err);\\n          }\\n        }\\n      }\\n    }\\n\\n    if (this.canceled_) {\\n      backoffDone(false, new RequestEndStatus(false, null, true));\\n    } else {\\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\\n    }\\n  };\\n  /** @inheritDoc */\\n\\n\\n  NetworkRequest.prototype.getPromise = function () {\\n    return this.promise_;\\n  };\\n  /** @inheritDoc */\\n\\n\\n  NetworkRequest.prototype.cancel = function (appDelete) {\\n    this.canceled_ = true;\\n    this.appDelete_ = appDelete || false;\\n\\n    if (this.backoffId_ !== null) {\\n      stop(this.backoffId_);\\n    }\\n\\n    if (this.pendingConnection_ !== null) {\\n      this.pendingConnection_.abort();\\n    }\\n  };\\n\\n  NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\\n    // The codes for which to retry came from this page:\\n    // https://cloud.google.com/storage/docs/exponential-backoff\\n    var isFiveHundredCode = status >= 500 && status < 600;\\n    var extraRetryCodes = [// Request Timeout: web server didn't receive full request in time.\\n    408, // Too Many Requests: you're getting rate-limited, basically.\\n    429];\\n    var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\\n    var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\\n  };\\n\\n  return NetworkRequest;\\n}();\\n/**\\r\\n * A collection of information about the result of a network request.\\r\\n * @param opt_canceled - Defaults to false.\\r\\n */\\n\\n\\nvar RequestEndStatus =\\n/** @class */\\nfunction () {\\n  function RequestEndStatus(wasSuccessCode, connection, canceled) {\\n    this.wasSuccessCode = wasSuccessCode;\\n    this.connection = connection;\\n    this.canceled = !!canceled;\\n  }\\n\\n  return RequestEndStatus;\\n}();\\n\\nfunction addAuthHeader_(headers, authToken) {\\n  if (authToken !== null && authToken.length > 0) {\\n    headers['Authorization'] = 'Firebase ' + authToken;\\n  }\\n}\\n\\nfunction addVersionHeader_(headers, firebaseVersion) {\\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + (firebaseVersion !== null && firebaseVersion !== void 0 ? firebaseVersion : 'AppManager');\\n}\\n\\nfunction addGmpidHeader_(headers, appId) {\\n  if (appId) {\\n    headers['X-Firebase-GMPID'] = appId;\\n  }\\n}\\n\\nfunction addAppCheckHeader_(headers, appCheckToken) {\\n  if (appCheckToken !== null) {\\n    headers['X-Firebase-AppCheck'] = appCheckToken;\\n  }\\n}\\n\\nfunction makeRequest(requestInfo, appId, authToken, appCheckToken, pool, firebaseVersion) {\\n  var queryPart = makeQueryString(requestInfo.urlParams);\\n  var url = requestInfo.url + queryPart;\\n  var headers = Object.assign({}, requestInfo.headers);\\n  addGmpidHeader_(headers, appId);\\n  addAuthHeader_(headers, authToken);\\n  addVersionHeader_(headers, firebaseVersion);\\n  addAppCheckHeader_(headers, appCheckToken);\\n  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nfunction getBlobBuilder() {\\n  if (typeof BlobBuilder !== 'undefined') {\\n    return BlobBuilder;\\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\\n    return WebKitBlobBuilder;\\n  } else {\\n    return undefined;\\n  }\\n}\\n/**\\r\\n * Concatenates one or more values together and converts them to a Blob.\\r\\n *\\r\\n * @param args The values that will make up the resulting blob.\\r\\n * @return The blob.\\r\\n */\\n\\n\\nfunction getBlob() {\\n  var args = [];\\n\\n  for (var _i = 0; _i < arguments.length; _i++) {\\n    args[_i] = arguments[_i];\\n  }\\n\\n  var BlobBuilder = getBlobBuilder();\\n\\n  if (BlobBuilder !== undefined) {\\n    var bb = new BlobBuilder();\\n\\n    for (var i = 0; i < args.length; i++) {\\n      bb.append(args[i]);\\n    }\\n\\n    return bb.getBlob();\\n  } else {\\n    if (isNativeBlobDefined()) {\\n      return new Blob(args);\\n    } else {\\n      throw new FirebaseStorageError(\\\"unsupported-environment\\\"\\n      /* UNSUPPORTED_ENVIRONMENT */\\n      , \\\"This browser doesn't seem to support creating Blobs\\\");\\n    }\\n  }\\n}\\n/**\\r\\n * Slices the blob. The returned blob contains data from the start byte\\r\\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\\r\\n *\\r\\n * @param blob The blob to be sliced.\\r\\n * @param start Index of the starting byte.\\r\\n * @param end Index of the ending byte.\\r\\n * @return The blob slice or null if not supported.\\r\\n */\\n\\n\\nfunction sliceBlob(blob, start, end) {\\n  if (blob.webkitSlice) {\\n    return blob.webkitSlice(start, end);\\n  } else if (blob.mozSlice) {\\n    return blob.mozSlice(start, end);\\n  } else if (blob.slice) {\\n    return blob.slice(start, end);\\n  }\\n\\n  return null;\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * @param opt_elideCopy - If true, doesn't copy mutable input data\\r\\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\\r\\n *     modified after this blob's construction.\\r\\n *\\r\\n * @internal\\r\\n */\\n\\n\\nvar FbsBlob =\\n/** @class */\\nfunction () {\\n  function FbsBlob(data, elideCopy) {\\n    var size = 0;\\n    var blobType = '';\\n\\n    if (isNativeBlob(data)) {\\n      this.data_ = data;\\n      size = data.size;\\n      blobType = data.type;\\n    } else if (data instanceof ArrayBuffer) {\\n      if (elideCopy) {\\n        this.data_ = new Uint8Array(data);\\n      } else {\\n        this.data_ = new Uint8Array(data.byteLength);\\n        this.data_.set(new Uint8Array(data));\\n      }\\n\\n      size = this.data_.length;\\n    } else if (data instanceof Uint8Array) {\\n      if (elideCopy) {\\n        this.data_ = data;\\n      } else {\\n        this.data_ = new Uint8Array(data.length);\\n        this.data_.set(data);\\n      }\\n\\n      size = data.length;\\n    }\\n\\n    this.size_ = size;\\n    this.type_ = blobType;\\n  }\\n\\n  FbsBlob.prototype.size = function () {\\n    return this.size_;\\n  };\\n\\n  FbsBlob.prototype.type = function () {\\n    return this.type_;\\n  };\\n\\n  FbsBlob.prototype.slice = function (startByte, endByte) {\\n    if (isNativeBlob(this.data_)) {\\n      var realBlob = this.data_;\\n      var sliced = sliceBlob(realBlob, startByte, endByte);\\n\\n      if (sliced === null) {\\n        return null;\\n      }\\n\\n      return new FbsBlob(sliced);\\n    } else {\\n      var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\\n      return new FbsBlob(slice, true);\\n    }\\n  };\\n\\n  FbsBlob.getBlob = function () {\\n    var args = [];\\n\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n      args[_i] = arguments[_i];\\n    }\\n\\n    if (isNativeBlobDefined()) {\\n      var blobby = args.map(function (val) {\\n        if (val instanceof FbsBlob) {\\n          return val.data_;\\n        } else {\\n          return val;\\n        }\\n      });\\n      return new FbsBlob(getBlob.apply(null, blobby));\\n    } else {\\n      var uint8Arrays = args.map(function (val) {\\n        if (isString(val)) {\\n          return dataFromString(StringFormat.RAW, val).data;\\n        } else {\\n          // Blobs don't exist, so this has to be a Uint8Array.\\n          return val.data_;\\n        }\\n      });\\n      var finalLength_1 = 0;\\n      uint8Arrays.forEach(function (array) {\\n        finalLength_1 += array.byteLength;\\n      });\\n      var merged_1 = new Uint8Array(finalLength_1);\\n      var index_1 = 0;\\n      uint8Arrays.forEach(function (array) {\\n        for (var i = 0; i < array.length; i++) {\\n          merged_1[index_1++] = array[i];\\n        }\\n      });\\n      return new FbsBlob(merged_1, true);\\n    }\\n  };\\n\\n  FbsBlob.prototype.uploadData = function () {\\n    return this.data_;\\n  };\\n\\n  return FbsBlob;\\n}();\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * Returns the Object resulting from parsing the given JSON, or null if the\\r\\n * given string does not represent a JSON object.\\r\\n */\\n\\n\\nfunction jsonObjectOrNull(s) {\\n  var obj;\\n\\n  try {\\n    obj = JSON.parse(s);\\n  } catch (e) {\\n    return null;\\n  }\\n\\n  if (isNonArrayObject(obj)) {\\n    return obj;\\n  } else {\\n    return null;\\n  }\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * @fileoverview Contains helper methods for manipulating paths.\\r\\n */\\n\\n/**\\r\\n * @return Null if the path is already at the root.\\r\\n */\\n\\n\\nfunction parent(path) {\\n  if (path.length === 0) {\\n    return null;\\n  }\\n\\n  var index = path.lastIndexOf('/');\\n\\n  if (index === -1) {\\n    return '';\\n  }\\n\\n  var newPath = path.slice(0, index);\\n  return newPath;\\n}\\n\\nfunction child(path, childPath) {\\n  var canonicalChildPath = childPath.split('/').filter(function (component) {\\n    return component.length > 0;\\n  }).join('/');\\n\\n  if (path.length === 0) {\\n    return canonicalChildPath;\\n  } else {\\n    return path + '/' + canonicalChildPath;\\n  }\\n}\\n/**\\r\\n * Returns the last component of a path.\\r\\n * '/foo/bar' -> 'bar'\\r\\n * '/foo/bar/baz/' -> 'baz/'\\r\\n * '/a' -> 'a'\\r\\n */\\n\\n\\nfunction lastComponent(path) {\\n  var index = path.lastIndexOf('/', path.length - 2);\\n\\n  if (index === -1) {\\n    return path;\\n  } else {\\n    return path.slice(index + 1);\\n  }\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nfunction noXform_(metadata, value) {\\n  return value;\\n}\\n\\nvar Mapping =\\n/** @class */\\nfunction () {\\n  function Mapping(server, local, writable, xform) {\\n    this.server = server;\\n    this.local = local || server;\\n    this.writable = !!writable;\\n    this.xform = xform || noXform_;\\n  }\\n\\n  return Mapping;\\n}();\\n\\nvar mappings_ = null;\\n\\nfunction xformPath(fullPath) {\\n  if (!isString(fullPath) || fullPath.length < 2) {\\n    return fullPath;\\n  } else {\\n    return lastComponent(fullPath);\\n  }\\n}\\n\\nfunction getMappings() {\\n  if (mappings_) {\\n    return mappings_;\\n  }\\n\\n  var mappings = [];\\n  mappings.push(new Mapping('bucket'));\\n  mappings.push(new Mapping('generation'));\\n  mappings.push(new Mapping('metageneration'));\\n  mappings.push(new Mapping('name', 'fullPath', true));\\n\\n  function mappingsXformPath(_metadata, fullPath) {\\n    return xformPath(fullPath);\\n  }\\n\\n  var nameMapping = new Mapping('name');\\n  nameMapping.xform = mappingsXformPath;\\n  mappings.push(nameMapping);\\n  /**\\r\\n   * Coerces the second param to a number, if it is defined.\\r\\n   */\\n\\n  function xformSize(_metadata, size) {\\n    if (size !== undefined) {\\n      return Number(size);\\n    } else {\\n      return size;\\n    }\\n  }\\n\\n  var sizeMapping = new Mapping('size');\\n  sizeMapping.xform = xformSize;\\n  mappings.push(sizeMapping);\\n  mappings.push(new Mapping('timeCreated'));\\n  mappings.push(new Mapping('updated'));\\n  mappings.push(new Mapping('md5Hash', null, true));\\n  mappings.push(new Mapping('cacheControl', null, true));\\n  mappings.push(new Mapping('contentDisposition', null, true));\\n  mappings.push(new Mapping('contentEncoding', null, true));\\n  mappings.push(new Mapping('contentLanguage', null, true));\\n  mappings.push(new Mapping('contentType', null, true));\\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\\n  mappings_ = mappings;\\n  return mappings_;\\n}\\n\\nfunction addRef(metadata, service) {\\n  function generateRef() {\\n    var bucket = metadata['bucket'];\\n    var path = metadata['fullPath'];\\n    var loc = new Location(bucket, path);\\n    return service._makeStorageReference(loc);\\n  }\\n\\n  Object.defineProperty(metadata, 'ref', {\\n    get: generateRef\\n  });\\n}\\n\\nfunction fromResource(service, resource, mappings) {\\n  var metadata = {};\\n  metadata['type'] = 'file';\\n  var len = mappings.length;\\n\\n  for (var i = 0; i < len; i++) {\\n    var mapping = mappings[i];\\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\\n  }\\n\\n  addRef(metadata, service);\\n  return metadata;\\n}\\n\\nfunction fromResourceString(service, resourceString, mappings) {\\n  var obj = jsonObjectOrNull(resourceString);\\n\\n  if (obj === null) {\\n    return null;\\n  }\\n\\n  var resource = obj;\\n  return fromResource(service, resource, mappings);\\n}\\n\\nfunction downloadUrlFromResourceString(metadata, resourceString, host) {\\n  var obj = jsonObjectOrNull(resourceString);\\n\\n  if (obj === null) {\\n    return null;\\n  }\\n\\n  if (!isString(obj['downloadTokens'])) {\\n    // This can happen if objects are uploaded through GCS and retrieved\\n    // through list, so we don't want to throw an Error.\\n    return null;\\n  }\\n\\n  var tokens = obj['downloadTokens'];\\n\\n  if (tokens.length === 0) {\\n    return null;\\n  }\\n\\n  var encode = encodeURIComponent;\\n  var tokensList = tokens.split(',');\\n  var urls = tokensList.map(function (token) {\\n    var bucket = metadata['bucket'];\\n    var path = metadata['fullPath'];\\n    var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\\n    var base = makeUrl(urlPart, host);\\n    var queryString = makeQueryString({\\n      alt: 'media',\\n      token: token\\n    });\\n    return base + queryString;\\n  });\\n  return urls[0];\\n}\\n\\nfunction toResourceString(metadata, mappings) {\\n  var resource = {};\\n  var len = mappings.length;\\n\\n  for (var i = 0; i < len; i++) {\\n    var mapping = mappings[i];\\n\\n    if (mapping.writable) {\\n      resource[mapping.server] = metadata[mapping.local];\\n    }\\n  }\\n\\n  return JSON.stringify(resource);\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar PREFIXES_KEY = 'prefixes';\\nvar ITEMS_KEY = 'items';\\n\\nfunction fromBackendResponse(service, bucket, resource) {\\n  var listResult = {\\n    prefixes: [],\\n    items: [],\\n    nextPageToken: resource['nextPageToken']\\n  };\\n\\n  if (resource[PREFIXES_KEY]) {\\n    for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\\n      var path = _a[_i];\\n      var pathWithoutTrailingSlash = path.replace(/\\\\/$/, '');\\n\\n      var reference = service._makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\\n\\n      listResult.prefixes.push(reference);\\n    }\\n  }\\n\\n  if (resource[ITEMS_KEY]) {\\n    for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\\n      var item = _c[_b];\\n\\n      var reference = service._makeStorageReference(new Location(bucket, item['name']));\\n\\n      listResult.items.push(reference);\\n    }\\n  }\\n\\n  return listResult;\\n}\\n\\nfunction fromResponseString(service, bucket, resourceString) {\\n  var obj = jsonObjectOrNull(resourceString);\\n\\n  if (obj === null) {\\n    return null;\\n  }\\n\\n  var resource = obj;\\n  return fromBackendResponse(service, bucket, resource);\\n}\\n\\nvar RequestInfo =\\n/** @class */\\nfunction () {\\n  function RequestInfo(url, method,\\n  /**\\r\\n   * Returns the value with which to resolve the request's promise. Only called\\r\\n   * if the request is successful. Throw from this function to reject the\\r\\n   * returned Request's promise with the thrown error.\\r\\n   * Note: The XhrIo passed to this function may be reused after this callback\\r\\n   * returns. Do not keep a reference to it in any way.\\r\\n   */\\n  handler, timeout) {\\n    this.url = url;\\n    this.method = method;\\n    this.handler = handler;\\n    this.timeout = timeout;\\n    this.urlParams = {};\\n    this.headers = {};\\n    this.body = null;\\n    this.errorHandler = null;\\n    /**\\r\\n     * Called with the current number of bytes uploaded and total size (-1 if not\\r\\n     * computable) of the request body (i.e. used to report upload progress).\\r\\n     */\\n\\n    this.progressCallback = null;\\n    this.successCodes = [200];\\n    this.additionalRetryCodes = [];\\n  }\\n\\n  return RequestInfo;\\n}();\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\\r\\n */\\n\\n\\nfunction handlerCheck(cndn) {\\n  if (!cndn) {\\n    throw unknown();\\n  }\\n}\\n\\nfunction metadataHandler(service, mappings) {\\n  function handler(xhr, text) {\\n    var metadata = fromResourceString(service, text, mappings);\\n    handlerCheck(metadata !== null);\\n    return metadata;\\n  }\\n\\n  return handler;\\n}\\n\\nfunction listHandler(service, bucket) {\\n  function handler(xhr, text) {\\n    var listResult = fromResponseString(service, bucket, text);\\n    handlerCheck(listResult !== null);\\n    return listResult;\\n  }\\n\\n  return handler;\\n}\\n\\nfunction downloadUrlHandler(service, mappings) {\\n  function handler(xhr, text) {\\n    var metadata = fromResourceString(service, text, mappings);\\n    handlerCheck(metadata !== null);\\n    return downloadUrlFromResourceString(metadata, text, service.host);\\n  }\\n\\n  return handler;\\n}\\n\\nfunction sharedErrorHandler(location) {\\n  function errorHandler(xhr, err) {\\n    var newErr;\\n\\n    if (xhr.getStatus() === 401) {\\n      if ( // This exact message string is the only consistent part of the\\n      // server's error response that identifies it as an App Check error.\\n      xhr.getResponseText().includes('Firebase App Check token is invalid')) {\\n        newErr = unauthorizedApp();\\n      } else {\\n        newErr = unauthenticated();\\n      }\\n    } else {\\n      if (xhr.getStatus() === 402) {\\n        newErr = quotaExceeded(location.bucket);\\n      } else {\\n        if (xhr.getStatus() === 403) {\\n          newErr = unauthorized(location.path);\\n        } else {\\n          newErr = err;\\n        }\\n      }\\n    }\\n\\n    newErr.serverResponse = err.serverResponse;\\n    return newErr;\\n  }\\n\\n  return errorHandler;\\n}\\n\\nfunction objectErrorHandler(location) {\\n  var shared = sharedErrorHandler(location);\\n\\n  function errorHandler(xhr, err) {\\n    var newErr = shared(xhr, err);\\n\\n    if (xhr.getStatus() === 404) {\\n      newErr = objectNotFound(location.path);\\n    }\\n\\n    newErr.serverResponse = err.serverResponse;\\n    return newErr;\\n  }\\n\\n  return errorHandler;\\n}\\n\\nfunction getMetadata$2(service, location, mappings) {\\n  var urlPart = location.fullServerUrl();\\n  var url = makeUrl(urlPart, service.host);\\n  var method = 'GET';\\n  var timeout = service.maxOperationRetryTime;\\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\\n  requestInfo.errorHandler = objectErrorHandler(location);\\n  return requestInfo;\\n}\\n\\nfunction list$2(service, location, delimiter, pageToken, maxResults) {\\n  var urlParams = {};\\n\\n  if (location.isRoot) {\\n    urlParams['prefix'] = '';\\n  } else {\\n    urlParams['prefix'] = location.path + '/';\\n  }\\n\\n  if (delimiter && delimiter.length > 0) {\\n    urlParams['delimiter'] = delimiter;\\n  }\\n\\n  if (pageToken) {\\n    urlParams['pageToken'] = pageToken;\\n  }\\n\\n  if (maxResults) {\\n    urlParams['maxResults'] = maxResults;\\n  }\\n\\n  var urlPart = location.bucketOnlyServerUrl();\\n  var url = makeUrl(urlPart, service.host);\\n  var method = 'GET';\\n  var timeout = service.maxOperationRetryTime;\\n  var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\\n  requestInfo.urlParams = urlParams;\\n  requestInfo.errorHandler = sharedErrorHandler(location);\\n  return requestInfo;\\n}\\n\\nfunction getDownloadUrl(service, location, mappings) {\\n  var urlPart = location.fullServerUrl();\\n  var url = makeUrl(urlPart, service.host);\\n  var method = 'GET';\\n  var timeout = service.maxOperationRetryTime;\\n  var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\\n  requestInfo.errorHandler = objectErrorHandler(location);\\n  return requestInfo;\\n}\\n\\nfunction updateMetadata$2(service, location, metadata, mappings) {\\n  var urlPart = location.fullServerUrl();\\n  var url = makeUrl(urlPart, service.host);\\n  var method = 'PATCH';\\n  var body = toResourceString(metadata, mappings);\\n  var headers = {\\n    'Content-Type': 'application/json; charset=utf-8'\\n  };\\n  var timeout = service.maxOperationRetryTime;\\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\\n  requestInfo.headers = headers;\\n  requestInfo.body = body;\\n  requestInfo.errorHandler = objectErrorHandler(location);\\n  return requestInfo;\\n}\\n\\nfunction deleteObject$2(service, location) {\\n  var urlPart = location.fullServerUrl();\\n  var url = makeUrl(urlPart, service.host);\\n  var method = 'DELETE';\\n  var timeout = service.maxOperationRetryTime;\\n\\n  function handler(_xhr, _text) {}\\n\\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\\n  requestInfo.successCodes = [200, 204];\\n  requestInfo.errorHandler = objectErrorHandler(location);\\n  return requestInfo;\\n}\\n\\nfunction determineContentType_(metadata, blob) {\\n  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\\n}\\n\\nfunction metadataForUpload_(location, blob, metadata) {\\n  var metadataClone = Object.assign({}, metadata);\\n  metadataClone['fullPath'] = location.path;\\n  metadataClone['size'] = blob.size();\\n\\n  if (!metadataClone['contentType']) {\\n    metadataClone['contentType'] = determineContentType_(null, blob);\\n  }\\n\\n  return metadataClone;\\n}\\n/**\\r\\n * Prepare RequestInfo for uploads as Content-Type: multipart.\\r\\n */\\n\\n\\nfunction multipartUpload(service, location, mappings, blob, metadata) {\\n  var urlPart = location.bucketOnlyServerUrl();\\n  var headers = {\\n    'X-Goog-Upload-Protocol': 'multipart'\\n  };\\n\\n  function genBoundary() {\\n    var str = '';\\n\\n    for (var i = 0; i < 2; i++) {\\n      str = str + Math.random().toString().slice(2);\\n    }\\n\\n    return str;\\n  }\\n\\n  var boundary = genBoundary();\\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\\n  var metadata_ = metadataForUpload_(location, blob, metadata);\\n  var metadataString = toResourceString(metadata_, mappings);\\n  var preBlobPart = '--' + boundary + '\\\\r\\\\n' + 'Content-Type: application/json; charset=utf-8\\\\r\\\\n\\\\r\\\\n' + metadataString + '\\\\r\\\\n--' + boundary + '\\\\r\\\\n' + 'Content-Type: ' + metadata_['contentType'] + '\\\\r\\\\n\\\\r\\\\n';\\n  var postBlobPart = '\\\\r\\\\n--' + boundary + '--';\\n  var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\\n\\n  if (body === null) {\\n    throw cannotSliceBlob();\\n  }\\n\\n  var urlParams = {\\n    name: metadata_['fullPath']\\n  };\\n  var url = makeUrl(urlPart, service.host);\\n  var method = 'POST';\\n  var timeout = service.maxUploadRetryTime;\\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\\n  requestInfo.urlParams = urlParams;\\n  requestInfo.headers = headers;\\n  requestInfo.body = body.uploadData();\\n  requestInfo.errorHandler = sharedErrorHandler(location);\\n  return requestInfo;\\n}\\n/**\\r\\n * @param current The number of bytes that have been uploaded so far.\\r\\n * @param total The total number of bytes in the upload.\\r\\n * @param opt_finalized True if the server has finished the upload.\\r\\n * @param opt_metadata The upload metadata, should\\r\\n *     only be passed if opt_finalized is true.\\r\\n */\\n\\n\\nvar ResumableUploadStatus =\\n/** @class */\\nfunction () {\\n  function ResumableUploadStatus(current, total, finalized, metadata) {\\n    this.current = current;\\n    this.total = total;\\n    this.finalized = !!finalized;\\n    this.metadata = metadata || null;\\n  }\\n\\n  return ResumableUploadStatus;\\n}();\\n\\nfunction checkResumeHeader_(xhr, allowed) {\\n  var status = null;\\n\\n  try {\\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\\n  } catch (e) {\\n    handlerCheck(false);\\n  }\\n\\n  var allowedStatus = allowed || ['active'];\\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\\n  return status;\\n}\\n\\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\\n  var urlPart = location.bucketOnlyServerUrl();\\n  var metadataForUpload = metadataForUpload_(location, blob, metadata);\\n  var urlParams = {\\n    name: metadataForUpload['fullPath']\\n  };\\n  var url = makeUrl(urlPart, service.host);\\n  var method = 'POST';\\n  var headers = {\\n    'X-Goog-Upload-Protocol': 'resumable',\\n    'X-Goog-Upload-Command': 'start',\\n    'X-Goog-Upload-Header-Content-Length': \\\"\\\" + blob.size(),\\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\\n    'Content-Type': 'application/json; charset=utf-8'\\n  };\\n  var body = toResourceString(metadataForUpload, mappings);\\n  var timeout = service.maxUploadRetryTime;\\n\\n  function handler(xhr) {\\n    checkResumeHeader_(xhr);\\n    var url;\\n\\n    try {\\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\\n    } catch (e) {\\n      handlerCheck(false);\\n    }\\n\\n    handlerCheck(isString(url));\\n    return url;\\n  }\\n\\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\\n  requestInfo.urlParams = urlParams;\\n  requestInfo.headers = headers;\\n  requestInfo.body = body;\\n  requestInfo.errorHandler = sharedErrorHandler(location);\\n  return requestInfo;\\n}\\n/**\\r\\n * @param url From a call to fbs.requests.createResumableUpload.\\r\\n */\\n\\n\\nfunction getResumableUploadStatus(service, location, url, blob) {\\n  var headers = {\\n    'X-Goog-Upload-Command': 'query'\\n  };\\n\\n  function handler(xhr) {\\n    var status = checkResumeHeader_(xhr, ['active', 'final']);\\n    var sizeString = null;\\n\\n    try {\\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\\n    } catch (e) {\\n      handlerCheck(false);\\n    }\\n\\n    if (!sizeString) {\\n      // null or empty string\\n      handlerCheck(false);\\n    }\\n\\n    var size = Number(sizeString);\\n    handlerCheck(!isNaN(size));\\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\\n  }\\n\\n  var method = 'POST';\\n  var timeout = service.maxUploadRetryTime;\\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\\n  requestInfo.headers = headers;\\n  requestInfo.errorHandler = sharedErrorHandler(location);\\n  return requestInfo;\\n}\\n/**\\r\\n * Any uploads via the resumable upload API must transfer a number of bytes\\r\\n * that is a multiple of this number.\\r\\n */\\n\\n\\nvar RESUMABLE_UPLOAD_CHUNK_SIZE = 256 * 1024;\\n/**\\r\\n * @param url From a call to fbs.requests.createResumableUpload.\\r\\n * @param chunkSize Number of bytes to upload.\\r\\n * @param status The previous status.\\r\\n *     If not passed or null, we start from the beginning.\\r\\n * @throws fbs.Error If the upload is already complete, the passed in status\\r\\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\\r\\n *     for upload.\\r\\n */\\n\\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\\n  // TODO(andysoto): standardize on internal asserts\\n  // assert(!(opt_status && opt_status.finalized));\\n  var status_ = new ResumableUploadStatus(0, 0);\\n\\n  if (status) {\\n    status_.current = status.current;\\n    status_.total = status.total;\\n  } else {\\n    status_.current = 0;\\n    status_.total = blob.size();\\n  }\\n\\n  if (blob.size() !== status_.total) {\\n    throw serverFileWrongSize();\\n  }\\n\\n  var bytesLeft = status_.total - status_.current;\\n  var bytesToUpload = bytesLeft;\\n\\n  if (chunkSize > 0) {\\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\\n  }\\n\\n  var startByte = status_.current;\\n  var endByte = startByte + bytesToUpload;\\n  var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\\n  var headers = {\\n    'X-Goog-Upload-Command': uploadCommand,\\n    'X-Goog-Upload-Offset': \\\"\\\" + status_.current\\n  };\\n  var body = blob.slice(startByte, endByte);\\n\\n  if (body === null) {\\n    throw cannotSliceBlob();\\n  }\\n\\n  function handler(xhr, text) {\\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\\n    // the 'x-range-md5' header comes back with status code 308 responses.\\n    // We'll only be able to bail out though, because you can't re-upload a\\n    // range that you previously uploaded.\\n    var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\\n    var newCurrent = status_.current + bytesToUpload;\\n    var size = blob.size();\\n    var metadata;\\n\\n    if (uploadStatus === 'final') {\\n      metadata = metadataHandler(service, mappings)(xhr, text);\\n    } else {\\n      metadata = null;\\n    }\\n\\n    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\\n  }\\n\\n  var method = 'POST';\\n  var timeout = service.maxUploadRetryTime;\\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\\n  requestInfo.headers = headers;\\n  requestInfo.body = body.uploadData();\\n  requestInfo.progressCallback = progressCallback || null;\\n  requestInfo.errorHandler = sharedErrorHandler(location);\\n  return requestInfo;\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar Observer =\\n/** @class */\\nfunction () {\\n  function Observer(nextOrObserver, error, complete) {\\n    var asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\\n\\n    if (asFunctions) {\\n      this.next = nextOrObserver;\\n      this.error = error;\\n      this.complete = complete;\\n    } else {\\n      var observer = nextOrObserver;\\n      this.next = observer.next;\\n      this.error = observer.error;\\n      this.complete = observer.complete;\\n    }\\n  }\\n\\n  return Observer;\\n}();\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * Returns a function that invokes f with its arguments asynchronously as a\\r\\n * microtask, i.e. as soon as possible after the current script returns back\\r\\n * into browser code.\\r\\n */\\n// eslint-disable-next-line @typescript-eslint/ban-types\\n\\n\\nfunction async(f) {\\n  return function () {\\n    var argsToForward = [];\\n\\n    for (var _i = 0; _i < arguments.length; _i++) {\\n      argsToForward[_i] = arguments[_i];\\n    } // eslint-disable-next-line @typescript-eslint/no-floating-promises\\n\\n\\n    Promise.resolve().then(function () {\\n      return f.apply(void 0, argsToForward);\\n    });\\n  };\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\\r\\n * upload and manage callbacks for various events.\\r\\n * @internal\\r\\n */\\n\\n\\nvar UploadTask =\\n/** @class */\\nfunction () {\\n  /**\\r\\n   * @param ref - The firebaseStorage.Reference object this task came\\r\\n   *     from, untyped to avoid cyclic dependencies.\\r\\n   * @param blob - The blob to upload.\\r\\n   */\\n  function UploadTask(ref, blob, metadata) {\\n    var _this = this;\\n\\n    if (metadata === void 0) {\\n      metadata = null;\\n    }\\n    /**\\r\\n     * Number of bytes transferred so far.\\r\\n     */\\n\\n\\n    this._transferred = 0;\\n    this._needToFetchStatus = false;\\n    this._needToFetchMetadata = false;\\n    this._observers = [];\\n    this._error = undefined;\\n    this._uploadUrl = undefined;\\n    this._request = undefined;\\n    this._chunkMultiplier = 1;\\n    this._resolve = undefined;\\n    this._reject = undefined;\\n    this._ref = ref;\\n    this._blob = blob;\\n    this._metadata = metadata;\\n    this._mappings = getMappings();\\n    this._resumable = this._shouldDoResumable(this._blob);\\n    this._state = \\\"running\\\"\\n    /* RUNNING */\\n    ;\\n\\n    this._errorHandler = function (error) {\\n      _this._request = undefined;\\n      _this._chunkMultiplier = 1;\\n\\n      if (error._codeEquals(\\\"canceled\\\"\\n      /* CANCELED */\\n      )) {\\n        _this._needToFetchStatus = true;\\n\\n        _this.completeTransitions_();\\n      } else {\\n        _this._error = error;\\n\\n        _this._transition(\\\"error\\\"\\n        /* ERROR */\\n        );\\n      }\\n    };\\n\\n    this._metadataErrorHandler = function (error) {\\n      _this._request = undefined;\\n\\n      if (error._codeEquals(\\\"canceled\\\"\\n      /* CANCELED */\\n      )) {\\n        _this.completeTransitions_();\\n      } else {\\n        _this._error = error;\\n\\n        _this._transition(\\\"error\\\"\\n        /* ERROR */\\n        );\\n      }\\n    };\\n\\n    this._promise = new Promise(function (resolve, reject) {\\n      _this._resolve = resolve;\\n      _this._reject = reject;\\n\\n      _this._start();\\n    }); // Prevent uncaught rejections on the internal promise from bubbling out\\n    // to the top level with a dummy handler.\\n\\n    this._promise.then(null, function () {});\\n  }\\n\\n  UploadTask.prototype._makeProgressCallback = function () {\\n    var _this = this;\\n\\n    var sizeBefore = this._transferred;\\n    return function (loaded) {\\n      return _this._updateProgress(sizeBefore + loaded);\\n    };\\n  };\\n\\n  UploadTask.prototype._shouldDoResumable = function (blob) {\\n    return blob.size() > 256 * 1024;\\n  };\\n\\n  UploadTask.prototype._start = function () {\\n    if (this._state !== \\\"running\\\"\\n    /* RUNNING */\\n    ) {\\n        // This can happen if someone pauses us in a resume callback, for example.\\n        return;\\n      }\\n\\n    if (this._request !== undefined) {\\n      return;\\n    }\\n\\n    if (this._resumable) {\\n      if (this._uploadUrl === undefined) {\\n        this._createResumable();\\n      } else {\\n        if (this._needToFetchStatus) {\\n          this._fetchStatus();\\n        } else {\\n          if (this._needToFetchMetadata) {\\n            // Happens if we miss the metadata on upload completion.\\n            this._fetchMetadata();\\n          } else {\\n            this._continueUpload();\\n          }\\n        }\\n      }\\n    } else {\\n      this._oneShotUpload();\\n    }\\n  };\\n\\n  UploadTask.prototype._resolveToken = function (callback) {\\n    var _this = this; // eslint-disable-next-line @typescript-eslint/no-floating-promises\\n\\n\\n    Promise.all([this._ref.storage._getAuthToken(), this._ref.storage._getAppCheckToken()]).then(function (_a) {\\n      var authToken = _a[0],\\n          appCheckToken = _a[1];\\n\\n      switch (_this._state) {\\n        case \\\"running\\\"\\n        /* RUNNING */\\n        :\\n          callback(authToken, appCheckToken);\\n          break;\\n\\n        case \\\"canceling\\\"\\n        /* CANCELING */\\n        :\\n          _this._transition(\\\"canceled\\\"\\n          /* CANCELED */\\n          );\\n\\n          break;\\n\\n        case \\\"pausing\\\"\\n        /* PAUSING */\\n        :\\n          _this._transition(\\\"paused\\\"\\n          /* PAUSED */\\n          );\\n\\n          break;\\n      }\\n    });\\n  }; // TODO(andysoto): assert false\\n\\n\\n  UploadTask.prototype._createResumable = function () {\\n    var _this = this;\\n\\n    this._resolveToken(function (authToken, appCheckToken) {\\n      var requestInfo = createResumableUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\\n\\n      var createRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\\n\\n      _this._request = createRequest;\\n      createRequest.getPromise().then(function (url) {\\n        _this._request = undefined;\\n        _this._uploadUrl = url;\\n        _this._needToFetchStatus = false;\\n\\n        _this.completeTransitions_();\\n      }, _this._errorHandler);\\n    });\\n  };\\n\\n  UploadTask.prototype._fetchStatus = function () {\\n    var _this = this; // TODO(andysoto): assert(this.uploadUrl_ !== null);\\n\\n\\n    var url = this._uploadUrl;\\n\\n    this._resolveToken(function (authToken, appCheckToken) {\\n      var requestInfo = getResumableUploadStatus(_this._ref.storage, _this._ref._location, url, _this._blob);\\n\\n      var statusRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\\n\\n      _this._request = statusRequest;\\n      statusRequest.getPromise().then(function (status) {\\n        status = status;\\n        _this._request = undefined;\\n\\n        _this._updateProgress(status.current);\\n\\n        _this._needToFetchStatus = false;\\n\\n        if (status.finalized) {\\n          _this._needToFetchMetadata = true;\\n        }\\n\\n        _this.completeTransitions_();\\n      }, _this._errorHandler);\\n    });\\n  };\\n\\n  UploadTask.prototype._continueUpload = function () {\\n    var _this = this;\\n\\n    var chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\\n    var status = new ResumableUploadStatus(this._transferred, this._blob.size()); // TODO(andysoto): assert(this.uploadUrl_ !== null);\\n\\n    var url = this._uploadUrl;\\n\\n    this._resolveToken(function (authToken, appCheckToken) {\\n      var requestInfo;\\n\\n      try {\\n        requestInfo = continueResumableUpload(_this._ref._location, _this._ref.storage, url, _this._blob, chunkSize, _this._mappings, status, _this._makeProgressCallback());\\n      } catch (e) {\\n        _this._error = e;\\n\\n        _this._transition(\\\"error\\\"\\n        /* ERROR */\\n        );\\n\\n        return;\\n      }\\n\\n      var uploadRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\\n\\n      _this._request = uploadRequest;\\n      uploadRequest.getPromise().then(function (newStatus) {\\n        _this._increaseMultiplier();\\n\\n        _this._request = undefined;\\n\\n        _this._updateProgress(newStatus.current);\\n\\n        if (newStatus.finalized) {\\n          _this._metadata = newStatus.metadata;\\n\\n          _this._transition(\\\"success\\\"\\n          /* SUCCESS */\\n          );\\n        } else {\\n          _this.completeTransitions_();\\n        }\\n      }, _this._errorHandler);\\n    });\\n  };\\n\\n  UploadTask.prototype._increaseMultiplier = function () {\\n    var currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier; // Max chunk size is 32M.\\n\\n    if (currentSize < 32 * 1024 * 1024) {\\n      this._chunkMultiplier *= 2;\\n    }\\n  };\\n\\n  UploadTask.prototype._fetchMetadata = function () {\\n    var _this = this;\\n\\n    this._resolveToken(function (authToken, appCheckToken) {\\n      var requestInfo = getMetadata$2(_this._ref.storage, _this._ref._location, _this._mappings);\\n\\n      var metadataRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\\n\\n      _this._request = metadataRequest;\\n      metadataRequest.getPromise().then(function (metadata) {\\n        _this._request = undefined;\\n        _this._metadata = metadata;\\n\\n        _this._transition(\\\"success\\\"\\n        /* SUCCESS */\\n        );\\n      }, _this._metadataErrorHandler);\\n    });\\n  };\\n\\n  UploadTask.prototype._oneShotUpload = function () {\\n    var _this = this;\\n\\n    this._resolveToken(function (authToken, appCheckToken) {\\n      var requestInfo = multipartUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\\n\\n      var multipartRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\\n\\n      _this._request = multipartRequest;\\n      multipartRequest.getPromise().then(function (metadata) {\\n        _this._request = undefined;\\n        _this._metadata = metadata;\\n\\n        _this._updateProgress(_this._blob.size());\\n\\n        _this._transition(\\\"success\\\"\\n        /* SUCCESS */\\n        );\\n      }, _this._errorHandler);\\n    });\\n  };\\n\\n  UploadTask.prototype._updateProgress = function (transferred) {\\n    var old = this._transferred;\\n    this._transferred = transferred; // A progress update can make the \\\"transferred\\\" value smaller (e.g. a\\n    // partial upload not completed by server, after which the \\\"transferred\\\"\\n    // value may reset to the value at the beginning of the request).\\n\\n    if (this._transferred !== old) {\\n      this._notifyObservers();\\n    }\\n  };\\n\\n  UploadTask.prototype._transition = function (state) {\\n    if (this._state === state) {\\n      return;\\n    }\\n\\n    switch (state) {\\n      case \\\"canceling\\\"\\n      /* CANCELING */\\n      :\\n        // TODO(andysoto):\\n        // assert(this.state_ === InternalTaskState.RUNNING ||\\n        //        this.state_ === InternalTaskState.PAUSING);\\n        this._state = state;\\n\\n        if (this._request !== undefined) {\\n          this._request.cancel();\\n        }\\n\\n        break;\\n\\n      case \\\"pausing\\\"\\n      /* PAUSING */\\n      :\\n        // TODO(andysoto):\\n        // assert(this.state_ === InternalTaskState.RUNNING);\\n        this._state = state;\\n\\n        if (this._request !== undefined) {\\n          this._request.cancel();\\n        }\\n\\n        break;\\n\\n      case \\\"running\\\"\\n      /* RUNNING */\\n      :\\n        // TODO(andysoto):\\n        // assert(this.state_ === InternalTaskState.PAUSED ||\\n        //        this.state_ === InternalTaskState.PAUSING);\\n        var wasPaused = this._state === \\\"paused\\\"\\n        /* PAUSED */\\n        ;\\n        this._state = state;\\n\\n        if (wasPaused) {\\n          this._notifyObservers();\\n\\n          this._start();\\n        }\\n\\n        break;\\n\\n      case \\\"paused\\\"\\n      /* PAUSED */\\n      :\\n        // TODO(andysoto):\\n        // assert(this.state_ === InternalTaskState.PAUSING);\\n        this._state = state;\\n\\n        this._notifyObservers();\\n\\n        break;\\n\\n      case \\\"canceled\\\"\\n      /* CANCELED */\\n      :\\n        // TODO(andysoto):\\n        // assert(this.state_ === InternalTaskState.PAUSED ||\\n        //        this.state_ === InternalTaskState.CANCELING);\\n        this._error = canceled();\\n        this._state = state;\\n\\n        this._notifyObservers();\\n\\n        break;\\n\\n      case \\\"error\\\"\\n      /* ERROR */\\n      :\\n        // TODO(andysoto):\\n        // assert(this.state_ === InternalTaskState.RUNNING ||\\n        //        this.state_ === InternalTaskState.PAUSING ||\\n        //        this.state_ === InternalTaskState.CANCELING);\\n        this._state = state;\\n\\n        this._notifyObservers();\\n\\n        break;\\n\\n      case \\\"success\\\"\\n      /* SUCCESS */\\n      :\\n        // TODO(andysoto):\\n        // assert(this.state_ === InternalTaskState.RUNNING ||\\n        //        this.state_ === InternalTaskState.PAUSING ||\\n        //        this.state_ === InternalTaskState.CANCELING);\\n        this._state = state;\\n\\n        this._notifyObservers();\\n\\n        break;\\n    }\\n  };\\n\\n  UploadTask.prototype.completeTransitions_ = function () {\\n    switch (this._state) {\\n      case \\\"pausing\\\"\\n      /* PAUSING */\\n      :\\n        this._transition(\\\"paused\\\"\\n        /* PAUSED */\\n        );\\n\\n        break;\\n\\n      case \\\"canceling\\\"\\n      /* CANCELING */\\n      :\\n        this._transition(\\\"canceled\\\"\\n        /* CANCELED */\\n        );\\n\\n        break;\\n\\n      case \\\"running\\\"\\n      /* RUNNING */\\n      :\\n        this._start();\\n\\n        break;\\n    }\\n  };\\n\\n  Object.defineProperty(UploadTask.prototype, \\\"snapshot\\\", {\\n    /**\\r\\n     * A snapshot of the current task state.\\r\\n     */\\n    get: function get() {\\n      var externalState = taskStateFromInternalTaskState(this._state);\\n      return {\\n        bytesTransferred: this._transferred,\\n        totalBytes: this._blob.size(),\\n        state: externalState,\\n        metadata: this._metadata,\\n        task: this,\\n        ref: this._ref\\n      };\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  /**\\r\\n   * Adds a callback for an event.\\r\\n   * @param type - The type of event to listen for.\\r\\n   * @param nextOrObserver -\\r\\n   *     The `next` function, which gets called for each item in\\r\\n   *     the event stream, or an observer object with some or all of these three\\r\\n   *     properties (`next`, `error`, `complete`).\\r\\n   * @param error - A function that gets called with a `FirebaseStorageError`\\r\\n   *     if the event stream ends due to an error.\\r\\n   * @param completed - A function that gets called if the\\r\\n   *     event stream ends normally.\\r\\n   * @returns\\r\\n   *     If only the event argument is passed, returns a function you can use to\\r\\n   *     add callbacks (see the examples above). If more than just the event\\r\\n   *     argument is passed, returns a function you can call to unregister the\\r\\n   *     callbacks.\\r\\n   */\\n\\n  UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\\n    var _this = this;\\n\\n    var observer = new Observer(nextOrObserver, error, completed);\\n\\n    this._addObserver(observer);\\n\\n    return function () {\\n      _this._removeObserver(observer);\\n    };\\n  };\\n  /**\\r\\n   * This object behaves like a Promise, and resolves with its snapshot data\\r\\n   * when the upload completes.\\r\\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\\r\\n   * @param onRejected - The rejection callback.\\r\\n   */\\n\\n\\n  UploadTask.prototype.then = function (onFulfilled, onRejected) {\\n    // These casts are needed so that TypeScript can infer the types of the\\n    // resulting Promise.\\n    return this._promise.then(onFulfilled, onRejected);\\n  };\\n  /**\\r\\n   * Equivalent to calling `then(null, onRejected)`.\\r\\n   */\\n\\n\\n  UploadTask.prototype[\\\"catch\\\"] = function (onRejected) {\\n    return this.then(null, onRejected);\\n  };\\n  /**\\r\\n   * Adds the given observer.\\r\\n   */\\n\\n\\n  UploadTask.prototype._addObserver = function (observer) {\\n    this._observers.push(observer);\\n\\n    this._notifyObserver(observer);\\n  };\\n  /**\\r\\n   * Removes the given observer.\\r\\n   */\\n\\n\\n  UploadTask.prototype._removeObserver = function (observer) {\\n    var i = this._observers.indexOf(observer);\\n\\n    if (i !== -1) {\\n      this._observers.splice(i, 1);\\n    }\\n  };\\n\\n  UploadTask.prototype._notifyObservers = function () {\\n    var _this = this;\\n\\n    this._finishPromise();\\n\\n    var observers = this._observers.slice();\\n\\n    observers.forEach(function (observer) {\\n      _this._notifyObserver(observer);\\n    });\\n  };\\n\\n  UploadTask.prototype._finishPromise = function () {\\n    if (this._resolve !== undefined) {\\n      var triggered = true;\\n\\n      switch (taskStateFromInternalTaskState(this._state)) {\\n        case TaskState.SUCCESS:\\n          async(this._resolve.bind(null, this.snapshot))();\\n          break;\\n\\n        case TaskState.CANCELED:\\n        case TaskState.ERROR:\\n          var toCall = this._reject;\\n          async(toCall.bind(null, this._error))();\\n          break;\\n\\n        default:\\n          triggered = false;\\n          break;\\n      }\\n\\n      if (triggered) {\\n        this._resolve = undefined;\\n        this._reject = undefined;\\n      }\\n    }\\n  };\\n\\n  UploadTask.prototype._notifyObserver = function (observer) {\\n    var externalState = taskStateFromInternalTaskState(this._state);\\n\\n    switch (externalState) {\\n      case TaskState.RUNNING:\\n      case TaskState.PAUSED:\\n        if (observer.next) {\\n          async(observer.next.bind(observer, this.snapshot))();\\n        }\\n\\n        break;\\n\\n      case TaskState.SUCCESS:\\n        if (observer.complete) {\\n          async(observer.complete.bind(observer))();\\n        }\\n\\n        break;\\n\\n      case TaskState.CANCELED:\\n      case TaskState.ERROR:\\n        if (observer.error) {\\n          async(observer.error.bind(observer, this._error))();\\n        }\\n\\n        break;\\n\\n      default:\\n        // TODO(andysoto): assert(false);\\n        if (observer.error) {\\n          async(observer.error.bind(observer, this._error))();\\n        }\\n\\n    }\\n  };\\n  /**\\r\\n   * Resumes a paused task. Has no effect on a currently running or failed task.\\r\\n   * @returns True if the operation took effect, false if ignored.\\r\\n   */\\n\\n\\n  UploadTask.prototype.resume = function () {\\n    var valid = this._state === \\\"paused\\\"\\n    /* PAUSED */\\n    || this._state === \\\"pausing\\\"\\n    /* PAUSING */\\n    ;\\n\\n    if (valid) {\\n      this._transition(\\\"running\\\"\\n      /* RUNNING */\\n      );\\n    }\\n\\n    return valid;\\n  };\\n  /**\\r\\n   * Pauses a currently running task. Has no effect on a paused or failed task.\\r\\n   * @returns True if the operation took effect, false if ignored.\\r\\n   */\\n\\n\\n  UploadTask.prototype.pause = function () {\\n    var valid = this._state === \\\"running\\\"\\n    /* RUNNING */\\n    ;\\n\\n    if (valid) {\\n      this._transition(\\\"pausing\\\"\\n      /* PAUSING */\\n      );\\n    }\\n\\n    return valid;\\n  };\\n  /**\\r\\n   * Cancels a currently running or paused task. Has no effect on a complete or\\r\\n   * failed task.\\r\\n   * @returns True if the operation took effect, false if ignored.\\r\\n   */\\n\\n\\n  UploadTask.prototype.cancel = function () {\\n    var valid = this._state === \\\"running\\\"\\n    /* RUNNING */\\n    || this._state === \\\"pausing\\\"\\n    /* PAUSING */\\n    ;\\n\\n    if (valid) {\\n      this._transition(\\\"canceling\\\"\\n      /* CANCELING */\\n      );\\n    }\\n\\n    return valid;\\n  };\\n\\n  return UploadTask;\\n}();\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * Provides methods to interact with a bucket in the Firebase Storage service.\\r\\n * @internal\\r\\n * @param _location - An fbs.location, or the URL at\\r\\n *     which to base this object, in one of the following forms:\\r\\n *         gs://<bucket>/<object-path>\\r\\n *         http[s]://firebasestorage.googleapis.com/\\r\\n *                     <api-version>/b/<bucket>/o/<object-path>\\r\\n *     Any query or fragment strings will be ignored in the http[s]\\r\\n *     format. If no value is passed, the storage object will use a URL based on\\r\\n *     the project ID of the base firebase.App instance.\\r\\n */\\n\\n\\nvar Reference =\\n/** @class */\\nfunction () {\\n  function Reference(_service, location) {\\n    this._service = _service;\\n\\n    if (location instanceof Location) {\\n      this._location = location;\\n    } else {\\n      this._location = Location.makeFromUrl(location, _service.host);\\n    }\\n  }\\n  /**\\r\\n   * Returns the URL for the bucket and path this object references,\\r\\n   *     in the form gs://<bucket>/<object-path>\\r\\n   * @override\\r\\n   */\\n\\n\\n  Reference.prototype.toString = function () {\\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\\n  };\\n\\n  Reference.prototype._newRef = function (service, location) {\\n    return new Reference(service, location);\\n  };\\n\\n  Object.defineProperty(Reference.prototype, \\\"root\\\", {\\n    /**\\r\\n     * A reference to the root of this object's bucket.\\r\\n     */\\n    get: function get() {\\n      var location = new Location(this._location.bucket, '');\\n      return this._newRef(this._service, location);\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  Object.defineProperty(Reference.prototype, \\\"bucket\\\", {\\n    /**\\r\\n     * The name of the bucket containing this reference's object.\\r\\n     */\\n    get: function get() {\\n      return this._location.bucket;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  Object.defineProperty(Reference.prototype, \\\"fullPath\\\", {\\n    /**\\r\\n     * The full path of this object.\\r\\n     */\\n    get: function get() {\\n      return this._location.path;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  Object.defineProperty(Reference.prototype, \\\"name\\\", {\\n    /**\\r\\n     * The short name of this object, which is the last component of the full path.\\r\\n     * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\\r\\n     */\\n    get: function get() {\\n      return lastComponent(this._location.path);\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  Object.defineProperty(Reference.prototype, \\\"storage\\\", {\\n    /**\\r\\n     * The `StorageService` instance this `StorageReference` is associated with.\\r\\n     */\\n    get: function get() {\\n      return this._service;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  Object.defineProperty(Reference.prototype, \\\"parent\\\", {\\n    /**\\r\\n     * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\\r\\n     * this reference is the root.\\r\\n     */\\n    get: function get() {\\n      var newPath = parent(this._location.path);\\n\\n      if (newPath === null) {\\n        return null;\\n      }\\n\\n      var location = new Location(this._location.bucket, newPath);\\n      return new Reference(this._service, location);\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  /**\\r\\n   * Utility function to throw an error in methods that do not accept a root reference.\\r\\n   */\\n\\n  Reference.prototype._throwIfRoot = function (name) {\\n    if (this._location.path === '') {\\n      throw invalidRootOperation(name);\\n    }\\n  };\\n\\n  return Reference;\\n}();\\n/**\\r\\n * Uploads data to this object's location.\\r\\n * The upload can be paused and resumed, and exposes progress updates.\\r\\n * @public\\r\\n * @param ref - StorageReference where data should be uploaded.\\r\\n * @param data - The data to upload.\\r\\n * @param metadata - Metadata for the newly uploaded data.\\r\\n * @returns An UploadTask\\r\\n */\\n\\n\\nfunction uploadBytesResumable$1(ref, data, metadata) {\\n  ref._throwIfRoot('uploadBytesResumable');\\n\\n  return new UploadTask(ref, new FbsBlob(data), metadata);\\n}\\n/**\\r\\n * List all items (files) and prefixes (folders) under this storage reference.\\r\\n *\\r\\n * This is a helper method for calling list() repeatedly until there are\\r\\n * no more results. The default pagination size is 1000.\\r\\n *\\r\\n * Note: The results may not be consistent if objects are changed while this\\r\\n * operation is running.\\r\\n *\\r\\n * Warning: listAll may potentially consume too many resources if there are\\r\\n * too many results.\\r\\n * @public\\r\\n * @param ref - StorageReference to get list from.\\r\\n *\\r\\n * @returns A Promise that resolves with all the items and prefixes under\\r\\n *      the current storage reference. `prefixes` contains references to\\r\\n *      sub-directories and `items` contains references to objects in this\\r\\n *      folder. `nextPageToken` is never returned.\\r\\n */\\n\\n\\nfunction listAll$1(ref) {\\n  var accumulator = {\\n    prefixes: [],\\n    items: []\\n  };\\n  return listAllHelper(ref, accumulator).then(function () {\\n    return accumulator;\\n  });\\n}\\n/**\\r\\n * Separated from listAll because async functions can't use \\\"arguments\\\".\\r\\n * @param ref\\r\\n * @param accumulator\\r\\n * @param pageToken\\r\\n */\\n\\n\\nfunction listAllHelper(ref, accumulator, pageToken) {\\n  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n    var opt, nextPage;\\n\\n    var _a, _b;\\n\\n    return (0, _tslib.__generator)(this, function (_c) {\\n      switch (_c.label) {\\n        case 0:\\n          opt = {\\n            // maxResults is 1000 by default.\\n            pageToken: pageToken\\n          };\\n          return [4\\n          /*yield*/\\n          , list$1(ref, opt)];\\n\\n        case 1:\\n          nextPage = _c.sent();\\n\\n          (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\\n\\n          (_b = accumulator.items).push.apply(_b, nextPage.items);\\n\\n          if (!(nextPage.nextPageToken != null)) return [3\\n          /*break*/\\n          , 3];\\n          return [4\\n          /*yield*/\\n          , listAllHelper(ref, accumulator, nextPage.nextPageToken)];\\n\\n        case 2:\\n          _c.sent();\\n\\n          _c.label = 3;\\n\\n        case 3:\\n          return [2\\n          /*return*/\\n          ];\\n      }\\n    });\\n  });\\n}\\n/**\\r\\n * List items (files) and prefixes (folders) under this storage reference.\\r\\n *\\r\\n * List API is only available for Firebase Rules Version 2.\\r\\n *\\r\\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\\r\\n * delimited folder structure.\\r\\n * Refer to GCS's List API if you want to learn more.\\r\\n *\\r\\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\\r\\n * support objects whose paths end with \\\"/\\\" or contain two consecutive\\r\\n * \\\"/\\\"s. Firebase Storage List API will filter these unsupported objects.\\r\\n * list() may fail if there are too many unsupported objects in the bucket.\\r\\n * @public\\r\\n *\\r\\n * @param ref - StorageReference to get list from.\\r\\n * @param options - See ListOptions for details.\\r\\n * @returns A Promise that resolves with the items and prefixes.\\r\\n *      `prefixes` contains references to sub-folders and `items`\\r\\n *      contains references to objects in this folder. `nextPageToken`\\r\\n *      can be used to get the rest of the results.\\r\\n */\\n\\n\\nfunction list$1(ref, options) {\\n  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n    var op, requestInfo;\\n    return (0, _tslib.__generator)(this, function (_a) {\\n      switch (_a.label) {\\n        case 0:\\n          if (options != null) {\\n            if (typeof options.maxResults === 'number') {\\n              validateNumber('options.maxResults',\\n              /* minValue= */\\n              1,\\n              /* maxValue= */\\n              1000, options.maxResults);\\n            }\\n          }\\n\\n          op = options || {};\\n          requestInfo = list$2(ref.storage, ref._location,\\n          /*delimiter= */\\n          '/', op.pageToken, op.maxResults);\\n          return [4\\n          /*yield*/\\n          , ref.storage.makeRequestWithTokens(requestInfo)];\\n\\n        case 1:\\n          return [2\\n          /*return*/\\n          , _a.sent().getPromise()];\\n      }\\n    });\\n  });\\n}\\n/**\\r\\n * A promise that resolves with the metadata for this object. If this\\r\\n * object doesn't exist or metadata cannot be retreived, the promise is\\r\\n * rejected.\\r\\n * @public\\r\\n * @param ref - StorageReference to get metadata from.\\r\\n */\\n\\n\\nfunction getMetadata$1(ref) {\\n  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n    var requestInfo;\\n    return (0, _tslib.__generator)(this, function (_a) {\\n      switch (_a.label) {\\n        case 0:\\n          ref._throwIfRoot('getMetadata');\\n\\n          requestInfo = getMetadata$2(ref.storage, ref._location, getMappings());\\n          return [4\\n          /*yield*/\\n          , ref.storage.makeRequestWithTokens(requestInfo)];\\n\\n        case 1:\\n          return [2\\n          /*return*/\\n          , _a.sent().getPromise()];\\n      }\\n    });\\n  });\\n}\\n/**\\r\\n * Updates the metadata for this object.\\r\\n * @public\\r\\n * @param ref - StorageReference to update metadata for.\\r\\n * @param metadata - The new metadata for the object.\\r\\n *     Only values that have been explicitly set will be changed. Explicitly\\r\\n *     setting a value to null will remove the metadata.\\r\\n * @returns A promise that resolves\\r\\n *     with the new metadata for this object.\\r\\n *     See `firebaseStorage.Reference.prototype.getMetadata`\\r\\n */\\n\\n\\nfunction updateMetadata$1(ref, metadata) {\\n  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n    var requestInfo;\\n    return (0, _tslib.__generator)(this, function (_a) {\\n      switch (_a.label) {\\n        case 0:\\n          ref._throwIfRoot('updateMetadata');\\n\\n          requestInfo = updateMetadata$2(ref.storage, ref._location, metadata, getMappings());\\n          return [4\\n          /*yield*/\\n          , ref.storage.makeRequestWithTokens(requestInfo)];\\n\\n        case 1:\\n          return [2\\n          /*return*/\\n          , _a.sent().getPromise()];\\n      }\\n    });\\n  });\\n}\\n/**\\r\\n * Returns the download URL for the given Reference.\\r\\n * @public\\r\\n * @returns A promise that resolves with the download\\r\\n *     URL for this object.\\r\\n */\\n\\n\\nfunction getDownloadURL$1(ref) {\\n  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n    var requestInfo;\\n    return (0, _tslib.__generator)(this, function (_a) {\\n      switch (_a.label) {\\n        case 0:\\n          ref._throwIfRoot('getDownloadURL');\\n\\n          requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\\n          return [4\\n          /*yield*/\\n          , ref.storage.makeRequestWithTokens(requestInfo)];\\n\\n        case 1:\\n          return [2\\n          /*return*/\\n          , _a.sent().getPromise().then(function (url) {\\n            if (url === null) {\\n              throw noDownloadURL();\\n            }\\n\\n            return url;\\n          })];\\n      }\\n    });\\n  });\\n}\\n/**\\r\\n * Deletes the object at this location.\\r\\n * @public\\r\\n * @param ref - StorageReference for object to delete.\\r\\n * @returns A promise that resolves if the deletion succeeds.\\r\\n */\\n\\n\\nfunction deleteObject$1(ref) {\\n  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n    var requestInfo;\\n    return (0, _tslib.__generator)(this, function (_a) {\\n      switch (_a.label) {\\n        case 0:\\n          ref._throwIfRoot('deleteObject');\\n\\n          requestInfo = deleteObject$2(ref.storage, ref._location);\\n          return [4\\n          /*yield*/\\n          , ref.storage.makeRequestWithTokens(requestInfo)];\\n\\n        case 1:\\n          return [2\\n          /*return*/\\n          , _a.sent().getPromise()];\\n      }\\n    });\\n  });\\n}\\n/**\\r\\n * Returns reference for object obtained by appending `childPath` to `ref`.\\r\\n *\\r\\n * @param ref - StorageReference to get child of.\\r\\n * @param childPath - Child path from provided ref.\\r\\n * @returns A reference to the object obtained by\\r\\n * appending childPath, removing any duplicate, beginning, or trailing\\r\\n * slashes.\\r\\n *\\r\\n */\\n\\n\\nfunction _getChild$1(ref, childPath) {\\n  var newPath = child(ref._location.path, childPath);\\n  var location = new Location(ref._location.bucket, newPath);\\n  return new Reference(ref.storage, location);\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nfunction isUrl(path) {\\n  return /^[A-Za-z]+:\\\\/\\\\//.test(path);\\n}\\n/**\\r\\n * Returns a firebaseStorage.Reference for the given url.\\r\\n */\\n\\n\\nfunction refFromURL(service, url) {\\n  return new Reference(service, url);\\n}\\n/**\\r\\n * Returns a firebaseStorage.Reference for the given path in the default\\r\\n * bucket.\\r\\n */\\n\\n\\nfunction refFromPath(ref, path) {\\n  if (ref instanceof FirebaseStorageImpl) {\\n    var service = ref;\\n\\n    if (service._bucket == null) {\\n      throw noDefaultBucket();\\n    }\\n\\n    var reference = new Reference(service, service._bucket);\\n\\n    if (path != null) {\\n      return refFromPath(reference, path);\\n    } else {\\n      return reference;\\n    }\\n  } else {\\n    // ref is a Reference\\n    if (path !== undefined) {\\n      if (path.includes('..')) {\\n        throw invalidArgument('`path` param cannot contain \\\"..\\\"');\\n      }\\n\\n      return _getChild$1(ref, path);\\n    } else {\\n      return ref;\\n    }\\n  }\\n}\\n\\nfunction ref$1(serviceOrRef, pathOrUrl) {\\n  if (pathOrUrl && isUrl(pathOrUrl)) {\\n    if (serviceOrRef instanceof FirebaseStorageImpl) {\\n      return refFromURL(serviceOrRef, pathOrUrl);\\n    } else {\\n      throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\\n    }\\n  } else {\\n    return refFromPath(serviceOrRef, pathOrUrl);\\n  }\\n}\\n\\nfunction extractBucket(host, config) {\\n  var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\\n\\n  if (bucketString == null) {\\n    return null;\\n  }\\n\\n  return Location.makeFromBucketSpec(bucketString, host);\\n}\\n\\nfunction connectStorageEmulator$1(storage, host, port) {\\n  storage.host = \\\"http://\\\" + host + \\\":\\\" + port;\\n}\\n/**\\r\\n * A service that provides Firebase Storage Reference instances.\\r\\n * @public\\r\\n * @param opt_url - gs:// url to a custom Storage Bucket\\r\\n */\\n\\n\\nvar FirebaseStorageImpl =\\n/** @class */\\nfunction () {\\n  function FirebaseStorageImpl(\\n  /**\\r\\n   * FirebaseApp associated with this StorageService instance.\\r\\n   */\\n  app, _authProvider,\\n  /**\\r\\n   * @internal\\r\\n   */\\n  _appCheckProvider,\\n  /**\\r\\n   * @internal\\r\\n   */\\n  _pool, _url, _firebaseVersion) {\\n    this.app = app;\\n    this._authProvider = _authProvider;\\n    this._appCheckProvider = _appCheckProvider;\\n    this._pool = _pool;\\n    this._url = _url;\\n    this._firebaseVersion = _firebaseVersion;\\n    this._bucket = null;\\n    /**\\r\\n     * This string can be in the formats:\\r\\n     * - host\\r\\n     * - host:port\\r\\n     * - protocol://host:port\\r\\n     */\\n\\n    this._host = DEFAULT_HOST;\\n    this._appId = null;\\n    this._deleted = false;\\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\\n    this._requests = new Set();\\n\\n    if (_url != null) {\\n      this._bucket = Location.makeFromBucketSpec(_url, this._host);\\n    } else {\\n      this._bucket = extractBucket(this._host, this.app.options);\\n    }\\n  }\\n\\n  Object.defineProperty(FirebaseStorageImpl.prototype, \\\"host\\\", {\\n    get: function get() {\\n      return this._host;\\n    },\\n\\n    /**\\r\\n     * Set host string for this service.\\r\\n     * @param host - host string in the form of host, host:port,\\r\\n     * or protocol://host:port\\r\\n     */\\n    set: function set(host) {\\n      this._host = host;\\n\\n      if (this._url != null) {\\n        this._bucket = Location.makeFromBucketSpec(this._url, host);\\n      } else {\\n        this._bucket = extractBucket(host, this.app.options);\\n      }\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  Object.defineProperty(FirebaseStorageImpl.prototype, \\\"maxUploadRetryTime\\\", {\\n    /**\\r\\n     * The maximum time to retry uploads in milliseconds.\\r\\n     */\\n    get: function get() {\\n      return this._maxUploadRetryTime;\\n    },\\n    set: function set(time) {\\n      validateNumber('time',\\n      /* minValue=*/\\n      0,\\n      /* maxValue= */\\n      Number.POSITIVE_INFINITY, time);\\n      this._maxUploadRetryTime = time;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  Object.defineProperty(FirebaseStorageImpl.prototype, \\\"maxOperationRetryTime\\\", {\\n    /**\\r\\n     * The maximum time to retry operations other than uploads or downloads in\\r\\n     * milliseconds.\\r\\n     */\\n    get: function get() {\\n      return this._maxOperationRetryTime;\\n    },\\n    set: function set(time) {\\n      validateNumber('time',\\n      /* minValue=*/\\n      0,\\n      /* maxValue= */\\n      Number.POSITIVE_INFINITY, time);\\n      this._maxOperationRetryTime = time;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n\\n  FirebaseStorageImpl.prototype._getAuthToken = function () {\\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n      var auth, tokenData;\\n      return (0, _tslib.__generator)(this, function (_a) {\\n        switch (_a.label) {\\n          case 0:\\n            auth = this._authProvider.getImmediate({\\n              optional: true\\n            });\\n            if (!auth) return [3\\n            /*break*/\\n            , 2];\\n            return [4\\n            /*yield*/\\n            , auth.getToken()];\\n\\n          case 1:\\n            tokenData = _a.sent();\\n\\n            if (tokenData !== null) {\\n              return [2\\n              /*return*/\\n              , tokenData.accessToken];\\n            }\\n\\n            _a.label = 2;\\n\\n          case 2:\\n            return [2\\n            /*return*/\\n            , null];\\n        }\\n      });\\n    });\\n  };\\n\\n  FirebaseStorageImpl.prototype._getAppCheckToken = function () {\\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n      var appCheck, result;\\n      return (0, _tslib.__generator)(this, function (_a) {\\n        switch (_a.label) {\\n          case 0:\\n            appCheck = this._appCheckProvider.getImmediate({\\n              optional: true\\n            });\\n            if (!appCheck) return [3\\n            /*break*/\\n            , 2];\\n            return [4\\n            /*yield*/\\n            , appCheck.getToken()];\\n\\n          case 1:\\n            result = _a.sent(); // TODO: What do we want to do if there is an error getting the token?\\n            // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\\n            // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\\n            // the token (actual or dummy) to send requests.\\n\\n            return [2\\n            /*return*/\\n            , result.token];\\n\\n          case 2:\\n            return [2\\n            /*return*/\\n            , null];\\n        }\\n      });\\n    });\\n  };\\n  /**\\r\\n   * Stop running requests and prevent more from being created.\\r\\n   */\\n\\n\\n  FirebaseStorageImpl.prototype._delete = function () {\\n    if (!this._deleted) {\\n      this._deleted = true;\\n\\n      this._requests.forEach(function (request) {\\n        return request.cancel();\\n      });\\n\\n      this._requests.clear();\\n    }\\n\\n    return Promise.resolve();\\n  };\\n  /**\\r\\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\\r\\n   * at the given Location.\\r\\n   */\\n\\n\\n  FirebaseStorageImpl.prototype._makeStorageReference = function (loc) {\\n    return new Reference(this, loc);\\n  };\\n  /**\\r\\n   * @param requestInfo - HTTP RequestInfo object\\r\\n   * @param authToken - Firebase auth token\\r\\n   */\\n\\n\\n  FirebaseStorageImpl.prototype._makeRequest = function (requestInfo, authToken, appCheckToken) {\\n    var _this = this;\\n\\n    if (!this._deleted) {\\n      var request_1 = makeRequest(requestInfo, this._appId, authToken, appCheckToken, this._pool, this._firebaseVersion);\\n\\n      this._requests.add(request_1); // Request removes itself from set when complete.\\n\\n\\n      request_1.getPromise().then(function () {\\n        return _this._requests[\\\"delete\\\"](request_1);\\n      }, function () {\\n        return _this._requests[\\\"delete\\\"](request_1);\\n      });\\n      return request_1;\\n    } else {\\n      return new FailRequest(appDeleted());\\n    }\\n  };\\n\\n  FirebaseStorageImpl.prototype.makeRequestWithTokens = function (requestInfo) {\\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n      var _a, authToken, appCheckToken;\\n\\n      return (0, _tslib.__generator)(this, function (_b) {\\n        switch (_b.label) {\\n          case 0:\\n            return [4\\n            /*yield*/\\n            , Promise.all([this._getAuthToken(), this._getAppCheckToken()])];\\n\\n          case 1:\\n            _a = _b.sent(), authToken = _a[0], appCheckToken = _a[1];\\n            return [2\\n            /*return*/\\n            , this._makeRequest(requestInfo, authToken, appCheckToken)];\\n        }\\n      });\\n    });\\n  };\\n\\n  return FirebaseStorageImpl;\\n}();\\n/**\\r\\n * @license\\r\\n * Copyright 2020 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * Uploads data to this object's location.\\r\\n * The upload can be paused and resumed, and exposes progress updates.\\r\\n * @public\\r\\n * @param ref - StorageReference where data should be uploaded.\\r\\n * @param data - The data to upload.\\r\\n * @param metadata - Metadata for the data to upload.\\r\\n * @returns An UploadTask\\r\\n */\\n\\n\\nfunction uploadBytesResumable(ref, data, metadata) {\\n  ref = (0, _util.getModularInstance)(ref);\\n  return uploadBytesResumable$1(ref, data, metadata);\\n}\\n/**\\r\\n * A promise that resolves with the metadata for this object. If this\\r\\n * object doesn't exist or metadata cannot be retreived, the promise is\\r\\n * rejected.\\r\\n * @public\\r\\n * @param ref - StorageReference to get metadata from.\\r\\n */\\n\\n\\nfunction getMetadata(ref) {\\n  ref = (0, _util.getModularInstance)(ref);\\n  return getMetadata$1(ref);\\n}\\n/**\\r\\n * Updates the metadata for this object.\\r\\n * @public\\r\\n * @param ref - StorageReference to update metadata for.\\r\\n * @param metadata - The new metadata for the object.\\r\\n *     Only values that have been explicitly set will be changed. Explicitly\\r\\n *     setting a value to null will remove the metadata.\\r\\n * @returns A promise that resolves with the new metadata for this object.\\r\\n */\\n\\n\\nfunction updateMetadata(ref, metadata) {\\n  ref = (0, _util.getModularInstance)(ref);\\n  return updateMetadata$1(ref, metadata);\\n}\\n/**\\r\\n * List items (files) and prefixes (folders) under this storage reference.\\r\\n *\\r\\n * List API is only available for Firebase Rules Version 2.\\r\\n *\\r\\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\\r\\n * delimited folder structure.\\r\\n * Refer to GCS's List API if you want to learn more.\\r\\n *\\r\\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\\r\\n * support objects whose paths end with \\\"/\\\" or contain two consecutive\\r\\n * \\\"/\\\"s. Firebase Storage List API will filter these unsupported objects.\\r\\n * list() may fail if there are too many unsupported objects in the bucket.\\r\\n * @public\\r\\n *\\r\\n * @param ref - StorageReference to get list from.\\r\\n * @param options - See ListOptions for details.\\r\\n * @returns A Promise that resolves with the items and prefixes.\\r\\n *      `prefixes` contains references to sub-folders and `items`\\r\\n *      contains references to objects in this folder. `nextPageToken`\\r\\n *      can be used to get the rest of the results.\\r\\n */\\n\\n\\nfunction list(ref, options) {\\n  ref = (0, _util.getModularInstance)(ref);\\n  return list$1(ref, options);\\n}\\n/**\\r\\n * List all items (files) and prefixes (folders) under this storage reference.\\r\\n *\\r\\n * This is a helper method for calling list() repeatedly until there are\\r\\n * no more results. The default pagination size is 1000.\\r\\n *\\r\\n * Note: The results may not be consistent if objects are changed while this\\r\\n * operation is running.\\r\\n *\\r\\n * Warning: listAll may potentially consume too many resources if there are\\r\\n * too many results.\\r\\n * @public\\r\\n * @param ref - StorageReference to get list from.\\r\\n *\\r\\n * @returns A Promise that resolves with all the items and prefixes under\\r\\n *      the current storage reference. `prefixes` contains references to\\r\\n *      sub-directories and `items` contains references to objects in this\\r\\n *      folder. `nextPageToken` is never returned.\\r\\n */\\n\\n\\nfunction listAll(ref) {\\n  ref = (0, _util.getModularInstance)(ref);\\n  return listAll$1(ref);\\n}\\n/**\\r\\n * Returns the download URL for the given Reference.\\r\\n * @public\\r\\n * @returns A promise that resolves with the download\\r\\n *     URL for this object.\\r\\n */\\n\\n\\nfunction getDownloadURL(ref) {\\n  ref = (0, _util.getModularInstance)(ref);\\n  return getDownloadURL$1(ref);\\n}\\n/**\\r\\n * Deletes the object at this location.\\r\\n * @public\\r\\n * @param ref - StorageReference for object to delete.\\r\\n * @returns A promise that resolves if the deletion succeeds.\\r\\n */\\n\\n\\nfunction deleteObject(ref) {\\n  ref = (0, _util.getModularInstance)(ref);\\n  return deleteObject$1(ref);\\n}\\n\\nfunction ref(serviceOrRef, pathOrUrl) {\\n  serviceOrRef = (0, _util.getModularInstance)(serviceOrRef);\\n  return ref$1(serviceOrRef, pathOrUrl);\\n}\\n/**\\r\\n * @internal\\r\\n */\\n\\n\\nfunction _getChild(ref, childPath) {\\n  return _getChild$1(ref, childPath);\\n}\\n/**\\r\\n * Modify this `StorageService` instance to communicate with the Cloud Storage emulator.\\r\\n *\\r\\n * @param storage - The `StorageService` instance\\r\\n * @param host - The emulator host (ex: localhost)\\r\\n * @param port - The emulator port (ex: 5001)\\r\\n * @public\\r\\n */\\n\\n\\nfunction connectStorageEmulator(storage, host, port) {\\n  connectStorageEmulator$1(storage, host, port);\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2020 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar UploadTaskSnapshotCompat =\\n/** @class */\\nfunction () {\\n  function UploadTaskSnapshotCompat(_delegate, task, ref) {\\n    this._delegate = _delegate;\\n    this.task = task;\\n    this.ref = ref;\\n  }\\n\\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \\\"bytesTransferred\\\", {\\n    get: function get() {\\n      return this._delegate.bytesTransferred;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \\\"metadata\\\", {\\n    get: function get() {\\n      return this._delegate.metadata;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \\\"state\\\", {\\n    get: function get() {\\n      return this._delegate.state;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \\\"totalBytes\\\", {\\n    get: function get() {\\n      return this._delegate.totalBytes;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  return UploadTaskSnapshotCompat;\\n}();\\n/**\\r\\n * @license\\r\\n * Copyright 2020 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar UploadTaskCompat =\\n/** @class */\\nfunction () {\\n  function UploadTaskCompat(_delegate, _ref) {\\n    this._delegate = _delegate;\\n    this._ref = _ref;\\n    this.cancel = this._delegate.cancel.bind(this._delegate);\\n    this[\\\"catch\\\"] = this._delegate[\\\"catch\\\"].bind(this._delegate);\\n    this.pause = this._delegate.pause.bind(this._delegate);\\n    this.resume = this._delegate.resume.bind(this._delegate);\\n  }\\n\\n  Object.defineProperty(UploadTaskCompat.prototype, \\\"snapshot\\\", {\\n    get: function get() {\\n      return new UploadTaskSnapshotCompat(this._delegate.snapshot, this, this._ref);\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n\\n  UploadTaskCompat.prototype.then = function (onFulfilled, onRejected) {\\n    var _this = this;\\n\\n    return this._delegate.then(function (snapshot) {\\n      if (onFulfilled) {\\n        return onFulfilled(new UploadTaskSnapshotCompat(snapshot, _this, _this._ref));\\n      }\\n    }, onRejected);\\n  };\\n\\n  UploadTaskCompat.prototype.on = function (type, nextOrObserver, error, completed) {\\n    var _this = this;\\n\\n    var wrappedNextOrObserver = undefined;\\n\\n    if (!!nextOrObserver) {\\n      if (typeof nextOrObserver === 'function') {\\n        wrappedNextOrObserver = function wrappedNextOrObserver(taskSnapshot) {\\n          return nextOrObserver(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\\n        };\\n      } else {\\n        wrappedNextOrObserver = {\\n          next: !!nextOrObserver.next ? function (taskSnapshot) {\\n            return nextOrObserver.next(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\\n          } : undefined,\\n          complete: nextOrObserver.complete || undefined,\\n          error: nextOrObserver.error || undefined\\n        };\\n      }\\n    }\\n\\n    return this._delegate.on(type, wrappedNextOrObserver, error || undefined, completed || undefined);\\n  };\\n\\n  return UploadTaskCompat;\\n}();\\n\\nvar ListResultCompat =\\n/** @class */\\nfunction () {\\n  function ListResultCompat(_delegate, _service) {\\n    this._delegate = _delegate;\\n    this._service = _service;\\n  }\\n\\n  Object.defineProperty(ListResultCompat.prototype, \\\"prefixes\\\", {\\n    get: function get() {\\n      var _this = this;\\n\\n      return this._delegate.prefixes.map(function (ref) {\\n        return new ReferenceCompat(ref, _this._service);\\n      });\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  Object.defineProperty(ListResultCompat.prototype, \\\"items\\\", {\\n    get: function get() {\\n      var _this = this;\\n\\n      return this._delegate.items.map(function (ref) {\\n        return new ReferenceCompat(ref, _this._service);\\n      });\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  Object.defineProperty(ListResultCompat.prototype, \\\"nextPageToken\\\", {\\n    get: function get() {\\n      return this._delegate.nextPageToken || null;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  return ListResultCompat;\\n}();\\n/**\\r\\n * @license\\r\\n * Copyright 2020 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *  http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar ReferenceCompat =\\n/** @class */\\nfunction () {\\n  function ReferenceCompat(_delegate, storage) {\\n    this._delegate = _delegate;\\n    this.storage = storage;\\n  }\\n\\n  Object.defineProperty(ReferenceCompat.prototype, \\\"name\\\", {\\n    get: function get() {\\n      return this._delegate.name;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  Object.defineProperty(ReferenceCompat.prototype, \\\"bucket\\\", {\\n    get: function get() {\\n      return this._delegate.bucket;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  Object.defineProperty(ReferenceCompat.prototype, \\\"fullPath\\\", {\\n    get: function get() {\\n      return this._delegate.fullPath;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n\\n  ReferenceCompat.prototype.toString = function () {\\n    return this._delegate.toString();\\n  };\\n  /**\\r\\n   * @returns A reference to the object obtained by\\r\\n   * appending childPath, removing any duplicate, beginning, or trailing\\r\\n   * slashes.\\r\\n   */\\n\\n\\n  ReferenceCompat.prototype.child = function (childPath) {\\n    var reference = _getChild(this._delegate, childPath);\\n\\n    return new ReferenceCompat(reference, this.storage);\\n  };\\n\\n  Object.defineProperty(ReferenceCompat.prototype, \\\"root\\\", {\\n    get: function get() {\\n      return new ReferenceCompat(this._delegate.root, this.storage);\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  Object.defineProperty(ReferenceCompat.prototype, \\\"parent\\\", {\\n    /**\\r\\n     * @returns A reference to the parent of the\\r\\n     * current object, or null if the current object is the root.\\r\\n     */\\n    get: function get() {\\n      var reference = this._delegate.parent;\\n\\n      if (reference == null) {\\n        return null;\\n      }\\n\\n      return new ReferenceCompat(reference, this.storage);\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  /**\\r\\n   * Uploads a blob to this object's location.\\r\\n   * @param data - The blob to upload.\\r\\n   * @returns An UploadTask that lets you control and\\r\\n   * observe the upload.\\r\\n   */\\n\\n  ReferenceCompat.prototype.put = function (data, metadata) {\\n    this._throwIfRoot('put');\\n\\n    return new UploadTaskCompat(uploadBytesResumable(this._delegate, data, metadata), this);\\n  };\\n  /**\\r\\n   * Uploads a string to this object's location.\\r\\n   * @param value - The string to upload.\\r\\n   * @param format - The format of the string to upload.\\r\\n   * @returns An UploadTask that lets you control and\\r\\n   * observe the upload.\\r\\n   */\\n\\n\\n  ReferenceCompat.prototype.putString = function (value, format, metadata) {\\n    if (format === void 0) {\\n      format = StringFormat.RAW;\\n    }\\n\\n    this._throwIfRoot('putString');\\n\\n    var data = dataFromString(format, value);\\n    var metadataClone = (0, _tslib.__assign)({}, metadata);\\n\\n    if (metadataClone['contentType'] == null && data.contentType != null) {\\n      metadataClone['contentType'] = data.contentType;\\n    }\\n\\n    return new UploadTaskCompat(new UploadTask(this._delegate, new FbsBlob(data.data, true), metadataClone), this);\\n  };\\n  /**\\r\\n   * List all items (files) and prefixes (folders) under this storage reference.\\r\\n   *\\r\\n   * This is a helper method for calling list() repeatedly until there are\\r\\n   * no more results. The default pagination size is 1000.\\r\\n   *\\r\\n   * Note: The results may not be consistent if objects are changed while this\\r\\n   * operation is running.\\r\\n   *\\r\\n   * Warning: listAll may potentially consume too many resources if there are\\r\\n   * too many results.\\r\\n   *\\r\\n   * @returns A Promise that resolves with all the items and prefixes under\\r\\n   *  the current storage reference. `prefixes` contains references to\\r\\n   *  sub-directories and `items` contains references to objects in this\\r\\n   *  folder. `nextPageToken` is never returned.\\r\\n   */\\n\\n\\n  ReferenceCompat.prototype.listAll = function () {\\n    var _this = this;\\n\\n    return listAll(this._delegate).then(function (r) {\\n      return new ListResultCompat(r, _this.storage);\\n    });\\n  };\\n  /**\\r\\n   * List items (files) and prefixes (folders) under this storage reference.\\r\\n   *\\r\\n   * List API is only available for Firebase Rules Version 2.\\r\\n   *\\r\\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\\r\\n   * delimited folder structure. Refer to GCS's List API if you want to learn more.\\r\\n   *\\r\\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\\r\\n   * support objects whose paths end with \\\"/\\\" or contain two consecutive\\r\\n   * \\\"/\\\"s. Firebase Storage List API will filter these unsupported objects.\\r\\n   * list() may fail if there are too many unsupported objects in the bucket.\\r\\n   *\\r\\n   * @param options - See ListOptions for details.\\r\\n   * @returns A Promise that resolves with the items and prefixes.\\r\\n   * `prefixes` contains references to sub-folders and `items`\\r\\n   * contains references to objects in this folder. `nextPageToken`\\r\\n   * can be used to get the rest of the results.\\r\\n   */\\n\\n\\n  ReferenceCompat.prototype.list = function (options) {\\n    var _this = this;\\n\\n    return list(this._delegate, options || undefined).then(function (r) {\\n      return new ListResultCompat(r, _this.storage);\\n    });\\n  };\\n  /**\\r\\n   * A promise that resolves with the metadata for this object. If this\\r\\n   * object doesn't exist or metadata cannot be retreived, the promise is\\r\\n   * rejected.\\r\\n   */\\n\\n\\n  ReferenceCompat.prototype.getMetadata = function () {\\n    return getMetadata(this._delegate);\\n  };\\n  /**\\r\\n   * Updates the metadata for this object.\\r\\n   * @param metadata - The new metadata for the object.\\r\\n   * Only values that have been explicitly set will be changed. Explicitly\\r\\n   * setting a value to null will remove the metadata.\\r\\n   * @returns A promise that resolves\\r\\n   * with the new metadata for this object.\\r\\n   * @see firebaseStorage.Reference.prototype.getMetadata\\r\\n   */\\n\\n\\n  ReferenceCompat.prototype.updateMetadata = function (metadata) {\\n    return updateMetadata(this._delegate, metadata);\\n  };\\n  /**\\r\\n   * @returns A promise that resolves with the download\\r\\n   * URL for this object.\\r\\n   */\\n\\n\\n  ReferenceCompat.prototype.getDownloadURL = function () {\\n    return getDownloadURL(this._delegate);\\n  };\\n  /**\\r\\n   * Deletes the object at this location.\\r\\n   * @returns A promise that resolves if the deletion succeeds.\\r\\n   */\\n\\n\\n  ReferenceCompat.prototype[\\\"delete\\\"] = function () {\\n    this._throwIfRoot('delete');\\n\\n    return deleteObject(this._delegate);\\n  };\\n\\n  ReferenceCompat.prototype._throwIfRoot = function (name) {\\n    if (this._delegate._location.path === '') {\\n      throw invalidRootOperation(name);\\n    }\\n  };\\n\\n  return ReferenceCompat;\\n}();\\n/**\\r\\n * @license\\r\\n * Copyright 2020 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * A service that provides firebaseStorage.Reference instances.\\r\\n * @param opt_url gs:// url to a custom Storage Bucket\\r\\n */\\n\\n\\nvar StorageServiceCompat =\\n/** @class */\\nfunction () {\\n  function StorageServiceCompat(app, _delegate) {\\n    this.app = app;\\n    this._delegate = _delegate;\\n  }\\n\\n  Object.defineProperty(StorageServiceCompat.prototype, \\\"maxOperationRetryTime\\\", {\\n    get: function get() {\\n      return this._delegate.maxOperationRetryTime;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  Object.defineProperty(StorageServiceCompat.prototype, \\\"maxUploadRetryTime\\\", {\\n    get: function get() {\\n      return this._delegate.maxUploadRetryTime;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  /**\\r\\n   * Returns a firebaseStorage.Reference for the given path in the default\\r\\n   * bucket.\\r\\n   */\\n\\n  StorageServiceCompat.prototype.ref = function (path) {\\n    if (isUrl(path)) {\\n      throw invalidArgument('ref() expected a child path but got a URL, use refFromURL instead.');\\n    }\\n\\n    return new ReferenceCompat(ref(this._delegate, path), this);\\n  };\\n  /**\\r\\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\\r\\n   * which must be a gs:// or http[s]:// URL.\\r\\n   */\\n\\n\\n  StorageServiceCompat.prototype.refFromURL = function (url) {\\n    if (!isUrl(url)) {\\n      throw invalidArgument('refFromURL() expected a full URL but got a child path, use ref() instead.');\\n    }\\n\\n    try {\\n      Location.makeFromUrl(url, this._delegate.host);\\n    } catch (e) {\\n      throw invalidArgument('refFromUrl() expected a valid full URL but got an invalid one.');\\n    }\\n\\n    return new ReferenceCompat(ref(this._delegate, url), this);\\n  };\\n\\n  StorageServiceCompat.prototype.setMaxUploadRetryTime = function (time) {\\n    this._delegate.maxUploadRetryTime = time;\\n  };\\n\\n  StorageServiceCompat.prototype.setMaxOperationRetryTime = function (time) {\\n    this._delegate.maxOperationRetryTime = time;\\n  };\\n\\n  StorageServiceCompat.prototype.useEmulator = function (host, port) {\\n    connectStorageEmulator(this._delegate, host, port);\\n  };\\n\\n  return StorageServiceCompat;\\n}();\\n\\nvar name = \\\"@firebase/storage\\\";\\nvar version = \\\"0.6.1\\\";\\n/**\\r\\n * @license\\r\\n * Copyright 2020 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * Type constant for Firebase Storage.\\r\\n */\\n\\nvar STORAGE_TYPE = 'storage';\\n\\nfunction factory(container, _a) {\\n  var url = _a.instanceIdentifier; // Dependencies\\n  // TODO: This should eventually be 'app-compat'\\n\\n  var app = container.getProvider('app').getImmediate();\\n  var authProvider = container.getProvider('auth-internal');\\n  var appCheckProvider = container.getProvider('app-check-internal'); // TODO: get StorageService instance from component framework instead\\n  // of creating a new one.\\n\\n  var storageServiceCompat = new StorageServiceCompat(app, new FirebaseStorageImpl(app, authProvider, appCheckProvider, new ConnectionPool(), url, _app[\\\"default\\\"].SDK_VERSION));\\n  return storageServiceCompat;\\n}\\n\\nfunction registerStorage(instance) {\\n  var namespaceExports = {\\n    // no-inline\\n    TaskState: TaskState,\\n    TaskEvent: TaskEvent,\\n    StringFormat: StringFormat,\\n    Storage: FirebaseStorageImpl,\\n    Reference: ReferenceCompat\\n  };\\n  instance.INTERNAL.registerComponent(new _component.Component(STORAGE_TYPE, factory, \\\"PUBLIC\\\"\\n  /* PUBLIC */\\n  ).setServiceProps(namespaceExports).setMultipleInstances(true));\\n  instance.registerVersion(name, version);\\n}\\n\\nregisterStorage(_app[\\\"default\\\"]);\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_typeof\",\"obj\",\"Symbol\",\"iterator\",\"constructor\",\"prototype\",\"unknown\",\"FirebaseStorageError\",\"message\",\"canceled\",\"cannotSliceBlob\",\"invalidArgument\",\"appDeleted\",\"invalidRootOperation\",\"name\",\"invalidFormat\",\"format\",\"internalError\",\"dataFromString\",\"stringData\",\"StringFormat\",\"RAW\",\"StringData\",\"utf8Bytes_\",\"BASE64\",\"BASE64URL\",\"base64Bytes_\",\"DATA_URL\",\"parts\",\"DataURLParts\",\"base64\",\"decoded\",\"decodeURIComponent\",\"value\",\"e\",\"contentType\",\"b\",\"i\",\"length\",\"c\",\"charCodeAt\",\"push\",\"lo\",\"hi\",\"Uint8Array\",\"hasMinus\",\"indexOf\",\"hasUnder\",\"invalidChar\",\"hasPlus\",\"hasSlash\",\"replace\",\"bytes\",\"atob\",\"array\",\"taskStateFromInternalTaskState\",\"state\",\"TaskState\",\"RUNNING\",\"PAUSED\",\"SUCCESS\",\"CANCELED\",\"ERROR\",\"start\",\"f\",\"callback\",\"timeout\",\"triggerCallback\",\"args\",\"_i\",\"arguments\",\"triggeredCallback\",\"apply\",\"callWithDelay\",\"millis\",\"timeoutId\",\"setTimeout\",\"handler\",\"cancelState\",\"success\",\"call\",\"_tslib\",\"__spreadArray\",\"hitTimeout\",\"waitSeconds\",\"waitMillis\",\"Math\",\"random\",\"stop\",\"wasTimeout\",\"stopped\",\"clearTimeout\",\"isString\",\"p\",\"String\",\"isNativeBlob\",\"isNativeBlobDefined\",\"Blob\",\"validateNumber\",\"argument\",\"minValue\",\"maxValue\",\"makeUrl\",\"urlPart\",\"host\",\"protocolMatch\",\"match\",\"origin\",\"protocol\",\"makeQueryString\",\"params\",\"encode\",\"encodeURIComponent\",\"queryPart\",\"key\",\"hasOwnProperty\",\"nextPart\",\"slice\",\"makeRequest\",\"requestInfo\",\"appId\",\"authToken\",\"appCheckToken\",\"pool\",\"firebaseVersion\",\"urlParams\",\"url\",\"headers\",\"Object\",\"assign\",\"NetworkRequest\",\"method\",\"body\",\"successCodes\",\"additionalRetryCodes\",\"errorHandler\",\"progressCallback\",\"getBlob\",\"BlobBuilder\",\"WebKitBlobBuilder\",\"undefined\",\"bb\",\"append\",\"jsonObjectOrNull\",\"s\",\"JSON\",\"parse\",\"Array\",\"isArray\",\"child\",\"path\",\"childPath\",\"canonicalChildPath\",\"split\",\"filter\",\"component\",\"join\",\"lastComponent\",\"index\",\"lastIndexOf\",\"noXform_\",\"metadata\",\"getMappings\",\"mappings_\",\"mappings\",\"Mapping\",\"nameMapping\",\"xform\",\"mappingsXformPath\",\"_metadata\",\"fullPath\",\"sizeMapping\",\"xformSize\",\"size\",\"Number\",\"addRef\",\"service\",\"defineProperty\",\"get\",\"generateRef\",\"loc\",\"Location\",\"bucket\",\"_makeStorageReference\",\"fromResourceString\",\"resourceString\",\"len\",\"mapping\",\"local\",\"server\",\"downloadUrlFromResourceString\",\"tokens\",\"tokensList\",\"map\",\"urls\",\"token\",\"base\",\"queryString\",\"alt\",\"toResourceString\",\"resource\",\"writable\",\"stringify\",\"handlerCheck\",\"cndn\",\"metadataHandler\",\"xhr\",\"text\",\"listHandler\",\"listResult\",\"prefixes\",\"items\",\"nextPageToken\",\"_a\",\"pathWithoutTrailingSlash\",\"reference\",\"_b\",\"_c\",\"item\",\"downloadUrlHandler\",\"sharedErrorHandler\",\"location\",\"err\",\"newErr\",\"getStatus\",\"getResponseText\",\"includes\",\"serverResponse\",\"objectErrorHandler\",\"shared\",\"getMetadata$2\",\"fullServerUrl\",\"maxOperationRetryTime\",\"RequestInfo\",\"getDownloadUrl\",\"deleteObject$2\",\"_xhr\",\"_text\",\"metadataForUpload_\",\"blob\",\"metadataClone\",\"type\",\"multipartUpload\",\"bucketOnlyServerUrl\",\"str\",\"toString\",\"boundary\",\"metadata_\",\"metadataString\",\"FbsBlob\",\"maxUploadRetryTime\",\"uploadData\",\"checkResumeHeader_\",\"allowed\",\"status\",\"getResponseHeader\",\"allowedStatus\",\"createResumableUpload\",\"metadataForUpload\",\"getResumableUploadStatus\",\"sizeString\",\"isNaN\",\"ResumableUploadStatus\",\"continueResumableUpload\",\"chunkSize\",\"status_\",\"current\",\"total\",\"bytesToUpload\",\"bytesLeft\",\"min\",\"startByte\",\"uploadCommand\",\"uploadStatus\",\"newCurrent\",\"async\",\"argsToForward\",\"Promise\",\"resolve\",\"then\",\"listAll$1\",\"ref\",\"accumulator\",\"listAllHelper\",\"pageToken\",\"__awaiter\",\"opt\",\"nextPage\",\"__generator\",\"label\",\"list$1\",\"sent\",\"options\",\"op\",\"maxResults\",\"storage\",\"_location\",\"isRoot\",\"delimiter\",\"makeRequestWithTokens\",\"getPromise\",\"getMetadata$1\",\"_throwIfRoot\",\"updateMetadata$1\",\"getDownloadURL$1\",\"deleteObject$1\",\"_getChild$1\",\"newPath\",\"Reference\",\"isUrl\",\"test\",\"refFromPath\",\"FirebaseStorageImpl\",\"_bucket\",\"extractBucket\",\"config\",\"bucketString\",\"makeFromBucketSpec\",\"list\",\"_util\",\"getModularInstance\",\"listAll\",\"serviceOrRef\",\"pathOrUrl\",\"factory\",\"container\",\"instanceIdentifier\",\"app\",\"getProvider\",\"getImmediate\",\"authProvider\",\"appCheckProvider\",\"storageServiceCompat\",\"StorageServiceCompat\",\"ConnectionPool\",\"_app\",\"SDK_VERSION\",\"registerStorage\",\"instance\",\"namespaceExports\",\"TaskEvent\",\"Storage\",\"ReferenceCompat\",\"INTERNAL\",\"registerComponent\",\"setServiceProps\",\"_component\",\"Component\",\"STORAGE_TYPE\",\"setMultipleInstances\",\"registerVersion\",\"version\",\"_interopRequireDefault\",\"__esModule\",\"_super\",\"code\",\"_this\",\"customData\",\"_baseMessage\",\"setPrototypeOf\",\"__extends\",\"_codeEquals\",\"FirebaseStorageError.prototype._codeEquals\",\"set\",\"enumerable\",\"configurable\",\"FirebaseError\",\"data\",\"dataURL\",\"matches\",\"middle\",\"end\",\"substring\",\"rest\",\"STATE_CHANGED\",\"ErrorCode\",\"XhrConnection\",\"sent_\",\"xhr_\",\"XMLHttpRequest\",\"errorCode_\",\"NO_ERROR\",\"sendPromise_\",\"addEventListener\",\"ABORT\",\"NETWORK_ERROR\",\"send\",\"XhrConnection.prototype.send\",\"open\",\"setRequestHeader\",\"getErrorCode\",\"XhrConnection.prototype.getErrorCode\",\"XhrConnection.prototype.getStatus\",\"XhrConnection.prototype.getResponseText\",\"responseText\",\"abort\",\"XhrConnection.prototype.abort\",\"XhrConnection.prototype.getResponseHeader\",\"header\",\"addUploadProgressListener\",\"XhrConnection.prototype.addUploadProgressListener\",\"listener\",\"upload\",\"removeUploadProgressListener\",\"XhrConnection.prototype.removeUploadProgressListener\",\"removeEventListener\",\"createConnection\",\"ConnectionPool.prototype.createConnection\",\"path_\",\"Location.prototype.fullServerUrl\",\"Location.prototype.bucketOnlyServerUrl\",\"Location.makeFromBucketSpec\",\"bucketLocation\",\"makeFromUrl\",\"Location.makeFromUrl\",\"httpModify\",\"firebaseStorageHost\",\"groups\",\"regex\",\"gsRegex\",\"indices\",\"gsIndices\",\"postModify\",\"gsModify\",\"charAt\",\"firebaseStorageRegExp\",\"RegExp\",\"firebaseStorageIndices\",\"cloudStorageRegExp\",\"DEFAULT_HOST\",\"cloudStorageHost\",\"cloudStorageIndices\",\"group\",\"captures\",\"exec\",\"bucketValue\",\"pathValue\",\"FailRequest\",\"error\",\"promise_\",\"reject\",\"FailRequest.prototype.getPromise\",\"cancel\",\"FailRequest.prototype.cancel\",\"_appDelete\",\"errorCallback\",\"backoffId_\",\"pendingConnection_\",\"appDelete_\",\"canceled_\",\"url_\",\"method_\",\"headers_\",\"body_\",\"successCodes_\",\"additionalRetryCodes_\",\"callback_\",\"errorCallback_\",\"progressCallback_\",\"timeout_\",\"pool_\",\"resolve_\",\"reject_\",\"start_\",\"NetworkRequest.prototype.start_\",\"doTheRequest\",\"backoffCallback\",\"progressListener\",\"progressEvent\",\"loaded\",\"lengthComputable\",\"self\",\"RequestEndStatus\",\"connection\",\"hitServer\",\"isRetryStatusCode_\",\"wasCanceled\",\"successCode\",\"backoffDone\",\"requestWentThrough\",\"wasSuccessCode\",\"result\",\"NetworkRequest.prototype.getPromise\",\"NetworkRequest.prototype.cancel\",\"appDelete\",\"NetworkRequest.prototype.isRetryStatusCode_\",\"isFiveHundredCode\",\"isExtraRetryCode\",\"extraRetryCodes\",\"isRequestSpecificRetryCode\",\"elideCopy\",\"blobType\",\"data_\",\"ArrayBuffer\",\"byteLength\",\"size_\",\"type_\",\"FbsBlob.prototype.size\",\"FbsBlob.prototype.type\",\"FbsBlob.prototype.slice\",\"endByte\",\"realBlob\",\"webkitSlice\",\"mozSlice\",\"sliced\",\"buffer\",\"FbsBlob.getBlob\",\"blobby\",\"val\",\"uint8Arrays\",\"finalLength_1\",\"forEach\",\"merged_1\",\"index_1\",\"FbsBlob.prototype.uploadData\",\"finalized\",\"Observer\",\"nextOrObserver\",\"complete\",\"next\",\"UploadTask\",\"_transferred\",\"_needToFetchMetadata\",\"_needToFetchStatus\",\"_observers\",\"_request\",\"_uploadUrl\",\"_error\",\"_chunkMultiplier\",\"_reject\",\"_resolve\",\"_ref\",\"_blob\",\"_mappings\",\"_resumable\",\"_shouldDoResumable\",\"_state\",\"_errorHandler\",\"this._errorHandler\",\"completeTransitions_\",\"_transition\",\"_metadataErrorHandler\",\"this._metadataErrorHandler\",\"_promise\",\"_start\",\"_makeProgressCallback\",\"UploadTask.prototype._makeProgressCallback\",\"sizeBefore\",\"_updateProgress\",\"UploadTask.prototype._shouldDoResumable\",\"UploadTask.prototype._start\",\"_createResumable\",\"_fetchStatus\",\"_fetchMetadata\",\"_continueUpload\",\"_oneShotUpload\",\"_resolveToken\",\"UploadTask.prototype._resolveToken\",\"all\",\"_getAuthToken\",\"_getAppCheckToken\",\"UploadTask.prototype._createResumable\",\"createRequest\",\"_makeRequest\",\"UploadTask.prototype._fetchStatus\",\"statusRequest\",\"UploadTask.prototype._continueUpload\",\"RESUMABLE_UPLOAD_CHUNK_SIZE\",\"uploadRequest\",\"newStatus\",\"_increaseMultiplier\",\"UploadTask.prototype._increaseMultiplier\",\"UploadTask.prototype._fetchMetadata\",\"metadataRequest\",\"UploadTask.prototype._oneShotUpload\",\"multipartRequest\",\"UploadTask.prototype._updateProgress\",\"transferred\",\"old\",\"_notifyObservers\",\"UploadTask.prototype._transition\",\"wasPaused\",\"UploadTask.prototype.completeTransitions_\",\"externalState\",\"bytesTransferred\",\"totalBytes\",\"task\",\"on\",\"UploadTask.prototype.on\",\"completed\",\"observer\",\"_addObserver\",\"_removeObserver\",\"UploadTask.prototype.then\",\"onFulfilled\",\"onRejected\",\"UploadTask.prototype._addObserver\",\"_notifyObserver\",\"UploadTask.prototype._removeObserver\",\"splice\",\"UploadTask.prototype._notifyObservers\",\"_finishPromise\",\"observers\",\"UploadTask.prototype._finishPromise\",\"triggered\",\"bind\",\"snapshot\",\"UploadTask.prototype._notifyObserver\",\"resume\",\"UploadTask.prototype.resume\",\"valid\",\"pause\",\"UploadTask.prototype.pause\",\"UploadTask.prototype.cancel\",\"_service\",\"Reference.prototype.toString\",\"_newRef\",\"Reference.prototype._newRef\",\"Reference.prototype._throwIfRoot\",\"_authProvider\",\"_appCheckProvider\",\"_pool\",\"_url\",\"_firebaseVersion\",\"_host\",\"_appId\",\"_deleted\",\"_maxOperationRetryTime\",\"DEFAULT_MAX_OPERATION_RETRY_TIME\",\"_maxUploadRetryTime\",\"DEFAULT_MAX_UPLOAD_RETRY_TIME\",\"_requests\",\"Set\",\"time\",\"POSITIVE_INFINITY\",\"FirebaseStorageImpl.prototype._getAuthToken\",\"auth\",\"tokenData\",\"optional\",\"getToken\",\"accessToken\",\"FirebaseStorageImpl.prototype._getAppCheckToken\",\"appCheck\",\"_delete\",\"FirebaseStorageImpl.prototype._delete\",\"request\",\"clear\",\"FirebaseStorageImpl.prototype._makeStorageReference\",\"FirebaseStorageImpl.prototype._makeRequest\",\"request_1\",\"add\",\"FirebaseStorageImpl.prototype.makeRequestWithTokens\",\"UploadTaskSnapshotCompat\",\"_delegate\",\"UploadTaskCompat\",\"UploadTaskCompat.prototype.then\",\"UploadTaskCompat.prototype.on\",\"wrappedNextOrObserver\",\"taskSnapshot\",\"ListResultCompat\",\"ReferenceCompat.prototype.toString\",\"ReferenceCompat.prototype.child\",\"root\",\"parent\",\"put\",\"ReferenceCompat.prototype.put\",\"putString\",\"ReferenceCompat.prototype.putString\",\"__assign\",\"ReferenceCompat.prototype.listAll\",\"r\",\"ReferenceCompat.prototype.list\",\"getMetadata\",\"ReferenceCompat.prototype.getMetadata\",\"updateMetadata\",\"ReferenceCompat.prototype.updateMetadata\",\"getDownloadURL\",\"ReferenceCompat.prototype.getDownloadURL\",\"ReferenceCompat.prototype._throwIfRoot\",\"StorageServiceCompat.prototype.ref\",\"refFromURL\",\"StorageServiceCompat.prototype.refFromURL\",\"setMaxUploadRetryTime\",\"StorageServiceCompat.prototype.setMaxUploadRetryTime\",\"setMaxOperationRetryTime\",\"StorageServiceCompat.prototype.setMaxOperationRetryTime\",\"useEmulator\",\"StorageServiceCompat.prototype.useEmulator\",\"port\"]\n}\n"]