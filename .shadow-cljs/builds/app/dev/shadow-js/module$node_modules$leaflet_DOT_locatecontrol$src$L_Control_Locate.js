["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/leaflet_DOT_locatecontrol/src/L.Control.Locate.js"],"~:js","shadow$provide.module$node_modules$leaflet_DOT_locatecontrol$src$L_Control_Locate=function(global,require,module,exports){(function(factory,window){\"function\"===typeof define&&define.amd?define([\"leaflet\"],factory):\"object\"===typeof exports&&(module.exports=\"undefined\"!==typeof window&&window.L?factory(L):factory(require(\"module$node_modules$leaflet$dist$leaflet_src\")));\"undefined\"!==typeof window&&window.L&&(window.L.Control.Locate=factory(L))})(function(L){var LDomUtilApplyClassesMethod=function(method,\nelement,classNames){classNames=classNames.split(\" \");classNames.forEach(function(className){L.DomUtil[method].call(this,element,className)})},addClasses=function(el,names){LDomUtilApplyClassesMethod(\"addClass\",el,names)},removeClasses=function(el,names){LDomUtilApplyClassesMethod(\"removeClass\",el,names)},LocationMarker=L.Marker.extend({initialize:function(latlng,options){L.Util.setOptions(this,options);this._latlng=latlng;this.createIcon()},createIcon:function(){var opt=this.options,style=\"\";void 0!==\nopt.color&&(style+=\"stroke:\"+opt.color+\";\");void 0!==opt.weight&&(style+=\"stroke-width:\"+opt.weight+\";\");void 0!==opt.fillColor&&(style+=\"fill:\"+opt.fillColor+\";\");void 0!==opt.fillOpacity&&(style+=\"fill-opacity:\"+opt.fillOpacity+\";\");void 0!==opt.opacity&&(style+=\"opacity:\"+opt.opacity+\";\");opt=this._getIconSVG(opt,style);this._locationIcon=L.divIcon({className:opt.className,html:opt.svg,iconSize:[opt.w,opt.h]});this.setIcon(this._locationIcon)},_getIconSVG:function(options,style){var r=options.radius;\noptions=r+options.weight;var s2=2*options;return{className:\"leaflet-control-locate-location\",svg:'\\x3csvg xmlns\\x3d\"http://www.w3.org/2000/svg\" width\\x3d\"'+s2+'\" height\\x3d\"'+s2+'\" version\\x3d\"1.1\" viewBox\\x3d\"-'+options+\" -\"+options+\" \"+s2+\" \"+s2+'\"\\x3e\\x3ccircle r\\x3d\"'+r+'\" style\\x3d\"'+style+'\" /\\x3e\\x3c/svg\\x3e',w:s2,h:s2}},setStyle:function(style){L.Util.setOptions(this,style);this.createIcon()}}),CompassMarker=LocationMarker.extend({initialize:function(latlng,heading,options){L.Util.setOptions(this,\noptions);this._latlng=latlng;this._heading=heading;this.createIcon()},setHeading:function(heading){this._heading=heading},_getIconSVG:function(options,style){var w=options.width+options.weight,h=2*(options.radius+options.depth+options.weight);return{className:\"leaflet-control-locate-heading\",svg:'\\x3csvg xmlns\\x3d\"http://www.w3.org/2000/svg\" width\\x3d\"'+w+'\" height\\x3d\"'+h+'\" version\\x3d\"1.1\" viewBox\\x3d\"-'+w/2+\" 0 \"+w+\" \"+h+'\" style\\x3d\"transform: rotate('+(this._heading+'deg)\"\\x3e\\x3cpath d\\x3d\"M0,0 l')+\n(options.width/2+\",\"+options.depth+\" l-\"+w+',0 z\" style\\x3d\"')+style+'\" /\\x3e\\x3c/svg\\x3e',w,h}}});LocationMarker=L.Control.extend({options:{position:\"topleft\",layer:void 0,setView:\"untilPanOrZoom\",keepCurrentZoomLevel:!1,initialZoomLevel:!1,getLocationBounds:function(locationEvent){return locationEvent.bounds},flyTo:!1,clickBehavior:{inView:\"stop\",outOfView:\"setView\",inViewNotFollowing:\"inView\"},returnToPrevBounds:!1,cacheLocation:!0,drawCircle:!0,drawMarker:!0,showCompass:!0,markerClass:LocationMarker,\ncompassClass:CompassMarker,circleStyle:{className:\"leaflet-control-locate-circle\",color:\"#136AEC\",fillColor:\"#136AEC\",fillOpacity:.15,weight:0},markerStyle:{className:\"leaflet-control-locate-marker\",color:\"#fff\",fillColor:\"#2A93EE\",fillOpacity:1,weight:3,opacity:1,radius:9},compassStyle:{fillColor:\"#2A93EE\",fillOpacity:1,weight:0,color:\"#fff\",opacity:1,radius:9,width:9,depth:6},followCircleStyle:{},followMarkerStyle:{},followCompassStyle:{},icon:\"fa fa-map-marker\",iconLoading:\"fa fa-spinner fa-spin\",\niconElementTag:\"span\",textElementTag:\"small\",circlePadding:[0,0],metric:!0,createButtonCallback:function(container,options){container=L.DomUtil.create(\"a\",\"leaflet-bar-part leaflet-bar-part-single\",container);container.title=options.strings.title;container.role=\"button\";container.href=\"#\";var icon=L.DomUtil.create(options.iconElementTag,options.icon,container);void 0!==options.strings.text&&(L.DomUtil.create(options.textElementTag,\"leaflet-locate-text\",container).textContent=options.strings.text,\ncontainer.classList.add(\"leaflet-locate-text-active\"),container.parentNode.style.display=\"flex\",0<options.icon.length&&icon.classList.add(\"leaflet-locate-icon\"));return{link:container,icon}},onLocationError:function(err,control){alert(err.message)},onLocationOutsideMapBounds:function(control){control.stop();alert(control.options.strings.outsideMapBoundsMsg)},showPopup:!0,strings:{title:\"Show me where I am\",metersUnit:\"meters\",feetUnit:\"feet\",popup:\"You are within {distance} {unit} from this point\",\noutsideMapBoundsMsg:\"You seem located outside the boundaries of the map\"},locateOptions:{maxZoom:Infinity,watch:!0,setView:!1}},initialize:function(options){for(var i in options)\"object\"===typeof this.options[i]?L.extend(this.options[i],options[i]):this.options[i]=options[i];this.options.followMarkerStyle=L.extend({},this.options.markerStyle,this.options.followMarkerStyle);this.options.followCircleStyle=L.extend({},this.options.circleStyle,this.options.followCircleStyle);this.options.followCompassStyle=\nL.extend({},this.options.compassStyle,this.options.followCompassStyle)},onAdd:function(map){var container=L.DomUtil.create(\"div\",\"leaflet-control-locate leaflet-bar leaflet-control\");this._container=container;this._map=map;this._layer=this.options.layer||new L.LayerGroup;this._layer.addTo(map);this._event=void 0;this._prevBounds=this._compassHeading=null;map=this.options.createButtonCallback(container,this.options);this._link=map.link;this._icon=map.icon;L.DomEvent.on(this._link,\"click\",function(ev){L.DomEvent.stopPropagation(ev);\nL.DomEvent.preventDefault(ev);this._onClick()},this).on(this._link,\"dblclick\",L.DomEvent.stopPropagation);this._resetVariables();this._map.on(\"unload\",this._unload,this);return container},_onClick:function(){this._justClicked=!0;var wasFollowing=this._isFollowing();this._userZoomed=this._userPanned=!1;if(this._active&&!this._event)this.stop();else if(this._active){var behaviors=this.options.clickBehavior,behavior=behaviors.outOfView;this._map.getBounds().contains(this._event.latlng)&&(behavior=wasFollowing?\nbehaviors.inView:behaviors.inViewNotFollowing);behaviors[behavior]&&(behavior=behaviors[behavior]);switch(behavior){case \"setView\":this.setView();break;case \"stop\":this.stop(),this.options.returnToPrevBounds&&(this.options.flyTo?this._map.flyToBounds:this._map.fitBounds).bind(this._map)(this._prevBounds)}}else this.options.returnToPrevBounds&&(this._prevBounds=this._map.getBounds()),this.start();this._updateContainerStyle()},start:function(){this._activate();this._event&&(this._drawMarker(this._map),\nthis.options.setView&&this.setView());this._updateContainerStyle()},stop:function(){this._deactivate();this._cleanClasses();this._resetVariables();this._removeMarker()},stopFollowing:function(){this._userPanned=!0;this._updateContainerStyle();this._drawMarker()},_activate:function(){if(!this._active&&(this._map.locate(this.options.locateOptions),this._map.fire(\"locateactivate\",this),this._active=!0,this._map.on(\"locationfound\",this._onLocationFound,this),this._map.on(\"locationerror\",this._onLocationError,\nthis),this._map.on(\"dragstart\",this._onDrag,this),this._map.on(\"zoomstart\",this._onZoom,this),this._map.on(\"zoomend\",this._onZoomEnd,this),this.options.showCompass)){var oriAbs=\"ondeviceorientationabsolute\"in window;if(oriAbs||\"ondeviceorientation\"in window){var _this=this,deviceorientation=function(){L.DomEvent.on(window,oriAbs?\"deviceorientationabsolute\":\"deviceorientation\",_this._onDeviceOrientation,_this)};DeviceOrientationEvent&&\"function\"===typeof DeviceOrientationEvent.requestPermission?DeviceOrientationEvent.requestPermission().then(function(permissionState){\"granted\"===\npermissionState&&deviceorientation()}):deviceorientation()}}},_deactivate:function(){this._map.stopLocate();this._map.fire(\"locatedeactivate\",this);this._active=!1;this.options.cacheLocation||(this._event=void 0);this._map.off(\"locationfound\",this._onLocationFound,this);this._map.off(\"locationerror\",this._onLocationError,this);this._map.off(\"dragstart\",this._onDrag,this);this._map.off(\"zoomstart\",this._onZoom,this);this._map.off(\"zoomend\",this._onZoomEnd,this);this.options.showCompass&&(this._compassHeading=\nnull,\"ondeviceorientationabsolute\"in window?L.DomEvent.off(window,\"deviceorientationabsolute\",this._onDeviceOrientation,this):\"ondeviceorientation\"in window&&L.DomEvent.off(window,\"deviceorientation\",this._onDeviceOrientation,this))},setView:function(){this._drawMarker();if(this._isOutsideMapBounds())this._event=void 0,this.options.onLocationOutsideMapBounds(this);else if(this._justClicked&&!1!==this.options.initialZoomLevel){var f=this.options.flyTo?this._map.flyTo:this._map.setView;f.bind(this._map)([this._event.latitude,\nthis._event.longitude],this.options.initialZoomLevel)}else this.options.keepCurrentZoomLevel?(f=this.options.flyTo?this._map.flyTo:this._map.panTo,f.bind(this._map)([this._event.latitude,this._event.longitude])):(f=this.options.flyTo?this._map.flyToBounds:this._map.fitBounds,this._ignoreEvent=!0,f.bind(this._map)(this.options.getLocationBounds(this._event),{padding:this.options.circlePadding,maxZoom:this.options.locateOptions.maxZoom}),L.Util.requestAnimFrame(function(){this._ignoreEvent=!1},this))},\n_drawCompass:function(){if(this._event){var latlng=this._event.latlng;if(this.options.showCompass&&latlng&&null!==this._compassHeading){var cStyle=this._isFollowing()?this.options.followCompassStyle:this.options.compassStyle;this._compass?(this._compass.setLatLng(latlng),this._compass.setHeading(this._compassHeading),this._compass.setStyle&&this._compass.setStyle(cStyle)):this._compass=(new this.options.compassClass(latlng,this._compassHeading,cStyle)).addTo(this._layer)}!this._compass||this.options.showCompass&&\nnull!==this._compassHeading||(this._compass.removeFrom(this._layer),this._compass=null)}},_drawMarker:function(){function getPopupText(){return\"string\"===typeof t?L.Util.template(t,{distance,unit}):\"function\"===typeof t?t({distance,unit}):t}void 0===this._event.accuracy&&(this._event.accuracy=0);var radius=this._event.accuracy,latlng=this._event.latlng;if(this.options.drawCircle){var style=this._isFollowing()?this.options.followCircleStyle:this.options.circleStyle;this._circle?this._circle.setLatLng(latlng).setRadius(radius).setStyle(style):\nthis._circle=L.circle(latlng,radius,style).addTo(this._layer)}if(this.options.metric){var distance=radius.toFixed(0);var unit=this.options.strings.metersUnit}else distance=(3.2808399*radius).toFixed(0),unit=this.options.strings.feetUnit;this.options.drawMarker&&(radius=this._isFollowing()?this.options.followMarkerStyle:this.options.markerStyle,this._marker?(this._marker.setLatLng(latlng),this._marker.setStyle&&this._marker.setStyle(radius)):this._marker=(new this.options.markerClass(latlng,radius)).addTo(this._layer));\nthis._drawCompass();var t=this.options.strings.popup;this.options.showPopup&&t&&this._marker&&this._marker.bindPopup(getPopupText())._popup.setLatLng(latlng);this.options.showPopup&&t&&this._compass&&this._compass.bindPopup(getPopupText())._popup.setLatLng(latlng)},_removeMarker:function(){this._layer.clearLayers();this._circle=this._marker=void 0},_unload:function(){this.stop();this._map.off(\"unload\",this._unload,this)},_setCompassHeading:function(angle){!isNaN(parseFloat(angle))&&isFinite(angle)?\n(this._compassHeading=angle=Math.round(angle),L.Util.requestAnimFrame(this._drawCompass,this)):this._compassHeading=null},_onCompassNeedsCalibration:function(){this._setCompassHeading()},_onDeviceOrientation:function(e){this._active&&(e.webkitCompassHeading?this._setCompassHeading(e.webkitCompassHeading):e.absolute&&e.alpha&&this._setCompassHeading(360-e.alpha))},_onLocationError:function(err){3==err.code&&this.options.locateOptions.watch||(this.stop(),this.options.onLocationError(err,this))},_onLocationFound:function(e){if((!this._event||\nthis._event.latlng.lat!==e.latlng.lat||this._event.latlng.lng!==e.latlng.lng||this._event.accuracy!==e.accuracy)&&this._active){this._event=e;this._drawMarker();this._updateContainerStyle();switch(this.options.setView){case \"once\":this._justClicked&&this.setView();break;case \"untilPan\":this._userPanned||this.setView();break;case \"untilPanOrZoom\":this._userPanned||this._userZoomed||this.setView();break;case \"always\":this.setView()}this._justClicked=!1}},_onDrag:function(){this._event&&!this._ignoreEvent&&\n(this._userPanned=!0,this._updateContainerStyle(),this._drawMarker())},_onZoom:function(){this._event&&!this._ignoreEvent&&(this._userZoomed=!0,this._updateContainerStyle(),this._drawMarker())},_onZoomEnd:function(){this._event&&this._drawCompass();this._event&&!this._ignoreEvent&&this._marker&&!this._map.getBounds().pad(-.3).contains(this._marker.getLatLng())&&(this._userPanned=!0,this._updateContainerStyle(),this._drawMarker())},_isFollowing:function(){if(!this._active)return!1;if(\"always\"===this.options.setView)return!0;\nif(\"untilPan\"===this.options.setView)return!this._userPanned;if(\"untilPanOrZoom\"===this.options.setView)return!this._userPanned&&!this._userZoomed},_isOutsideMapBounds:function(){return void 0===this._event?!1:this._map.options.maxBounds&&!this._map.options.maxBounds.contains(this._event.latlng)},_updateContainerStyle:function(){this._container&&(this._active&&!this._event?this._setClasses(\"requesting\"):this._isFollowing()?this._setClasses(\"following\"):this._active?this._setClasses(\"active\"):this._cleanClasses())},\n_setClasses:function(state){\"requesting\"==state?(removeClasses(this._container,\"active following\"),addClasses(this._container,\"requesting\"),removeClasses(this._icon,this.options.icon),addClasses(this._icon,this.options.iconLoading)):\"active\"==state?(removeClasses(this._container,\"requesting following\"),addClasses(this._container,\"active\"),removeClasses(this._icon,this.options.iconLoading),addClasses(this._icon,this.options.icon)):\"following\"==state&&(removeClasses(this._container,\"requesting\"),addClasses(this._container,\n\"active following\"),removeClasses(this._icon,this.options.iconLoading),addClasses(this._icon,this.options.icon))},_cleanClasses:function(){L.DomUtil.removeClass(this._container,\"requesting\");L.DomUtil.removeClass(this._container,\"active\");L.DomUtil.removeClass(this._container,\"following\");removeClasses(this._icon,this.options.iconLoading);addClasses(this._icon,this.options.icon)},_resetVariables:function(){this._userZoomed=this._userPanned=this._justClicked=this._active=!1}});L.control.locate=function(options){return new L.Control.Locate(options)};\nreturn LocationMarker},window)}","~:source","shadow$provide[\"module$node_modules$leaflet_DOT_locatecontrol$src$L_Control_Locate\"] = function(global,require,module,exports) {\n/*!\nCopyright (c) 2016 Dominik Moritz\n\nThis file is part of the leaflet locate control. It is licensed under the MIT license.\nYou can find the project at: https://github.com/domoritz/leaflet-locatecontrol\n*/\n(function (factory, window) {\n     // see https://github.com/Leaflet/Leaflet/blob/master/PLUGIN-GUIDE.md#module-loaders\n     // for details on how to structure a leaflet plugin.\n\n    // define an AMD module that relies on 'leaflet'\n    if (typeof define === 'function' && define.amd) {\n        define(['leaflet'], factory);\n\n    // define a Common JS module that relies on 'leaflet'\n    } else if (typeof exports === 'object') {\n        if (typeof window !== 'undefined' && window.L) {\n            module.exports = factory(L);\n        } else {\n            module.exports = factory(require('leaflet'));\n        }\n    }\n\n    // attach your plugin to the global 'L' variable\n    if (typeof window !== 'undefined' && window.L){\n        window.L.Control.Locate = factory(L);\n    }\n} (function (L) {\n    var LDomUtilApplyClassesMethod = function(method, element, classNames) {\n        classNames = classNames.split(' ');\n        classNames.forEach(function(className) {\n            L.DomUtil[method].call(this, element, className);\n        });\n    };\n\n    var addClasses = function(el, names) { LDomUtilApplyClassesMethod('addClass', el, names); };\n    var removeClasses = function(el, names) { LDomUtilApplyClassesMethod('removeClass', el, names); };\n\n    /**\n     * Compatible with L.Circle but a true marker instead of a path\n     */\n    var LocationMarker = L.Marker.extend({\n        initialize: function (latlng, options) {\n            L.Util.setOptions(this, options);\n            this._latlng = latlng;\n            this.createIcon();\n        },\n\n        /**\n         * Create a styled circle location marker\n         */\n        createIcon: function() {\n            var opt = this.options;\n\n            var style = '';\n\n            if (opt.color !== undefined) {\n                style += 'stroke:'+opt.color+';';\n            }\n            if (opt.weight !== undefined) {\n                style += 'stroke-width:'+opt.weight+';';\n            }\n            if (opt.fillColor !== undefined) {\n                style += 'fill:'+opt.fillColor+';';\n            }\n            if (opt.fillOpacity !== undefined) {\n                style += 'fill-opacity:'+opt.fillOpacity+';';\n            }\n            if (opt.opacity !== undefined) {\n                style += 'opacity:'+opt.opacity+';';\n            }\n\n            var icon = this._getIconSVG(opt, style);\n\n            this._locationIcon = L.divIcon({\n                className: icon.className,\n                html: icon.svg,\n                iconSize: [icon.w,icon.h],\n            });\n\n            this.setIcon(this._locationIcon);\n        },\n\n        /**\n         * Return the raw svg for the shape\n         *\n         * Split so can be easily overridden\n         */\n        _getIconSVG: function(options, style) {\n            var r = options.radius;\n            var w = options.weight;\n            var s = r + w;\n            var s2 = s * 2;\n            var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"'+s2+'\" height=\"'+s2+'\" version=\"1.1\" viewBox=\"-'+s+' -'+s+' '+s2+' '+s2+'\">' +\n            '<circle r=\"'+r+'\" style=\"'+style+'\" />' +\n            '</svg>';\n            return {\n                className: 'leaflet-control-locate-location',\n                svg: svg,\n                w: s2,\n                h: s2\n            };\n        },\n\n        setStyle: function(style) {\n            L.Util.setOptions(this, style);\n            this.createIcon();\n        }\n    });\n\n    var CompassMarker = LocationMarker.extend({\n        initialize: function (latlng, heading, options) {\n            L.Util.setOptions(this, options);\n            this._latlng = latlng;\n            this._heading = heading;\n            this.createIcon();\n        },\n\n        setHeading: function(heading) {\n            this._heading = heading;\n        },\n\n        /**\n         * Create a styled arrow compass marker\n         */\n        _getIconSVG: function(options, style) {\n            var r = options.radius;\n            var w = (options.width + options.weight);\n            var h = (r+options.depth + options.weight)*2;\n            var path = 'M0,0 l'+(options.width/2)+','+options.depth+' l-'+(w)+',0 z';\n            var svgstyle = 'transform: rotate('+this._heading+'deg)';\n            var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"'+(w)+'\" height=\"'+h+'\" version=\"1.1\" viewBox=\"-'+(w/2)+' 0 '+w+' '+h+'\" style=\"'+svgstyle+'\">'+\n            '<path d=\"'+path+'\" style=\"'+style+'\" />'+\n            '</svg>';\n            return {\n                className: 'leaflet-control-locate-heading',\n                svg: svg,\n                w: w,\n                h: h\n            };\n        },\n    });\n\n\n    var LocateControl = L.Control.extend({\n        options: {\n            /** Position of the control */\n            position: 'topleft',\n            /** The layer that the user's location should be drawn on. By default creates a new layer. */\n            layer: undefined,\n            /**\n             * Automatically sets the map view (zoom and pan) to the user's location as it updates.\n             * While the map is following the user's location, the control is in the `following` state,\n             * which changes the style of the control and the circle marker.\n             *\n             * Possible values:\n             *  - false: never updates the map view when location changes.\n             *  - 'once': set the view when the location is first determined\n             *  - 'always': always updates the map view when location changes.\n             *              The map view follows the user's location.\n             *  - 'untilPan': like 'always', except stops updating the\n             *                view if the user has manually panned the map.\n             *                The map view follows the user's location until she pans.\n             *  - 'untilPanOrZoom': (default) like 'always', except stops updating the\n             *                view if the user has manually panned the map.\n             *                The map view follows the user's location until she pans.\n             */\n            setView: 'untilPanOrZoom',\n            /** Keep the current map zoom level when setting the view and only pan. */\n            keepCurrentZoomLevel: false,\n\t    /** After activating the plugin by clicking on the icon, zoom to the selected zoom level, even when keepCurrentZoomLevel is true. Set to 'false' to disable this feature. */\n\t    initialZoomLevel: false,\n            /**\n             * This callback can be used to override the viewport tracking\n             * This function should return a LatLngBounds object.\n             *\n             * For example to extend the viewport to ensure that a particular LatLng is visible:\n             *\n             * getLocationBounds: function(locationEvent) {\n             *    return locationEvent.bounds.extend([-33.873085, 151.219273]);\n             * },\n             */\n            getLocationBounds: function (locationEvent) {\n                return locationEvent.bounds;\n            },\n            /** Smooth pan and zoom to the location of the marker. Only works in Leaflet 1.0+. */\n            flyTo: false,\n            /**\n             * The user location can be inside and outside the current view when the user clicks on the\n             * control that is already active. Both cases can be configures separately.\n             * Possible values are:\n             *  - 'setView': zoom and pan to the current location\n             *  - 'stop': stop locating and remove the location marker\n             */\n            clickBehavior: {\n                /** What should happen if the user clicks on the control while the location is within the current view. */\n                inView: 'stop',\n                /** What should happen if the user clicks on the control while the location is outside the current view. */\n                outOfView: 'setView',\n                /**\n                 * What should happen if the user clicks on the control while the location is within the current view\n                 * and we could be following but are not. Defaults to a special value which inherits from 'inView';\n                 */\n                inViewNotFollowing: 'inView',\n            },\n            /**\n             * If set, save the map bounds just before centering to the user's\n             * location. When control is disabled, set the view back to the\n             * bounds that were saved.\n             */\n            returnToPrevBounds: false,\n            /**\n             * Keep a cache of the location after the user deactivates the control. If set to false, the user has to wait\n             * until the locate API returns a new location before they see where they are again.\n             */\n            cacheLocation: true,\n            /** If set, a circle that shows the location accuracy is drawn. */\n            drawCircle: true,\n            /** If set, the marker at the users' location is drawn. */\n            drawMarker: true,\n            /** If set and supported then show the compass heading */\n            showCompass: true,\n            /** The class to be used to create the marker. For example L.CircleMarker or L.Marker */\n            markerClass: LocationMarker,\n            /** The class us be used to create the compass bearing arrow */\n            compassClass: CompassMarker,\n            /** Accuracy circle style properties. NOTE these styles should match the css animations styles */\n            circleStyle: {\n                className:   'leaflet-control-locate-circle',\n                color:       '#136AEC',\n                fillColor:   '#136AEC',\n                fillOpacity: 0.15,\n                weight:      0\n            },\n            /** Inner marker style properties. Only works if your marker class supports `setStyle`. */\n            markerStyle: {\n                className:   'leaflet-control-locate-marker',\n                color:       '#fff',\n                fillColor:   '#2A93EE',\n                fillOpacity: 1,\n                weight:      3,\n                opacity:     1,\n                radius:      9\n            },\n            /** Compass */\n            compassStyle: {\n                fillColor:   '#2A93EE',\n                fillOpacity: 1,\n                weight:      0,\n                color:       '#fff',\n                opacity:     1,\n                radius:      9, // How far is the arrow is from the center of of the marker\n                width:       9, // Width of the arrow\n                depth:       6  // Length of the arrow\n            },\n            /**\n             * Changes to accuracy circle and inner marker while following.\n             * It is only necessary to provide the properties that should change.\n             */\n            followCircleStyle: {},\n            followMarkerStyle: {\n                // color: '#FFA500',\n                // fillColor: '#FFB000'\n            },\n            followCompassStyle: {},\n            /** The CSS class for the icon. For example fa-location-arrow or fa-map-marker */\n            icon: 'fa fa-map-marker',\n            iconLoading: 'fa fa-spinner fa-spin',\n            /** The element to be created for icons. For example span or i */\n            iconElementTag: 'span',\n            /** The element to be created for the text. For example small or span */\n            textElementTag: 'small',\n            /** Padding around the accuracy circle. */\n            circlePadding: [0, 0],\n            /** Use metric units. */\n            metric: true,\n            /**\n             * This callback can be used in case you would like to override button creation behavior.\n             * This is useful for DOM manipulation frameworks such as angular etc.\n             * This function should return an object with HtmlElement for the button (link property) and the icon (icon property).\n             */\n            createButtonCallback: function (container, options) {\n                var link = L.DomUtil.create('a', 'leaflet-bar-part leaflet-bar-part-single', container);\n                link.title = options.strings.title;\n                link.role = 'button';\n                link.href = '#';\n                var icon = L.DomUtil.create(options.iconElementTag, options.icon, link);\n\n                if (options.strings.text !== undefined) {\n                    var text = L.DomUtil.create(options.textElementTag, 'leaflet-locate-text', link);\n                    text.textContent = options.strings.text;\n\t\t            link.classList.add('leaflet-locate-text-active');\n                    link.parentNode.style.display = \"flex\";\n                    if (options.icon.length > 0) {\n                        icon.classList.add('leaflet-locate-icon');\n                    }\n                }\n                \n                return { link: link, icon: icon };\n            },\n            /** This event is called in case of any location error that is not a time out error. */\n            onLocationError: function(err, control) {\n                alert(err.message);\n            },\n            /**\n             * This event is called when the user's location is outside the bounds set on the map.\n             * The event is called repeatedly when the location changes.\n             */\n            onLocationOutsideMapBounds: function(control) {\n                control.stop();\n                alert(control.options.strings.outsideMapBoundsMsg);\n            },\n            /** Display a pop-up when the user click on the inner marker. */\n            showPopup: true,\n            strings: {\n                title: \"Show me where I am\",\n                metersUnit: \"meters\",\n                feetUnit: \"feet\",\n                popup: \"You are within {distance} {unit} from this point\",\n                outsideMapBoundsMsg: \"You seem located outside the boundaries of the map\"\n            },\n            /** The default options passed to leaflets locate method. */\n            locateOptions: {\n                maxZoom: Infinity,\n                watch: true,  // if you overwrite this, visualization cannot be updated\n                setView: false // have to set this to false because we have to\n                               // do setView manually\n            }\n        },\n\n        initialize: function (options) {\n            // set default options if nothing is set (merge one step deep)\n            for (var i in options) {\n                if (typeof this.options[i] === 'object') {\n                    L.extend(this.options[i], options[i]);\n                } else {\n                    this.options[i] = options[i];\n                }\n            }\n\n            // extend the follow marker style and circle from the normal style\n            this.options.followMarkerStyle = L.extend({}, this.options.markerStyle, this.options.followMarkerStyle);\n            this.options.followCircleStyle = L.extend({}, this.options.circleStyle, this.options.followCircleStyle);\n            this.options.followCompassStyle = L.extend({}, this.options.compassStyle, this.options.followCompassStyle);\n        },\n\n        /**\n         * Add control to map. Returns the container for the control.\n         */\n        onAdd: function (map) {\n            var container = L.DomUtil.create('div',\n                'leaflet-control-locate leaflet-bar leaflet-control');\n            this._container = container;\n            this._map = map;\n            this._layer = this.options.layer || new L.LayerGroup();\n            this._layer.addTo(map);\n            this._event = undefined;\n            this._compassHeading = null;\n            this._prevBounds = null;\n\n            var linkAndIcon = this.options.createButtonCallback(container, this.options);\n            this._link = linkAndIcon.link;\n            this._icon = linkAndIcon.icon;\n\n            L.DomEvent.on(\n              this._link,\n              \"click\",\n              function (ev) {\n                L.DomEvent.stopPropagation(ev);\n                L.DomEvent.preventDefault(ev);\n                this._onClick();\n              },\n              this\n            ).on(this._link, \"dblclick\", L.DomEvent.stopPropagation);\n\n            this._resetVariables();\n\n            this._map.on('unload', this._unload, this);\n\n            return container;\n        },\n\n        /**\n         * This method is called when the user clicks on the control.\n         */\n        _onClick: function() {\n            this._justClicked = true;\n            var wasFollowing =  this._isFollowing();\n            this._userPanned = false;\n            this._userZoomed = false;\n\n            if (this._active && !this._event) {\n                // click while requesting\n                this.stop();\n            } else if (this._active) {\n                var behaviors = this.options.clickBehavior;\n                var behavior = behaviors.outOfView;\n                if (this._map.getBounds().contains(this._event.latlng)) {\n                    behavior = wasFollowing ? behaviors.inView : behaviors.inViewNotFollowing;\n                }\n\n                // Allow inheriting from another behavior\n                if (behaviors[behavior]) {\n                    behavior = behaviors[behavior];\n                }\n\n                switch (behavior) {\n                    case 'setView':\n                        this.setView();\n                        break;\n                    case 'stop':\n                        this.stop();\n                        if (this.options.returnToPrevBounds) {\n                            var f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\n                            f.bind(this._map)(this._prevBounds);\n                        }\n                        break;\n                }\n            } else {\n                if (this.options.returnToPrevBounds) {\n                  this._prevBounds = this._map.getBounds();\n                }\n                this.start();\n            }\n\n            this._updateContainerStyle();\n        },\n\n        /**\n         * Starts the plugin:\n         * - activates the engine\n         * - draws the marker (if coordinates available)\n         */\n        start: function() {\n            this._activate();\n\n            if (this._event) {\n                this._drawMarker(this._map);\n\n                // if we already have a location but the user clicked on the control\n                if (this.options.setView) {\n                    this.setView();\n                }\n            }\n            this._updateContainerStyle();\n        },\n\n        /**\n         * Stops the plugin:\n         * - deactivates the engine\n         * - reinitializes the button\n         * - removes the marker\n         */\n        stop: function() {\n            this._deactivate();\n\n            this._cleanClasses();\n            this._resetVariables();\n\n            this._removeMarker();\n        },\n\n        /**\n         * Keep the control active but stop following the location\n         */\n        stopFollowing: function() {\n            this._userPanned = true;\n            this._updateContainerStyle();\n            this._drawMarker();\n        },\n\n        /**\n         * This method launches the location engine.\n         * It is called before the marker is updated,\n         * event if it does not mean that the event will be ready.\n         *\n         * Override it if you want to add more functionalities.\n         * It should set the this._active to true and do nothing if\n         * this._active is true.\n         */\n        _activate: function() {\n            if (!this._active) {\n                this._map.locate(this.options.locateOptions);\n                this._map.fire('locateactivate', this);\n                this._active = true;\n\n                // bind event listeners\n                this._map.on('locationfound', this._onLocationFound, this);\n                this._map.on('locationerror', this._onLocationError, this);\n                this._map.on('dragstart', this._onDrag, this);\n                this._map.on('zoomstart', this._onZoom, this);\n                this._map.on('zoomend', this._onZoomEnd, this);\n                if (this.options.showCompass) {\n                    var oriAbs = 'ondeviceorientationabsolute' in window;\n                    if (oriAbs || ('ondeviceorientation' in window)) {\n                        var _this = this;\n                        var deviceorientation = function () {\n                            L.DomEvent.on(window, oriAbs ? 'deviceorientationabsolute' : 'deviceorientation', _this._onDeviceOrientation, _this);\n                        };\n                        if (DeviceOrientationEvent && typeof DeviceOrientationEvent.requestPermission === 'function') {\n                            DeviceOrientationEvent.requestPermission().then(function (permissionState) {\n                                if (permissionState === 'granted') {\n                                    deviceorientation();\n                                }\n                            });\n                        } else {\n                            deviceorientation();\n                        }\n                    }\n                }\n            }\n        },\n\n        /**\n         * Called to stop the location engine.\n         *\n         * Override it to shutdown any functionalities you added on start.\n         */\n        _deactivate: function() {\n            this._map.stopLocate();\n            this._map.fire('locatedeactivate', this);\n            this._active = false;\n\n            if (!this.options.cacheLocation) {\n                this._event = undefined;\n            }\n\n            // unbind event listeners\n            this._map.off('locationfound', this._onLocationFound, this);\n            this._map.off('locationerror', this._onLocationError, this);\n            this._map.off('dragstart', this._onDrag, this);\n            this._map.off('zoomstart', this._onZoom, this);\n            this._map.off('zoomend', this._onZoomEnd, this);\n            if (this.options.showCompass) {\n                this._compassHeading = null;\n                if ('ondeviceorientationabsolute' in window) {\n                    L.DomEvent.off(window, 'deviceorientationabsolute', this._onDeviceOrientation, this);\n                } else if ('ondeviceorientation' in window) {\n                    L.DomEvent.off(window, 'deviceorientation', this._onDeviceOrientation, this);\n                }\n            }\n        },\n\n        /**\n         * Zoom (unless we should keep the zoom level) and an to the current view.\n         */\n        setView: function() {\n            this._drawMarker();\n            if (this._isOutsideMapBounds()) {\n                this._event = undefined;  // clear the current location so we can get back into the bounds\n                this.options.onLocationOutsideMapBounds(this);\n            } else {\n\t\tif (this._justClicked && this.options.initialZoomLevel !== false) {\n                    var f = this.options.flyTo ? this._map.flyTo : this._map.setView;\n                    f.bind(this._map)([this._event.latitude, this._event.longitude], this.options.initialZoomLevel);\n\t\t} else\n                if (this.options.keepCurrentZoomLevel) {\n                    var f = this.options.flyTo ? this._map.flyTo : this._map.panTo;\n                    f.bind(this._map)([this._event.latitude, this._event.longitude]);\n                } else {\n                    var f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\n                    // Ignore zoom events while setting the viewport as these would stop following\n                    this._ignoreEvent = true;\n                    f.bind(this._map)(this.options.getLocationBounds(this._event), {\n                        padding: this.options.circlePadding,\n                        maxZoom: this.options.locateOptions.maxZoom\n                    });\n                    L.Util.requestAnimFrame(function(){\n                        // Wait until after the next animFrame because the flyTo can be async\n                        this._ignoreEvent = false;\n                    }, this);\n\n                }\n            }\n        },\n\n        /**\n         *\n         */\n        _drawCompass: function() {\n            if (!this._event) {\n                return;\n            }\n\n            var latlng = this._event.latlng;\n\n            if (this.options.showCompass && latlng && this._compassHeading !== null) {\n                var cStyle = this._isFollowing() ? this.options.followCompassStyle : this.options.compassStyle;\n                if (!this._compass) {\n                    this._compass = new this.options.compassClass(latlng, this._compassHeading, cStyle).addTo(this._layer);\n                } else {\n                    this._compass.setLatLng(latlng);\n                    this._compass.setHeading(this._compassHeading);\n                    // If the compassClass can be updated with setStyle, update it.\n                    if (this._compass.setStyle) {\n                        this._compass.setStyle(cStyle);\n                    }\n                }\n                // \n            }\n            if (this._compass && (!this.options.showCompass || this._compassHeading === null)) {\n                this._compass.removeFrom(this._layer);\n                this._compass = null;\n            }\n        },\n\n        /**\n         * Draw the marker and accuracy circle on the map.\n         *\n         * Uses the event retrieved from onLocationFound from the map.\n         */\n        _drawMarker: function() {\n            if (this._event.accuracy === undefined) {\n                this._event.accuracy = 0;\n            }\n\n            var radius = this._event.accuracy;\n            var latlng = this._event.latlng;\n\n            // circle with the radius of the location's accuracy\n            if (this.options.drawCircle) {\n                var style = this._isFollowing() ? this.options.followCircleStyle : this.options.circleStyle;\n\n                if (!this._circle) {\n                    this._circle = L.circle(latlng, radius, style).addTo(this._layer);\n                } else {\n                    this._circle.setLatLng(latlng).setRadius(radius).setStyle(style);\n                }\n            }\n\n            var distance, unit;\n            if (this.options.metric) {\n                distance = radius.toFixed(0);\n                unit =  this.options.strings.metersUnit;\n            } else {\n                distance = (radius * 3.2808399).toFixed(0);\n                unit = this.options.strings.feetUnit;\n            }\n\n            // small inner marker\n            if (this.options.drawMarker) {\n                var mStyle = this._isFollowing() ? this.options.followMarkerStyle : this.options.markerStyle;\n                if (!this._marker) {\n                    this._marker = new this.options.markerClass(latlng, mStyle).addTo(this._layer);\n                } else {\n                    this._marker.setLatLng(latlng);\n                    // If the markerClass can be updated with setStyle, update it.\n                    if (this._marker.setStyle) {\n                        this._marker.setStyle(mStyle);\n                    }\n                }\n            }\n\n            this._drawCompass();\n\n            var t = this.options.strings.popup;\n            function getPopupText() {\n                if (typeof t === 'string') {\n                    return L.Util.template(t, {distance: distance, unit: unit});\n                } else if (typeof t === 'function') {\n                    return t({distance: distance, unit: unit});\n                } else {\n                    return t;\n                }\n            }\n            if (this.options.showPopup && t && this._marker) {\n                this._marker\n                    .bindPopup(getPopupText())\n                    ._popup.setLatLng(latlng);\n            }\n            if (this.options.showPopup && t && this._compass) {\n                this._compass\n                    .bindPopup(getPopupText())\n                    ._popup.setLatLng(latlng);\n            }\n        },\n\n        /**\n         * Remove the marker from map.\n         */\n        _removeMarker: function() {\n            this._layer.clearLayers();\n            this._marker = undefined;\n            this._circle = undefined;\n        },\n\n        /**\n         * Unload the plugin and all event listeners.\n         * Kind of the opposite of onAdd.\n         */\n        _unload: function() {\n            this.stop();\n            this._map.off('unload', this._unload, this);\n        },\n\n        /**\n         * Sets the compass heading\n         */\n        _setCompassHeading: function(angle) {\n            if (!isNaN(parseFloat(angle)) && isFinite(angle)) {\n                angle = Math.round(angle);\n\n                this._compassHeading = angle;\n                L.Util.requestAnimFrame(this._drawCompass, this);\n            } else {\n                this._compassHeading = null;\n            }\n        },\n\n        /**\n         * If the compass fails calibration just fail safely and remove the compass\n         */\n        _onCompassNeedsCalibration: function() {\n            this._setCompassHeading();\n        },\n\n        /**\n         * Process and normalise compass events\n         */\n        _onDeviceOrientation: function(e) {\n            if (!this._active) {\n                return;\n            }\n\n            if (e.webkitCompassHeading) {\n                // iOS\n                this._setCompassHeading(e.webkitCompassHeading);\n            } else if (e.absolute && e.alpha) {\n                // Android\n                this._setCompassHeading(360 - e.alpha)\n            }\n        },\n\n        /**\n         * Calls deactivate and dispatches an error.\n         */\n        _onLocationError: function(err) {\n            // ignore time out error if the location is watched\n            if (err.code == 3 && this.options.locateOptions.watch) {\n                return;\n            }\n\n            this.stop();\n            this.options.onLocationError(err, this);\n        },\n\n        /**\n         * Stores the received event and updates the marker.\n         */\n        _onLocationFound: function(e) {\n            // no need to do anything if the location has not changed\n            if (this._event &&\n                (this._event.latlng.lat === e.latlng.lat &&\n                 this._event.latlng.lng === e.latlng.lng &&\n                     this._event.accuracy === e.accuracy)) {\n                return;\n            }\n\n            if (!this._active) {\n                // we may have a stray event\n                return;\n            }\n\n            this._event = e;\n\n            this._drawMarker();\n            this._updateContainerStyle();\n\n            switch (this.options.setView) {\n                case 'once':\n                    if (this._justClicked) {\n                        this.setView();\n                    }\n                    break;\n                case 'untilPan':\n                    if (!this._userPanned) {\n                        this.setView();\n                    }\n                    break;\n                case 'untilPanOrZoom':\n                    if (!this._userPanned && !this._userZoomed) {\n                        this.setView();\n                    }\n                    break;\n                case 'always':\n                    this.setView();\n                    break;\n                case false:\n                    // don't set the view\n                    break;\n            }\n\n            this._justClicked = false;\n        },\n\n        /**\n         * When the user drags. Need a separate event so we can bind and unbind event listeners.\n         */\n        _onDrag: function() {\n            // only react to drags once we have a location\n            if (this._event && !this._ignoreEvent) {\n                this._userPanned = true;\n                this._updateContainerStyle();\n                this._drawMarker();\n            }\n        },\n\n        /**\n         * When the user zooms. Need a separate event so we can bind and unbind event listeners.\n         */\n        _onZoom: function() {\n            // only react to drags once we have a location\n            if (this._event && !this._ignoreEvent) {\n                this._userZoomed = true;\n                this._updateContainerStyle();\n                this._drawMarker();\n            }\n        },\n\n        /**\n         * After a zoom ends update the compass and handle sideways zooms\n         */\n        _onZoomEnd: function() {\n            if (this._event) {\n                this._drawCompass();\n            }\n\n            if (this._event && !this._ignoreEvent) {\n                // If we have zoomed in and out and ended up sideways treat it as a pan\n                if (this._marker && !this._map.getBounds().pad(-.3).contains(this._marker.getLatLng())) {\n                    this._userPanned = true;\n                    this._updateContainerStyle();\n                    this._drawMarker();\n                }\n            }\n        },\n\n        /**\n         * Compute whether the map is following the user location with pan and zoom.\n         */\n        _isFollowing: function() {\n            if (!this._active) {\n                return false;\n            }\n\n            if (this.options.setView === 'always') {\n                return true;\n            } else if (this.options.setView === 'untilPan') {\n                return !this._userPanned;\n            } else if (this.options.setView === 'untilPanOrZoom') {\n                return !this._userPanned && !this._userZoomed;\n            }\n        },\n\n        /**\n         * Check if location is in map bounds\n         */\n        _isOutsideMapBounds: function() {\n            if (this._event === undefined) {\n                return false;\n            }\n            return this._map.options.maxBounds &&\n                !this._map.options.maxBounds.contains(this._event.latlng);\n        },\n\n        /**\n         * Toggles button class between following and active.\n         */\n        _updateContainerStyle: function() {\n            if (!this._container) {\n                return;\n            }\n\n            if (this._active && !this._event) {\n                // active but don't have a location yet\n                this._setClasses('requesting');\n            } else if (this._isFollowing()) {\n                this._setClasses('following');\n            } else if (this._active) {\n                this._setClasses('active');\n            } else {\n                this._cleanClasses();\n            }\n        },\n\n        /**\n         * Sets the CSS classes for the state.\n         */\n        _setClasses: function(state) {\n            if (state == 'requesting') {\n                removeClasses(this._container, \"active following\");\n                addClasses(this._container, \"requesting\");\n\n                removeClasses(this._icon, this.options.icon);\n                addClasses(this._icon, this.options.iconLoading);\n            } else if (state == 'active') {\n                removeClasses(this._container, \"requesting following\");\n                addClasses(this._container, \"active\");\n\n                removeClasses(this._icon, this.options.iconLoading);\n                addClasses(this._icon, this.options.icon);\n            } else if (state == 'following') {\n                removeClasses(this._container, \"requesting\");\n                addClasses(this._container, \"active following\");\n\n                removeClasses(this._icon, this.options.iconLoading);\n                addClasses(this._icon, this.options.icon);\n            }\n        },\n\n        /**\n         * Removes all classes from button.\n         */\n        _cleanClasses: function() {\n            L.DomUtil.removeClass(this._container, \"requesting\");\n            L.DomUtil.removeClass(this._container, \"active\");\n            L.DomUtil.removeClass(this._container, \"following\");\n\n            removeClasses(this._icon, this.options.iconLoading);\n            addClasses(this._icon, this.options.icon);\n        },\n\n        /**\n         * Reinitializes state variables.\n         */\n        _resetVariables: function() {\n            // whether locate is active or not\n            this._active = false;\n\n            // true if the control was clicked for the first time\n            // we need this so we can pan and zoom once we have the location\n            this._justClicked = false;\n\n            // true if the user has panned the map after clicking the control\n            this._userPanned = false;\n\n            // true if the user has zoomed the map after clicking the control\n            this._userZoomed = false;\n        }\n    });\n\n    L.control.locate = function (options) {\n        return new L.Control.Locate(options);\n    };\n\n    return LocateControl;\n}, window));\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$leaflet$dist$leaflet_src"]],"~:properties",["^5",["_getIconSVG","_heading","markerClass","fillColor","_justClicked","stop","_ignoreEvent","_latlng","showCompass","circlePadding","iconSize","role","w","maxZoom","showPopup","popup","Locate","textElementTag","width","setHeading","followCompassStyle","locateOptions","strings","_onZoom","_deactivate","followCircleStyle","drawCircle","_onLocationFound","markerStyle","_onDeviceOrientation","returnToPrevBounds","_prevBounds","clickBehavior","className","_drawMarker","inViewNotFollowing","inView","_updateContainerStyle","textContent","radius","svg","padding","_setCompassHeading","_onDrag","compassStyle","_setClasses","_marker","onLocationError","_onLocationError","createIcon","watch","_icon","cacheLocation","position","_locationIcon","href","_event","getLocationBounds","_compassHeading","_link","_activate","start","keepCurrentZoomLevel","distance","_unload","_compass","feetUnit","stopFollowing","_removeMarker","_onZoomEnd","onLocationOutsideMapBounds","_onCompassNeedsCalibration","title","setStyle","link","iconElementTag","initialize","_onClick","compassClass","metric","depth","_active","_isFollowing","_drawCompass","_container","unit","display","fillOpacity","outOfView","onAdd","_map","flyTo","iconLoading","layer","_layer","h","html","followMarkerStyle","createButtonCallback","options","accuracy","_resetVariables","_circle","_userPanned","color","circleStyle","opacity","metersUnit","initialZoomLevel","outsideMapBoundsMsg","weight","setView","_userZoomed","_isOutsideMapBounds","_cleanClasses","drawMarker","locate","icon"]],"~:compiled-at",1627822785155,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$leaflet_DOT_locatecontrol$src$L_Control_Locate.js\",\n\"lineCount\":29,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/leaflet_DOT_locatecontrol/src/L.Control.Locate.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$leaflet_DOT_locatecontrol$src$L_Control_Locate\\\"] = function(global,require,module,exports) {\\n/*!\\nCopyright (c) 2016 Dominik Moritz\\n\\nThis file is part of the leaflet locate control. It is licensed under the MIT license.\\nYou can find the project at: https://github.com/domoritz/leaflet-locatecontrol\\n*/\\n(function (factory, window) {\\n     // see https://github.com/Leaflet/Leaflet/blob/master/PLUGIN-GUIDE.md#module-loaders\\n     // for details on how to structure a leaflet plugin.\\n\\n    // define an AMD module that relies on 'leaflet'\\n    if (typeof define === 'function' && define.amd) {\\n        define(['leaflet'], factory);\\n\\n    // define a Common JS module that relies on 'leaflet'\\n    } else if (typeof exports === 'object') {\\n        if (typeof window !== 'undefined' && window.L) {\\n            module.exports = factory(L);\\n        } else {\\n            module.exports = factory(require('leaflet'));\\n        }\\n    }\\n\\n    // attach your plugin to the global 'L' variable\\n    if (typeof window !== 'undefined' && window.L){\\n        window.L.Control.Locate = factory(L);\\n    }\\n} (function (L) {\\n    var LDomUtilApplyClassesMethod = function(method, element, classNames) {\\n        classNames = classNames.split(' ');\\n        classNames.forEach(function(className) {\\n            L.DomUtil[method].call(this, element, className);\\n        });\\n    };\\n\\n    var addClasses = function(el, names) { LDomUtilApplyClassesMethod('addClass', el, names); };\\n    var removeClasses = function(el, names) { LDomUtilApplyClassesMethod('removeClass', el, names); };\\n\\n    /**\\n     * Compatible with L.Circle but a true marker instead of a path\\n     */\\n    var LocationMarker = L.Marker.extend({\\n        initialize: function (latlng, options) {\\n            L.Util.setOptions(this, options);\\n            this._latlng = latlng;\\n            this.createIcon();\\n        },\\n\\n        /**\\n         * Create a styled circle location marker\\n         */\\n        createIcon: function() {\\n            var opt = this.options;\\n\\n            var style = '';\\n\\n            if (opt.color !== undefined) {\\n                style += 'stroke:'+opt.color+';';\\n            }\\n            if (opt.weight !== undefined) {\\n                style += 'stroke-width:'+opt.weight+';';\\n            }\\n            if (opt.fillColor !== undefined) {\\n                style += 'fill:'+opt.fillColor+';';\\n            }\\n            if (opt.fillOpacity !== undefined) {\\n                style += 'fill-opacity:'+opt.fillOpacity+';';\\n            }\\n            if (opt.opacity !== undefined) {\\n                style += 'opacity:'+opt.opacity+';';\\n            }\\n\\n            var icon = this._getIconSVG(opt, style);\\n\\n            this._locationIcon = L.divIcon({\\n                className: icon.className,\\n                html: icon.svg,\\n                iconSize: [icon.w,icon.h],\\n            });\\n\\n            this.setIcon(this._locationIcon);\\n        },\\n\\n        /**\\n         * Return the raw svg for the shape\\n         *\\n         * Split so can be easily overridden\\n         */\\n        _getIconSVG: function(options, style) {\\n            var r = options.radius;\\n            var w = options.weight;\\n            var s = r + w;\\n            var s2 = s * 2;\\n            var svg = '<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"'+s2+'\\\" height=\\\"'+s2+'\\\" version=\\\"1.1\\\" viewBox=\\\"-'+s+' -'+s+' '+s2+' '+s2+'\\\">' +\\n            '<circle r=\\\"'+r+'\\\" style=\\\"'+style+'\\\" />' +\\n            '</svg>';\\n            return {\\n                className: 'leaflet-control-locate-location',\\n                svg: svg,\\n                w: s2,\\n                h: s2\\n            };\\n        },\\n\\n        setStyle: function(style) {\\n            L.Util.setOptions(this, style);\\n            this.createIcon();\\n        }\\n    });\\n\\n    var CompassMarker = LocationMarker.extend({\\n        initialize: function (latlng, heading, options) {\\n            L.Util.setOptions(this, options);\\n            this._latlng = latlng;\\n            this._heading = heading;\\n            this.createIcon();\\n        },\\n\\n        setHeading: function(heading) {\\n            this._heading = heading;\\n        },\\n\\n        /**\\n         * Create a styled arrow compass marker\\n         */\\n        _getIconSVG: function(options, style) {\\n            var r = options.radius;\\n            var w = (options.width + options.weight);\\n            var h = (r+options.depth + options.weight)*2;\\n            var path = 'M0,0 l'+(options.width/2)+','+options.depth+' l-'+(w)+',0 z';\\n            var svgstyle = 'transform: rotate('+this._heading+'deg)';\\n            var svg = '<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"'+(w)+'\\\" height=\\\"'+h+'\\\" version=\\\"1.1\\\" viewBox=\\\"-'+(w/2)+' 0 '+w+' '+h+'\\\" style=\\\"'+svgstyle+'\\\">'+\\n            '<path d=\\\"'+path+'\\\" style=\\\"'+style+'\\\" />'+\\n            '</svg>';\\n            return {\\n                className: 'leaflet-control-locate-heading',\\n                svg: svg,\\n                w: w,\\n                h: h\\n            };\\n        },\\n    });\\n\\n\\n    var LocateControl = L.Control.extend({\\n        options: {\\n            /** Position of the control */\\n            position: 'topleft',\\n            /** The layer that the user's location should be drawn on. By default creates a new layer. */\\n            layer: undefined,\\n            /**\\n             * Automatically sets the map view (zoom and pan) to the user's location as it updates.\\n             * While the map is following the user's location, the control is in the `following` state,\\n             * which changes the style of the control and the circle marker.\\n             *\\n             * Possible values:\\n             *  - false: never updates the map view when location changes.\\n             *  - 'once': set the view when the location is first determined\\n             *  - 'always': always updates the map view when location changes.\\n             *              The map view follows the user's location.\\n             *  - 'untilPan': like 'always', except stops updating the\\n             *                view if the user has manually panned the map.\\n             *                The map view follows the user's location until she pans.\\n             *  - 'untilPanOrZoom': (default) like 'always', except stops updating the\\n             *                view if the user has manually panned the map.\\n             *                The map view follows the user's location until she pans.\\n             */\\n            setView: 'untilPanOrZoom',\\n            /** Keep the current map zoom level when setting the view and only pan. */\\n            keepCurrentZoomLevel: false,\\n\\t    /** After activating the plugin by clicking on the icon, zoom to the selected zoom level, even when keepCurrentZoomLevel is true. Set to 'false' to disable this feature. */\\n\\t    initialZoomLevel: false,\\n            /**\\n             * This callback can be used to override the viewport tracking\\n             * This function should return a LatLngBounds object.\\n             *\\n             * For example to extend the viewport to ensure that a particular LatLng is visible:\\n             *\\n             * getLocationBounds: function(locationEvent) {\\n             *    return locationEvent.bounds.extend([-33.873085, 151.219273]);\\n             * },\\n             */\\n            getLocationBounds: function (locationEvent) {\\n                return locationEvent.bounds;\\n            },\\n            /** Smooth pan and zoom to the location of the marker. Only works in Leaflet 1.0+. */\\n            flyTo: false,\\n            /**\\n             * The user location can be inside and outside the current view when the user clicks on the\\n             * control that is already active. Both cases can be configures separately.\\n             * Possible values are:\\n             *  - 'setView': zoom and pan to the current location\\n             *  - 'stop': stop locating and remove the location marker\\n             */\\n            clickBehavior: {\\n                /** What should happen if the user clicks on the control while the location is within the current view. */\\n                inView: 'stop',\\n                /** What should happen if the user clicks on the control while the location is outside the current view. */\\n                outOfView: 'setView',\\n                /**\\n                 * What should happen if the user clicks on the control while the location is within the current view\\n                 * and we could be following but are not. Defaults to a special value which inherits from 'inView';\\n                 */\\n                inViewNotFollowing: 'inView',\\n            },\\n            /**\\n             * If set, save the map bounds just before centering to the user's\\n             * location. When control is disabled, set the view back to the\\n             * bounds that were saved.\\n             */\\n            returnToPrevBounds: false,\\n            /**\\n             * Keep a cache of the location after the user deactivates the control. If set to false, the user has to wait\\n             * until the locate API returns a new location before they see where they are again.\\n             */\\n            cacheLocation: true,\\n            /** If set, a circle that shows the location accuracy is drawn. */\\n            drawCircle: true,\\n            /** If set, the marker at the users' location is drawn. */\\n            drawMarker: true,\\n            /** If set and supported then show the compass heading */\\n            showCompass: true,\\n            /** The class to be used to create the marker. For example L.CircleMarker or L.Marker */\\n            markerClass: LocationMarker,\\n            /** The class us be used to create the compass bearing arrow */\\n            compassClass: CompassMarker,\\n            /** Accuracy circle style properties. NOTE these styles should match the css animations styles */\\n            circleStyle: {\\n                className:   'leaflet-control-locate-circle',\\n                color:       '#136AEC',\\n                fillColor:   '#136AEC',\\n                fillOpacity: 0.15,\\n                weight:      0\\n            },\\n            /** Inner marker style properties. Only works if your marker class supports `setStyle`. */\\n            markerStyle: {\\n                className:   'leaflet-control-locate-marker',\\n                color:       '#fff',\\n                fillColor:   '#2A93EE',\\n                fillOpacity: 1,\\n                weight:      3,\\n                opacity:     1,\\n                radius:      9\\n            },\\n            /** Compass */\\n            compassStyle: {\\n                fillColor:   '#2A93EE',\\n                fillOpacity: 1,\\n                weight:      0,\\n                color:       '#fff',\\n                opacity:     1,\\n                radius:      9, // How far is the arrow is from the center of of the marker\\n                width:       9, // Width of the arrow\\n                depth:       6  // Length of the arrow\\n            },\\n            /**\\n             * Changes to accuracy circle and inner marker while following.\\n             * It is only necessary to provide the properties that should change.\\n             */\\n            followCircleStyle: {},\\n            followMarkerStyle: {\\n                // color: '#FFA500',\\n                // fillColor: '#FFB000'\\n            },\\n            followCompassStyle: {},\\n            /** The CSS class for the icon. For example fa-location-arrow or fa-map-marker */\\n            icon: 'fa fa-map-marker',\\n            iconLoading: 'fa fa-spinner fa-spin',\\n            /** The element to be created for icons. For example span or i */\\n            iconElementTag: 'span',\\n            /** The element to be created for the text. For example small or span */\\n            textElementTag: 'small',\\n            /** Padding around the accuracy circle. */\\n            circlePadding: [0, 0],\\n            /** Use metric units. */\\n            metric: true,\\n            /**\\n             * This callback can be used in case you would like to override button creation behavior.\\n             * This is useful for DOM manipulation frameworks such as angular etc.\\n             * This function should return an object with HtmlElement for the button (link property) and the icon (icon property).\\n             */\\n            createButtonCallback: function (container, options) {\\n                var link = L.DomUtil.create('a', 'leaflet-bar-part leaflet-bar-part-single', container);\\n                link.title = options.strings.title;\\n                link.role = 'button';\\n                link.href = '#';\\n                var icon = L.DomUtil.create(options.iconElementTag, options.icon, link);\\n\\n                if (options.strings.text !== undefined) {\\n                    var text = L.DomUtil.create(options.textElementTag, 'leaflet-locate-text', link);\\n                    text.textContent = options.strings.text;\\n\\t\\t            link.classList.add('leaflet-locate-text-active');\\n                    link.parentNode.style.display = \\\"flex\\\";\\n                    if (options.icon.length > 0) {\\n                        icon.classList.add('leaflet-locate-icon');\\n                    }\\n                }\\n                \\n                return { link: link, icon: icon };\\n            },\\n            /** This event is called in case of any location error that is not a time out error. */\\n            onLocationError: function(err, control) {\\n                alert(err.message);\\n            },\\n            /**\\n             * This event is called when the user's location is outside the bounds set on the map.\\n             * The event is called repeatedly when the location changes.\\n             */\\n            onLocationOutsideMapBounds: function(control) {\\n                control.stop();\\n                alert(control.options.strings.outsideMapBoundsMsg);\\n            },\\n            /** Display a pop-up when the user click on the inner marker. */\\n            showPopup: true,\\n            strings: {\\n                title: \\\"Show me where I am\\\",\\n                metersUnit: \\\"meters\\\",\\n                feetUnit: \\\"feet\\\",\\n                popup: \\\"You are within {distance} {unit} from this point\\\",\\n                outsideMapBoundsMsg: \\\"You seem located outside the boundaries of the map\\\"\\n            },\\n            /** The default options passed to leaflets locate method. */\\n            locateOptions: {\\n                maxZoom: Infinity,\\n                watch: true,  // if you overwrite this, visualization cannot be updated\\n                setView: false // have to set this to false because we have to\\n                               // do setView manually\\n            }\\n        },\\n\\n        initialize: function (options) {\\n            // set default options if nothing is set (merge one step deep)\\n            for (var i in options) {\\n                if (typeof this.options[i] === 'object') {\\n                    L.extend(this.options[i], options[i]);\\n                } else {\\n                    this.options[i] = options[i];\\n                }\\n            }\\n\\n            // extend the follow marker style and circle from the normal style\\n            this.options.followMarkerStyle = L.extend({}, this.options.markerStyle, this.options.followMarkerStyle);\\n            this.options.followCircleStyle = L.extend({}, this.options.circleStyle, this.options.followCircleStyle);\\n            this.options.followCompassStyle = L.extend({}, this.options.compassStyle, this.options.followCompassStyle);\\n        },\\n\\n        /**\\n         * Add control to map. Returns the container for the control.\\n         */\\n        onAdd: function (map) {\\n            var container = L.DomUtil.create('div',\\n                'leaflet-control-locate leaflet-bar leaflet-control');\\n            this._container = container;\\n            this._map = map;\\n            this._layer = this.options.layer || new L.LayerGroup();\\n            this._layer.addTo(map);\\n            this._event = undefined;\\n            this._compassHeading = null;\\n            this._prevBounds = null;\\n\\n            var linkAndIcon = this.options.createButtonCallback(container, this.options);\\n            this._link = linkAndIcon.link;\\n            this._icon = linkAndIcon.icon;\\n\\n            L.DomEvent.on(\\n              this._link,\\n              \\\"click\\\",\\n              function (ev) {\\n                L.DomEvent.stopPropagation(ev);\\n                L.DomEvent.preventDefault(ev);\\n                this._onClick();\\n              },\\n              this\\n            ).on(this._link, \\\"dblclick\\\", L.DomEvent.stopPropagation);\\n\\n            this._resetVariables();\\n\\n            this._map.on('unload', this._unload, this);\\n\\n            return container;\\n        },\\n\\n        /**\\n         * This method is called when the user clicks on the control.\\n         */\\n        _onClick: function() {\\n            this._justClicked = true;\\n            var wasFollowing =  this._isFollowing();\\n            this._userPanned = false;\\n            this._userZoomed = false;\\n\\n            if (this._active && !this._event) {\\n                // click while requesting\\n                this.stop();\\n            } else if (this._active) {\\n                var behaviors = this.options.clickBehavior;\\n                var behavior = behaviors.outOfView;\\n                if (this._map.getBounds().contains(this._event.latlng)) {\\n                    behavior = wasFollowing ? behaviors.inView : behaviors.inViewNotFollowing;\\n                }\\n\\n                // Allow inheriting from another behavior\\n                if (behaviors[behavior]) {\\n                    behavior = behaviors[behavior];\\n                }\\n\\n                switch (behavior) {\\n                    case 'setView':\\n                        this.setView();\\n                        break;\\n                    case 'stop':\\n                        this.stop();\\n                        if (this.options.returnToPrevBounds) {\\n                            var f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\\n                            f.bind(this._map)(this._prevBounds);\\n                        }\\n                        break;\\n                }\\n            } else {\\n                if (this.options.returnToPrevBounds) {\\n                  this._prevBounds = this._map.getBounds();\\n                }\\n                this.start();\\n            }\\n\\n            this._updateContainerStyle();\\n        },\\n\\n        /**\\n         * Starts the plugin:\\n         * - activates the engine\\n         * - draws the marker (if coordinates available)\\n         */\\n        start: function() {\\n            this._activate();\\n\\n            if (this._event) {\\n                this._drawMarker(this._map);\\n\\n                // if we already have a location but the user clicked on the control\\n                if (this.options.setView) {\\n                    this.setView();\\n                }\\n            }\\n            this._updateContainerStyle();\\n        },\\n\\n        /**\\n         * Stops the plugin:\\n         * - deactivates the engine\\n         * - reinitializes the button\\n         * - removes the marker\\n         */\\n        stop: function() {\\n            this._deactivate();\\n\\n            this._cleanClasses();\\n            this._resetVariables();\\n\\n            this._removeMarker();\\n        },\\n\\n        /**\\n         * Keep the control active but stop following the location\\n         */\\n        stopFollowing: function() {\\n            this._userPanned = true;\\n            this._updateContainerStyle();\\n            this._drawMarker();\\n        },\\n\\n        /**\\n         * This method launches the location engine.\\n         * It is called before the marker is updated,\\n         * event if it does not mean that the event will be ready.\\n         *\\n         * Override it if you want to add more functionalities.\\n         * It should set the this._active to true and do nothing if\\n         * this._active is true.\\n         */\\n        _activate: function() {\\n            if (!this._active) {\\n                this._map.locate(this.options.locateOptions);\\n                this._map.fire('locateactivate', this);\\n                this._active = true;\\n\\n                // bind event listeners\\n                this._map.on('locationfound', this._onLocationFound, this);\\n                this._map.on('locationerror', this._onLocationError, this);\\n                this._map.on('dragstart', this._onDrag, this);\\n                this._map.on('zoomstart', this._onZoom, this);\\n                this._map.on('zoomend', this._onZoomEnd, this);\\n                if (this.options.showCompass) {\\n                    var oriAbs = 'ondeviceorientationabsolute' in window;\\n                    if (oriAbs || ('ondeviceorientation' in window)) {\\n                        var _this = this;\\n                        var deviceorientation = function () {\\n                            L.DomEvent.on(window, oriAbs ? 'deviceorientationabsolute' : 'deviceorientation', _this._onDeviceOrientation, _this);\\n                        };\\n                        if (DeviceOrientationEvent && typeof DeviceOrientationEvent.requestPermission === 'function') {\\n                            DeviceOrientationEvent.requestPermission().then(function (permissionState) {\\n                                if (permissionState === 'granted') {\\n                                    deviceorientation();\\n                                }\\n                            });\\n                        } else {\\n                            deviceorientation();\\n                        }\\n                    }\\n                }\\n            }\\n        },\\n\\n        /**\\n         * Called to stop the location engine.\\n         *\\n         * Override it to shutdown any functionalities you added on start.\\n         */\\n        _deactivate: function() {\\n            this._map.stopLocate();\\n            this._map.fire('locatedeactivate', this);\\n            this._active = false;\\n\\n            if (!this.options.cacheLocation) {\\n                this._event = undefined;\\n            }\\n\\n            // unbind event listeners\\n            this._map.off('locationfound', this._onLocationFound, this);\\n            this._map.off('locationerror', this._onLocationError, this);\\n            this._map.off('dragstart', this._onDrag, this);\\n            this._map.off('zoomstart', this._onZoom, this);\\n            this._map.off('zoomend', this._onZoomEnd, this);\\n            if (this.options.showCompass) {\\n                this._compassHeading = null;\\n                if ('ondeviceorientationabsolute' in window) {\\n                    L.DomEvent.off(window, 'deviceorientationabsolute', this._onDeviceOrientation, this);\\n                } else if ('ondeviceorientation' in window) {\\n                    L.DomEvent.off(window, 'deviceorientation', this._onDeviceOrientation, this);\\n                }\\n            }\\n        },\\n\\n        /**\\n         * Zoom (unless we should keep the zoom level) and an to the current view.\\n         */\\n        setView: function() {\\n            this._drawMarker();\\n            if (this._isOutsideMapBounds()) {\\n                this._event = undefined;  // clear the current location so we can get back into the bounds\\n                this.options.onLocationOutsideMapBounds(this);\\n            } else {\\n\\t\\tif (this._justClicked && this.options.initialZoomLevel !== false) {\\n                    var f = this.options.flyTo ? this._map.flyTo : this._map.setView;\\n                    f.bind(this._map)([this._event.latitude, this._event.longitude], this.options.initialZoomLevel);\\n\\t\\t} else\\n                if (this.options.keepCurrentZoomLevel) {\\n                    var f = this.options.flyTo ? this._map.flyTo : this._map.panTo;\\n                    f.bind(this._map)([this._event.latitude, this._event.longitude]);\\n                } else {\\n                    var f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\\n                    // Ignore zoom events while setting the viewport as these would stop following\\n                    this._ignoreEvent = true;\\n                    f.bind(this._map)(this.options.getLocationBounds(this._event), {\\n                        padding: this.options.circlePadding,\\n                        maxZoom: this.options.locateOptions.maxZoom\\n                    });\\n                    L.Util.requestAnimFrame(function(){\\n                        // Wait until after the next animFrame because the flyTo can be async\\n                        this._ignoreEvent = false;\\n                    }, this);\\n\\n                }\\n            }\\n        },\\n\\n        /**\\n         *\\n         */\\n        _drawCompass: function() {\\n            if (!this._event) {\\n                return;\\n            }\\n\\n            var latlng = this._event.latlng;\\n\\n            if (this.options.showCompass && latlng && this._compassHeading !== null) {\\n                var cStyle = this._isFollowing() ? this.options.followCompassStyle : this.options.compassStyle;\\n                if (!this._compass) {\\n                    this._compass = new this.options.compassClass(latlng, this._compassHeading, cStyle).addTo(this._layer);\\n                } else {\\n                    this._compass.setLatLng(latlng);\\n                    this._compass.setHeading(this._compassHeading);\\n                    // If the compassClass can be updated with setStyle, update it.\\n                    if (this._compass.setStyle) {\\n                        this._compass.setStyle(cStyle);\\n                    }\\n                }\\n                // \\n            }\\n            if (this._compass && (!this.options.showCompass || this._compassHeading === null)) {\\n                this._compass.removeFrom(this._layer);\\n                this._compass = null;\\n            }\\n        },\\n\\n        /**\\n         * Draw the marker and accuracy circle on the map.\\n         *\\n         * Uses the event retrieved from onLocationFound from the map.\\n         */\\n        _drawMarker: function() {\\n            if (this._event.accuracy === undefined) {\\n                this._event.accuracy = 0;\\n            }\\n\\n            var radius = this._event.accuracy;\\n            var latlng = this._event.latlng;\\n\\n            // circle with the radius of the location's accuracy\\n            if (this.options.drawCircle) {\\n                var style = this._isFollowing() ? this.options.followCircleStyle : this.options.circleStyle;\\n\\n                if (!this._circle) {\\n                    this._circle = L.circle(latlng, radius, style).addTo(this._layer);\\n                } else {\\n                    this._circle.setLatLng(latlng).setRadius(radius).setStyle(style);\\n                }\\n            }\\n\\n            var distance, unit;\\n            if (this.options.metric) {\\n                distance = radius.toFixed(0);\\n                unit =  this.options.strings.metersUnit;\\n            } else {\\n                distance = (radius * 3.2808399).toFixed(0);\\n                unit = this.options.strings.feetUnit;\\n            }\\n\\n            // small inner marker\\n            if (this.options.drawMarker) {\\n                var mStyle = this._isFollowing() ? this.options.followMarkerStyle : this.options.markerStyle;\\n                if (!this._marker) {\\n                    this._marker = new this.options.markerClass(latlng, mStyle).addTo(this._layer);\\n                } else {\\n                    this._marker.setLatLng(latlng);\\n                    // If the markerClass can be updated with setStyle, update it.\\n                    if (this._marker.setStyle) {\\n                        this._marker.setStyle(mStyle);\\n                    }\\n                }\\n            }\\n\\n            this._drawCompass();\\n\\n            var t = this.options.strings.popup;\\n            function getPopupText() {\\n                if (typeof t === 'string') {\\n                    return L.Util.template(t, {distance: distance, unit: unit});\\n                } else if (typeof t === 'function') {\\n                    return t({distance: distance, unit: unit});\\n                } else {\\n                    return t;\\n                }\\n            }\\n            if (this.options.showPopup && t && this._marker) {\\n                this._marker\\n                    .bindPopup(getPopupText())\\n                    ._popup.setLatLng(latlng);\\n            }\\n            if (this.options.showPopup && t && this._compass) {\\n                this._compass\\n                    .bindPopup(getPopupText())\\n                    ._popup.setLatLng(latlng);\\n            }\\n        },\\n\\n        /**\\n         * Remove the marker from map.\\n         */\\n        _removeMarker: function() {\\n            this._layer.clearLayers();\\n            this._marker = undefined;\\n            this._circle = undefined;\\n        },\\n\\n        /**\\n         * Unload the plugin and all event listeners.\\n         * Kind of the opposite of onAdd.\\n         */\\n        _unload: function() {\\n            this.stop();\\n            this._map.off('unload', this._unload, this);\\n        },\\n\\n        /**\\n         * Sets the compass heading\\n         */\\n        _setCompassHeading: function(angle) {\\n            if (!isNaN(parseFloat(angle)) && isFinite(angle)) {\\n                angle = Math.round(angle);\\n\\n                this._compassHeading = angle;\\n                L.Util.requestAnimFrame(this._drawCompass, this);\\n            } else {\\n                this._compassHeading = null;\\n            }\\n        },\\n\\n        /**\\n         * If the compass fails calibration just fail safely and remove the compass\\n         */\\n        _onCompassNeedsCalibration: function() {\\n            this._setCompassHeading();\\n        },\\n\\n        /**\\n         * Process and normalise compass events\\n         */\\n        _onDeviceOrientation: function(e) {\\n            if (!this._active) {\\n                return;\\n            }\\n\\n            if (e.webkitCompassHeading) {\\n                // iOS\\n                this._setCompassHeading(e.webkitCompassHeading);\\n            } else if (e.absolute && e.alpha) {\\n                // Android\\n                this._setCompassHeading(360 - e.alpha)\\n            }\\n        },\\n\\n        /**\\n         * Calls deactivate and dispatches an error.\\n         */\\n        _onLocationError: function(err) {\\n            // ignore time out error if the location is watched\\n            if (err.code == 3 && this.options.locateOptions.watch) {\\n                return;\\n            }\\n\\n            this.stop();\\n            this.options.onLocationError(err, this);\\n        },\\n\\n        /**\\n         * Stores the received event and updates the marker.\\n         */\\n        _onLocationFound: function(e) {\\n            // no need to do anything if the location has not changed\\n            if (this._event &&\\n                (this._event.latlng.lat === e.latlng.lat &&\\n                 this._event.latlng.lng === e.latlng.lng &&\\n                     this._event.accuracy === e.accuracy)) {\\n                return;\\n            }\\n\\n            if (!this._active) {\\n                // we may have a stray event\\n                return;\\n            }\\n\\n            this._event = e;\\n\\n            this._drawMarker();\\n            this._updateContainerStyle();\\n\\n            switch (this.options.setView) {\\n                case 'once':\\n                    if (this._justClicked) {\\n                        this.setView();\\n                    }\\n                    break;\\n                case 'untilPan':\\n                    if (!this._userPanned) {\\n                        this.setView();\\n                    }\\n                    break;\\n                case 'untilPanOrZoom':\\n                    if (!this._userPanned && !this._userZoomed) {\\n                        this.setView();\\n                    }\\n                    break;\\n                case 'always':\\n                    this.setView();\\n                    break;\\n                case false:\\n                    // don't set the view\\n                    break;\\n            }\\n\\n            this._justClicked = false;\\n        },\\n\\n        /**\\n         * When the user drags. Need a separate event so we can bind and unbind event listeners.\\n         */\\n        _onDrag: function() {\\n            // only react to drags once we have a location\\n            if (this._event && !this._ignoreEvent) {\\n                this._userPanned = true;\\n                this._updateContainerStyle();\\n                this._drawMarker();\\n            }\\n        },\\n\\n        /**\\n         * When the user zooms. Need a separate event so we can bind and unbind event listeners.\\n         */\\n        _onZoom: function() {\\n            // only react to drags once we have a location\\n            if (this._event && !this._ignoreEvent) {\\n                this._userZoomed = true;\\n                this._updateContainerStyle();\\n                this._drawMarker();\\n            }\\n        },\\n\\n        /**\\n         * After a zoom ends update the compass and handle sideways zooms\\n         */\\n        _onZoomEnd: function() {\\n            if (this._event) {\\n                this._drawCompass();\\n            }\\n\\n            if (this._event && !this._ignoreEvent) {\\n                // If we have zoomed in and out and ended up sideways treat it as a pan\\n                if (this._marker && !this._map.getBounds().pad(-.3).contains(this._marker.getLatLng())) {\\n                    this._userPanned = true;\\n                    this._updateContainerStyle();\\n                    this._drawMarker();\\n                }\\n            }\\n        },\\n\\n        /**\\n         * Compute whether the map is following the user location with pan and zoom.\\n         */\\n        _isFollowing: function() {\\n            if (!this._active) {\\n                return false;\\n            }\\n\\n            if (this.options.setView === 'always') {\\n                return true;\\n            } else if (this.options.setView === 'untilPan') {\\n                return !this._userPanned;\\n            } else if (this.options.setView === 'untilPanOrZoom') {\\n                return !this._userPanned && !this._userZoomed;\\n            }\\n        },\\n\\n        /**\\n         * Check if location is in map bounds\\n         */\\n        _isOutsideMapBounds: function() {\\n            if (this._event === undefined) {\\n                return false;\\n            }\\n            return this._map.options.maxBounds &&\\n                !this._map.options.maxBounds.contains(this._event.latlng);\\n        },\\n\\n        /**\\n         * Toggles button class between following and active.\\n         */\\n        _updateContainerStyle: function() {\\n            if (!this._container) {\\n                return;\\n            }\\n\\n            if (this._active && !this._event) {\\n                // active but don't have a location yet\\n                this._setClasses('requesting');\\n            } else if (this._isFollowing()) {\\n                this._setClasses('following');\\n            } else if (this._active) {\\n                this._setClasses('active');\\n            } else {\\n                this._cleanClasses();\\n            }\\n        },\\n\\n        /**\\n         * Sets the CSS classes for the state.\\n         */\\n        _setClasses: function(state) {\\n            if (state == 'requesting') {\\n                removeClasses(this._container, \\\"active following\\\");\\n                addClasses(this._container, \\\"requesting\\\");\\n\\n                removeClasses(this._icon, this.options.icon);\\n                addClasses(this._icon, this.options.iconLoading);\\n            } else if (state == 'active') {\\n                removeClasses(this._container, \\\"requesting following\\\");\\n                addClasses(this._container, \\\"active\\\");\\n\\n                removeClasses(this._icon, this.options.iconLoading);\\n                addClasses(this._icon, this.options.icon);\\n            } else if (state == 'following') {\\n                removeClasses(this._container, \\\"requesting\\\");\\n                addClasses(this._container, \\\"active following\\\");\\n\\n                removeClasses(this._icon, this.options.iconLoading);\\n                addClasses(this._icon, this.options.icon);\\n            }\\n        },\\n\\n        /**\\n         * Removes all classes from button.\\n         */\\n        _cleanClasses: function() {\\n            L.DomUtil.removeClass(this._container, \\\"requesting\\\");\\n            L.DomUtil.removeClass(this._container, \\\"active\\\");\\n            L.DomUtil.removeClass(this._container, \\\"following\\\");\\n\\n            removeClasses(this._icon, this.options.iconLoading);\\n            addClasses(this._icon, this.options.icon);\\n        },\\n\\n        /**\\n         * Reinitializes state variables.\\n         */\\n        _resetVariables: function() {\\n            // whether locate is active or not\\n            this._active = false;\\n\\n            // true if the control was clicked for the first time\\n            // we need this so we can pan and zoom once we have the location\\n            this._justClicked = false;\\n\\n            // true if the user has panned the map after clicking the control\\n            this._userPanned = false;\\n\\n            // true if the user has zoomed the map after clicking the control\\n            this._userZoomed = false;\\n        }\\n    });\\n\\n    L.control.locate = function (options) {\\n        return new L.Control.Locate(options);\\n    };\\n\\n    return LocateControl;\\n}, window));\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"factory\",\"window\",\"define\",\"amd\",\"L\",\"Control\",\"Locate\",\"LDomUtilApplyClassesMethod\",\"method\",\"element\",\"classNames\",\"split\",\"forEach\",\"className\",\"DomUtil\",\"call\",\"addClasses\",\"el\",\"names\",\"removeClasses\",\"LocationMarker\",\"Marker\",\"extend\",\"initialize\",\"latlng\",\"options\",\"Util\",\"setOptions\",\"_latlng\",\"createIcon\",\"opt\",\"style\",\"undefined\",\"color\",\"weight\",\"fillColor\",\"fillOpacity\",\"opacity\",\"icon\",\"_getIconSVG\",\"_locationIcon\",\"divIcon\",\"html\",\"svg\",\"iconSize\",\"w\",\"h\",\"setIcon\",\"r\",\"radius\",\"s\",\"s2\",\"setStyle\",\"CompassMarker\",\"heading\",\"_heading\",\"setHeading\",\"width\",\"depth\",\"LocateControl\",\"position\",\"layer\",\"setView\",\"keepCurrentZoomLevel\",\"initialZoomLevel\",\"getLocationBounds\",\"locationEvent\",\"bounds\",\"flyTo\",\"clickBehavior\",\"inView\",\"outOfView\",\"inViewNotFollowing\",\"returnToPrevBounds\",\"cacheLocation\",\"drawCircle\",\"drawMarker\",\"showCompass\",\"markerClass\",\"compassClass\",\"circleStyle\",\"markerStyle\",\"compassStyle\",\"followCircleStyle\",\"followMarkerStyle\",\"followCompassStyle\",\"iconLoading\",\"iconElementTag\",\"textElementTag\",\"circlePadding\",\"metric\",\"createButtonCallback\",\"container\",\"link\",\"create\",\"title\",\"strings\",\"role\",\"href\",\"text\",\"textContent\",\"classList\",\"add\",\"parentNode\",\"display\",\"length\",\"onLocationError\",\"err\",\"control\",\"alert\",\"message\",\"onLocationOutsideMapBounds\",\"stop\",\"outsideMapBoundsMsg\",\"showPopup\",\"metersUnit\",\"feetUnit\",\"popup\",\"locateOptions\",\"maxZoom\",\"Infinity\",\"watch\",\"i\",\"onAdd\",\"map\",\"_container\",\"_map\",\"_layer\",\"LayerGroup\",\"addTo\",\"_event\",\"_prevBounds\",\"_compassHeading\",\"linkAndIcon\",\"_link\",\"_icon\",\"DomEvent\",\"on\",\"ev\",\"stopPropagation\",\"preventDefault\",\"_onClick\",\"_resetVariables\",\"_unload\",\"_justClicked\",\"wasFollowing\",\"_isFollowing\",\"_userZoomed\",\"_userPanned\",\"_active\",\"behaviors\",\"behavior\",\"getBounds\",\"contains\",\"bind\",\"f\",\"flyToBounds\",\"fitBounds\",\"start\",\"_updateContainerStyle\",\"_activate\",\"_drawMarker\",\"_deactivate\",\"_cleanClasses\",\"_removeMarker\",\"stopFollowing\",\"locate\",\"fire\",\"_onLocationFound\",\"_onLocationError\",\"_onDrag\",\"_onZoom\",\"_onZoomEnd\",\"oriAbs\",\"_this\",\"deviceorientation\",\"_onDeviceOrientation\",\"DeviceOrientationEvent\",\"requestPermission\",\"then\",\"permissionState\",\"stopLocate\",\"off\",\"_isOutsideMapBounds\",\"latitude\",\"longitude\",\"panTo\",\"_ignoreEvent\",\"padding\",\"requestAnimFrame\",\"_drawCompass\",\"cStyle\",\"_compass\",\"setLatLng\",\"removeFrom\",\"getPopupText\",\"t\",\"template\",\"distance\",\"unit\",\"accuracy\",\"_circle\",\"setRadius\",\"circle\",\"toFixed\",\"mStyle\",\"_marker\",\"bindPopup\",\"_popup\",\"clearLayers\",\"_setCompassHeading\",\"angle\",\"isNaN\",\"parseFloat\",\"isFinite\",\"Math\",\"round\",\"_onCompassNeedsCalibration\",\"e\",\"webkitCompassHeading\",\"absolute\",\"alpha\",\"code\",\"lat\",\"lng\",\"pad\",\"getLatLng\",\"maxBounds\",\"_setClasses\",\"state\",\"removeClass\",\"L.control.locate\"]\n}\n"]