["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@firebase/remote-config/dist/index.cjs.js"],"~:js","shadow$provide.module$node_modules$$firebase$remote_config$dist$index_cjs=function(global,require,module,exports){function getUserLanguage(navigatorLanguage){void 0===navigatorLanguage&&(navigatorLanguage=navigator);return navigatorLanguage.languages&&navigatorLanguage.languages[0]||navigatorLanguage.language}function getAllKeys(obj1,obj2){void 0===obj1&&(obj1={});void 0===obj2&&(obj2={});return Object.keys(tslib.__assign(tslib.__assign({},obj1),obj2))}function toFirebaseError(event,errorCode){event=\nevent.target.error||void 0;return ERROR_FACTORY.create(errorCode,{originalErrorMessage:event&&event.message})}function openDatabase(){return new Promise(function(resolve,reject){var request=indexedDB.open(\"firebase_remote_config\",1);request.onerror=function(event){reject(toFirebaseError(event,\"storage-open\"))};request.onsuccess=function(event){resolve(event.target.result)};request.onupgradeneeded=function(event){var db=event.target.result;switch(event.oldVersion){case 0:db.createObjectStore(\"app_namespace_store\",\n{keyPath:\"compositeKey\"})}}})}function setAbortableTimeout(signal,throttleEndTimeMillis){return new Promise(function(resolve,reject){var backoffMillis=Math.max(throttleEndTimeMillis-Date.now(),0),timeout=setTimeout(resolve,backoffMillis);signal.addEventListener(function(){clearTimeout(timeout);reject(ERROR_FACTORY.create(\"fetch-throttle\",{throttleEndTimeMillis}))})})}function registerRemoteConfig(firebaseInstance){firebaseInstance.INTERNAL.registerComponent((new component.Component(\"remoteConfig\",\nfunction(container,namespace){var app=container.getProvider(\"app\").getImmediate(),installations=container.getProvider(\"installations\").getImmediate();if(\"undefined\"===typeof window)throw ERROR_FACTORY.create(\"registration-window\");container=app.options;var projectId=container.projectId,apiKey=container.apiKey,appId=container.appId;if(!projectId)throw ERROR_FACTORY.create(\"registration-project-id\");if(!apiKey)throw ERROR_FACTORY.create(\"registration-api-key\");if(!appId)throw ERROR_FACTORY.create(\"registration-app-id\");\nnamespace=namespace||\"firebase\";container=new Storage$jscomp$0(appId,app.name,namespace);var storageCache=new StorageCache(container),logger$1=new logger$jscomp$0.Logger(\"@firebase/remote-config\");logger$1.logLevel=logger$jscomp$0.LogLevel.ERROR;namespace=new RestClient(installations,firebaseInstance.SDK_VERSION,namespace,projectId,apiKey,appId);namespace=new RetryingClient(namespace,container);namespace=new CachingClient(namespace,container,storageCache,logger$1);app=new RemoteConfig(app,namespace,\nstorageCache,container,logger$1);app.ensureInitialized();return app},\"PUBLIC\")).setMultipleInstances(!0));firebaseInstance.registerVersion(\"@firebase/remote-config\",\"0.1.28\")}Object.defineProperty(exports,\"__esModule\",{value:!0});global=require(\"module$node_modules$$firebase$app$dist$index_cjs\");require(\"module$node_modules$$firebase$installations$dist$index_cjs\");var tslib=require(\"module$node_modules$tslib$tslib\"),util=require(\"module$node_modules$$firebase$util$dist$index_cjs\"),logger$jscomp$0=\nrequire(\"module$node_modules$$firebase$logger$dist$index_cjs\"),component=require(\"module$node_modules$$firebase$component$dist$index_cjs\");require=global&&\"object\"===typeof global&&\"default\"in global?global:{\"default\":global};var CachingClient=function(){function CachingClient(client,storage,storageCache,logger){this.client=client;this.storage=storage;this.storageCache=storageCache;this.logger=logger}CachingClient.prototype.isCachedDataFresh=function(cacheMaxAgeMillis,lastSuccessfulFetchTimestampMillis){if(!lastSuccessfulFetchTimestampMillis)return this.logger.debug(\"Config fetch cache check. Cache unpopulated.\"),\n!1;lastSuccessfulFetchTimestampMillis=Date.now()-lastSuccessfulFetchTimestampMillis;var isCachedDataFresh=lastSuccessfulFetchTimestampMillis<=cacheMaxAgeMillis;this.logger.debug(\"Config fetch cache check. Cache age millis: \"+(lastSuccessfulFetchTimestampMillis+\". Cache max age millis (minimumFetchIntervalMillis setting): \")+(cacheMaxAgeMillis+\". Is cache hit: \")+(isCachedDataFresh+\".\"));return isCachedDataFresh};CachingClient.prototype.fetch=function(request){return tslib.__awaiter(this,void 0,void 0,\nfunction(){var _a,lastSuccessfulFetchTimestampMillis,lastSuccessfulFetchResponse,response,storageOperations;return tslib.__generator(this,function(_b){switch(_b.label){case 0:return[4,Promise.all([this.storage.getLastSuccessfulFetchTimestampMillis(),this.storage.getLastSuccessfulFetchResponse()])];case 1:_a=_b.sent();lastSuccessfulFetchTimestampMillis=_a[0];if((lastSuccessfulFetchResponse=_a[1])&&this.isCachedDataFresh(request.cacheMaxAgeMillis,lastSuccessfulFetchTimestampMillis))return[2,lastSuccessfulFetchResponse];\nrequest.eTag=lastSuccessfulFetchResponse&&lastSuccessfulFetchResponse.eTag;return[4,this.client.fetch(request)];case 2:return response=_b.sent(),storageOperations=[this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())],200===response.status&&storageOperations.push(this.storage.setLastSuccessfulFetchResponse(response)),[4,Promise.all(storageOperations)];case 3:return _b.sent(),[2,response]}})})};return CachingClient}(),_a$jscomp$1;global=(_a$jscomp$1={},_a$jscomp$1[\"registration-window\"]=\n\"Undefined window object. This SDK only supports usage in a browser environment.\",_a$jscomp$1[\"registration-project-id\"]=\"Undefined project identifier. Check Firebase app initialization.\",_a$jscomp$1[\"registration-api-key\"]=\"Undefined API key. Check Firebase app initialization.\",_a$jscomp$1[\"registration-app-id\"]=\"Undefined app identifier. Check Firebase app initialization.\",_a$jscomp$1[\"storage-open\"]=\"Error thrown when opening storage. Original error: {$originalErrorMessage}.\",_a$jscomp$1[\"storage-get\"]=\n\"Error thrown when reading from storage. Original error: {$originalErrorMessage}.\",_a$jscomp$1[\"storage-set\"]=\"Error thrown when writing to storage. Original error: {$originalErrorMessage}.\",_a$jscomp$1[\"storage-delete\"]=\"Error thrown when deleting from storage. Original error: {$originalErrorMessage}.\",_a$jscomp$1[\"fetch-client-network\"]=\"Fetch client failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.\",_a$jscomp$1[\"fetch-timeout\"]='The config fetch request timed out.  Configure timeout using \"fetchTimeoutMillis\" SDK setting.',\n_a$jscomp$1[\"fetch-throttle\"]='The config fetch request timed out while in an exponential backoff state. Configure timeout using \"fetchTimeoutMillis\" SDK setting. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',_a$jscomp$1[\"fetch-client-parse\"]=\"Fetch client could not parse response. Original error: {$originalErrorMessage}.\",_a$jscomp$1[\"fetch-status\"]=\"Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.\",_a$jscomp$1);var ERROR_FACTORY=\nnew util.ErrorFactory(\"remoteconfig\",\"Remote Config\",global),RestClient=function(){function RestClient(firebaseInstallations,sdkVersion,namespace,projectId,apiKey,appId){this.firebaseInstallations=firebaseInstallations;this.sdkVersion=sdkVersion;this.namespace=namespace;this.projectId=projectId;this.apiKey=apiKey;this.appId=appId}RestClient.prototype.fetch=function(request){return tslib.__awaiter(this,void 0,void 0,function(){var _a,installationId,installationToken,urlBase,url,headers,requestBody,\noptions,fetchPromise,timeoutPromise,response,originalError_1,errorCode,status,responseEtag,config,state,responseBody,originalError_2;return tslib.__generator(this,function(_b){switch(_b.label){case 0:return[4,Promise.all([this.firebaseInstallations.getId(),this.firebaseInstallations.getToken()])];case 1:_a=_b.sent(),installationId=_a[0],installationToken=_a[1],urlBase=window.FIREBASE_REMOTE_CONFIG_URL_BASE||\"https://firebaseremoteconfig.googleapis.com\",url=urlBase+\"/v1/projects/\"+this.projectId+\"/namespaces/\"+\nthis.namespace+\":fetch?key\\x3d\"+this.apiKey,headers={\"Content-Type\":\"application/json\",\"Content-Encoding\":\"gzip\",\"If-None-Match\":request.eTag||\"*\"},requestBody={sdk_version:this.sdkVersion,app_instance_id:installationId,app_instance_id_token:installationToken,app_id:this.appId,language_code:getUserLanguage()},options={method:\"POST\",headers,body:JSON.stringify(requestBody)},fetchPromise=fetch(url,options),timeoutPromise=new Promise(function(_resolve,reject){request.signal.addEventListener(function(){var error=\nError(\"The operation was aborted.\");error.name=\"AbortError\";reject(error)})}),_b.label=2;case 2:return _b.trys.push([2,5,,6]),[4,Promise.race([fetchPromise,timeoutPromise])];case 3:return _b.sent(),[4,fetchPromise];case 4:return response=_b.sent(),[3,6];case 5:throw originalError_1=_b.sent(),errorCode=\"fetch-client-network\",\"AbortError\"===originalError_1.name&&(errorCode=\"fetch-timeout\"),ERROR_FACTORY.create(errorCode,{originalErrorMessage:originalError_1.message});case 6:status=response.status;responseEtag=\nresponse.headers.get(\"ETag\")||void 0;if(200!==response.status)return[3,11];responseBody=void 0;_b.label=7;case 7:return _b.trys.push([7,9,,10]),[4,response.json()];case 8:return responseBody=_b.sent(),[3,10];case 9:throw originalError_2=_b.sent(),ERROR_FACTORY.create(\"fetch-client-parse\",{originalErrorMessage:originalError_2.message});case 10:config=responseBody.entries,state=responseBody.state,_b.label=11;case 11:if(\"INSTANCE_STATE_UNSPECIFIED\"===state)status=500;else if(\"NO_CHANGE\"===state)status=\n304;else if(\"NO_TEMPLATE\"===state||\"EMPTY_CONFIG\"===state)config={};if(304!==status&&200!==status)throw ERROR_FACTORY.create(\"fetch-status\",{httpStatus:status});return[2,{status,eTag:responseEtag,config}]}})})};return RestClient}(),RemoteConfigAbortSignal=function(){function RemoteConfigAbortSignal(){this.listeners=[]}RemoteConfigAbortSignal.prototype.addEventListener=function(listener){this.listeners.push(listener)};RemoteConfigAbortSignal.prototype.abort=function(){this.listeners.forEach(function(listener){return listener()})};\nreturn RemoteConfigAbortSignal}(),BOOLEAN_TRUTHY_VALUES=\"1 true t yes y on\".split(\" \"),Value=function(){function Value(_source,_value){void 0===_value&&(_value=\"\");this._source=_source;this._value=_value}Value.prototype.asString=function(){return this._value};Value.prototype.asBoolean=function(){return\"static\"===this._source?!1:0<=BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase())};Value.prototype.asNumber=function(){if(\"static\"===this._source)return 0;var num=Number(this._value);isNaN(num)&&\n(num=0);return num};Value.prototype.getSource=function(){return this._source};return Value}(),RemoteConfig=function(){function RemoteConfig(app,_client,_storageCache,_storage,_logger){this.app=app;this._client=_client;this._storageCache=_storageCache;this._storage=_storage;this._logger=_logger;this._isInitializationComplete=!1;this.settings={fetchTimeoutMillis:6E4,minimumFetchIntervalMillis:432E5};this.defaultConfig={}}RemoteConfig.prototype.setLogLevel=function(logLevel){switch(logLevel){case \"debug\":this._logger.logLevel=\nlogger$jscomp$0.LogLevel.DEBUG;break;case \"silent\":this._logger.logLevel=logger$jscomp$0.LogLevel.SILENT;break;default:this._logger.logLevel=logger$jscomp$0.LogLevel.ERROR}};Object.defineProperty(RemoteConfig.prototype,\"fetchTimeMillis\",{get:function(){return this._storageCache.getLastSuccessfulFetchTimestampMillis()||-1},enumerable:!1,configurable:!0});Object.defineProperty(RemoteConfig.prototype,\"lastFetchStatus\",{get:function(){return this._storageCache.getLastFetchStatus()||\"no-fetch-yet\"},enumerable:!1,\nconfigurable:!0});RemoteConfig.prototype.activate=function(){return tslib.__awaiter(this,void 0,void 0,function(){var _a,lastSuccessfulFetchResponse,activeConfigEtag;return tslib.__generator(this,function(_b){switch(_b.label){case 0:return[4,Promise.all([this._storage.getLastSuccessfulFetchResponse(),this._storage.getActiveConfigEtag()])];case 1:return _a=_b.sent(),lastSuccessfulFetchResponse=_a[0],activeConfigEtag=_a[1],lastSuccessfulFetchResponse&&lastSuccessfulFetchResponse.config&&lastSuccessfulFetchResponse.eTag&&\nlastSuccessfulFetchResponse.eTag!==activeConfigEtag?[4,Promise.all([this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config),this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)])]:[2,!1];case 2:return _b.sent(),[2,!0]}})})};RemoteConfig.prototype.ensureInitialized=function(){var _this=this;this._initializePromise||(this._initializePromise=this._storageCache.loadFromStorage().then(function(){_this._isInitializationComplete=!0}));return this._initializePromise};RemoteConfig.prototype.fetch=\nfunction(){return tslib.__awaiter(this,void 0,void 0,function(){var abortSignal,e_1,lastFetchStatus,_this=this;return tslib.__generator(this,function(_a$jscomp$0){switch(_a$jscomp$0.label){case 0:abortSignal=new RemoteConfigAbortSignal,setTimeout(function(){return tslib.__awaiter(_this,void 0,void 0,function(){return tslib.__generator(this,function(_a){abortSignal.abort();return[2]})})},this.settings.fetchTimeoutMillis),_a$jscomp$0.label=1;case 1:return _a$jscomp$0.trys.push([1,4,,6]),[4,this._client.fetch({cacheMaxAgeMillis:this.settings.minimumFetchIntervalMillis,\nsignal:abortSignal})];case 2:return _a$jscomp$0.sent(),[4,this._storageCache.setLastFetchStatus(\"success\")];case 3:return _a$jscomp$0.sent(),[3,6];case 4:return e_1=_a$jscomp$0.sent(),lastFetchStatus=e_1 instanceof util.FirebaseError&&-1!==e_1.code.indexOf(\"fetch-throttle\")?\"throttle\":\"failure\",[4,this._storageCache.setLastFetchStatus(lastFetchStatus)];case 5:throw _a$jscomp$0.sent(),e_1;case 6:return[2]}})})};RemoteConfig.prototype.fetchAndActivate=function(){return tslib.__awaiter(this,void 0,void 0,\nfunction(){return tslib.__generator(this,function(_a){switch(_a.label){case 0:return[4,this.fetch()];case 1:return _a.sent(),[2,this.activate()]}})})};RemoteConfig.prototype.getAll=function(){var _this=this;return getAllKeys(this._storageCache.getActiveConfig(),this.defaultConfig).reduce(function(allConfigs,key){allConfigs[key]=_this.getValue(key);return allConfigs},{})};RemoteConfig.prototype.getBoolean=function(key){return this.getValue(key).asBoolean()};RemoteConfig.prototype.getNumber=function(key){return this.getValue(key).asNumber()};\nRemoteConfig.prototype.getString=function(key){return this.getValue(key).asString()};RemoteConfig.prototype.getValue=function(key){this._isInitializationComplete||this._logger.debug('A value was requested for key \"'+key+'\" before SDK initialization completed. Await on ensureInitialized if the intent was to get a previously activated value.');var activeConfig=this._storageCache.getActiveConfig();if(activeConfig&&void 0!==activeConfig[key])return new Value(\"remote\",activeConfig[key]);if(this.defaultConfig&&\nvoid 0!==this.defaultConfig[key])return new Value(\"default\",String(this.defaultConfig[key]));this._logger.debug('Returning static value for key \"'+key+'\". Define a default or remote value if this is unintentional.');return new Value(\"static\")};return RemoteConfig}(),Storage$jscomp$0=function(){function Storage(appId,appName,namespace,openDbPromise){void 0===openDbPromise&&(openDbPromise=openDatabase());this.appId=appId;this.appName=appName;this.namespace=namespace;this.openDbPromise=openDbPromise}\nStorage.prototype.getLastFetchStatus=function(){return this.get(\"last_fetch_status\")};Storage.prototype.setLastFetchStatus=function(status){return this.set(\"last_fetch_status\",status)};Storage.prototype.getLastSuccessfulFetchTimestampMillis=function(){return this.get(\"last_successful_fetch_timestamp_millis\")};Storage.prototype.setLastSuccessfulFetchTimestampMillis=function(timestamp){return this.set(\"last_successful_fetch_timestamp_millis\",timestamp)};Storage.prototype.getLastSuccessfulFetchResponse=\nfunction(){return this.get(\"last_successful_fetch_response\")};Storage.prototype.setLastSuccessfulFetchResponse=function(response){return this.set(\"last_successful_fetch_response\",response)};Storage.prototype.getActiveConfig=function(){return this.get(\"active_config\")};Storage.prototype.setActiveConfig=function(config){return this.set(\"active_config\",config)};Storage.prototype.getActiveConfigEtag=function(){return this.get(\"active_config_etag\")};Storage.prototype.setActiveConfigEtag=function(etag){return this.set(\"active_config_etag\",\netag)};Storage.prototype.getThrottleMetadata=function(){return this.get(\"throttle_metadata\")};Storage.prototype.setThrottleMetadata=function(metadata){return this.set(\"throttle_metadata\",metadata)};Storage.prototype.deleteThrottleMetadata=function(){return this.delete(\"throttle_metadata\")};Storage.prototype.get=function(key){return tslib.__awaiter(this,void 0,void 0,function(){var db,_this=this;return tslib.__generator(this,function(_a){switch(_a.label){case 0:return[4,this.openDbPromise];case 1:return db=\n_a.sent(),[2,new Promise(function(resolve,reject){var objectStore=db.transaction([\"app_namespace_store\"],\"readonly\").objectStore(\"app_namespace_store\"),compositeKey=_this.createCompositeKey(key);try{var request=objectStore.get(compositeKey);request.onerror=function(event){reject(toFirebaseError(event,\"storage-get\"))};request.onsuccess=function(event){(event=event.target.result)?resolve(event.value):resolve(void 0)}}catch(e){reject(ERROR_FACTORY.create(\"storage-get\",{originalErrorMessage:e&&e.message}))}})]}})})};\nStorage.prototype.set=function(key,value){return tslib.__awaiter(this,void 0,void 0,function(){var db,_this=this;return tslib.__generator(this,function(_a){switch(_a.label){case 0:return[4,this.openDbPromise];case 1:return db=_a.sent(),[2,new Promise(function(resolve,reject){var objectStore=db.transaction([\"app_namespace_store\"],\"readwrite\").objectStore(\"app_namespace_store\"),compositeKey=_this.createCompositeKey(key);try{var request=objectStore.put({compositeKey,value});request.onerror=function(event){reject(toFirebaseError(event,\n\"storage-set\"))};request.onsuccess=function(){resolve()}}catch(e){reject(ERROR_FACTORY.create(\"storage-set\",{originalErrorMessage:e&&e.message}))}})]}})})};Storage.prototype.delete=function(key){return tslib.__awaiter(this,void 0,void 0,function(){var db,_this=this;return tslib.__generator(this,function(_a){switch(_a.label){case 0:return[4,this.openDbPromise];case 1:return db=_a.sent(),[2,new Promise(function(resolve,reject){var objectStore=db.transaction([\"app_namespace_store\"],\"readwrite\").objectStore(\"app_namespace_store\"),\ncompositeKey=_this.createCompositeKey(key);try{var request=objectStore.delete(compositeKey);request.onerror=function(event){reject(toFirebaseError(event,\"storage-delete\"))};request.onsuccess=function(){resolve()}}catch(e){reject(ERROR_FACTORY.create(\"storage-delete\",{originalErrorMessage:e&&e.message}))}})]}})})};Storage.prototype.createCompositeKey=function(key){return[this.appId,this.appName,this.namespace,key].join()};return Storage}(),StorageCache=function(){function StorageCache(storage){this.storage=\nstorage}StorageCache.prototype.getLastFetchStatus=function(){return this.lastFetchStatus};StorageCache.prototype.getLastSuccessfulFetchTimestampMillis=function(){return this.lastSuccessfulFetchTimestampMillis};StorageCache.prototype.getActiveConfig=function(){return this.activeConfig};StorageCache.prototype.loadFromStorage=function(){return tslib.__awaiter(this,void 0,void 0,function(){var lastFetchStatusPromise,lastSuccessfulFetchTimestampMillisPromise,activeConfigPromise,lastFetchStatus,lastSuccessfulFetchTimestampMillis,\nactiveConfig;return tslib.__generator(this,function(_a){switch(_a.label){case 0:return lastFetchStatusPromise=this.storage.getLastFetchStatus(),lastSuccessfulFetchTimestampMillisPromise=this.storage.getLastSuccessfulFetchTimestampMillis(),activeConfigPromise=this.storage.getActiveConfig(),[4,lastFetchStatusPromise];case 1:if(lastFetchStatus=_a.sent())this.lastFetchStatus=lastFetchStatus;return[4,lastSuccessfulFetchTimestampMillisPromise];case 2:if(lastSuccessfulFetchTimestampMillis=_a.sent())this.lastSuccessfulFetchTimestampMillis=\nlastSuccessfulFetchTimestampMillis;return[4,activeConfigPromise];case 3:if(activeConfig=_a.sent())this.activeConfig=activeConfig;return[2]}})})};StorageCache.prototype.setLastFetchStatus=function(status){this.lastFetchStatus=status;return this.storage.setLastFetchStatus(status)};StorageCache.prototype.setLastSuccessfulFetchTimestampMillis=function(timestampMillis){this.lastSuccessfulFetchTimestampMillis=timestampMillis;return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis)};StorageCache.prototype.setActiveConfig=\nfunction(activeConfig){this.activeConfig=activeConfig;return this.storage.setActiveConfig(activeConfig)};return StorageCache}(),RetryingClient=function(){function RetryingClient(client,storage){this.client=client;this.storage=storage}RetryingClient.prototype.fetch=function(request){return tslib.__awaiter(this,void 0,void 0,function(){var throttleMetadata;return tslib.__generator(this,function(_a){switch(_a.label){case 0:return[4,this.storage.getThrottleMetadata()];case 1:return throttleMetadata=_a.sent()||\n{backoffCount:0,throttleEndTimeMillis:Date.now()},[2,this.attemptFetch(request,throttleMetadata)]}})})};RetryingClient.prototype.attemptFetch=function(request,_a){var throttleEndTimeMillis=_a.throttleEndTimeMillis,backoffCount=_a.backoffCount;return tslib.__awaiter(this,void 0,void 0,function(){var response,e_1,throttleMetadata;return tslib.__generator(this,function(_b){switch(_b.label){case 0:return[4,setAbortableTimeout(request.signal,throttleEndTimeMillis)];case 1:_b.sent(),_b.label=2;case 2:return _b.trys.push([2,\n5,,7]),[4,this.client.fetch(request)];case 3:return response=_b.sent(),[4,this.storage.deleteThrottleMetadata()];case 4:return _b.sent(),[2,response];case 5:e_1=_b.sent();e_1 instanceof util.FirebaseError?(_b=Number(e_1.httpStatus),_b=429===_b||500===_b||503===_b||504===_b):_b=!1;if(!_b)throw e_1;throttleMetadata={throttleEndTimeMillis:Date.now()+util.calculateBackoffMillis(backoffCount),backoffCount:backoffCount+1};return[4,this.storage.setThrottleMetadata(throttleMetadata)];case 6:return _b.sent(),\n[2,this.attemptFetch(request,throttleMetadata)];case 7:return[2]}})})};return RetryingClient}();registerRemoteConfig(require[\"default\"]);exports.registerRemoteConfig=registerRemoteConfig}","~:source","shadow$provide[\"module$node_modules$$firebase$remote_config$dist$index_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar firebase = require('@firebase/app');\nrequire('@firebase/installations');\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar logger = require('@firebase/logger');\nvar component = require('@firebase/component');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\r\n *\r\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\r\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\r\n * Cache API doesn't support matching entries by time.\r\n */\r\nvar CachingClient = /** @class */ (function () {\r\n    function CachingClient(client, storage, storageCache, logger) {\r\n        this.client = client;\r\n        this.storage = storage;\r\n        this.storageCache = storageCache;\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Returns true if the age of the cached fetched configs is less than or equal to\r\n     * {@link Settings#minimumFetchIntervalInSeconds}.\r\n     *\r\n     * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\r\n     * native Fetch API.\r\n     *\r\n     * <p>Visible for testing.\r\n     */\r\n    CachingClient.prototype.isCachedDataFresh = function (cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis) {\r\n        // Cache can only be fresh if it's populated.\r\n        if (!lastSuccessfulFetchTimestampMillis) {\r\n            this.logger.debug('Config fetch cache check. Cache unpopulated.');\r\n            return false;\r\n        }\r\n        // Calculates age of cache entry.\r\n        var cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\r\n        var isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\r\n        this.logger.debug('Config fetch cache check.' +\r\n            (\" Cache age millis: \" + cacheAgeMillis + \".\") +\r\n            (\" Cache max age millis (minimumFetchIntervalMillis setting): \" + cacheMaxAgeMillis + \".\") +\r\n            (\" Is cache hit: \" + isCachedDataFresh + \".\"));\r\n        return isCachedDataFresh;\r\n    };\r\n    CachingClient.prototype.fetch = function (request) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var _a, lastSuccessfulFetchTimestampMillis, lastSuccessfulFetchResponse, response, storageOperations;\r\n            return tslib.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.storage.getLastSuccessfulFetchTimestampMillis(),\r\n                            this.storage.getLastSuccessfulFetchResponse()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), lastSuccessfulFetchTimestampMillis = _a[0], lastSuccessfulFetchResponse = _a[1];\r\n                        // Exits early on cache hit.\r\n                        if (lastSuccessfulFetchResponse &&\r\n                            this.isCachedDataFresh(request.cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis)) {\r\n                            return [2 /*return*/, lastSuccessfulFetchResponse];\r\n                        }\r\n                        // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\r\n                        // that allows the caller to pass an ETag.\r\n                        request.eTag =\r\n                            lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\r\n                        return [4 /*yield*/, this.client.fetch(request)];\r\n                    case 2:\r\n                        response = _b.sent();\r\n                        storageOperations = [\r\n                            // Uses write-through cache for consistency with synchronous public API.\r\n                            this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())\r\n                        ];\r\n                        if (response.status === 200) {\r\n                            // Caches response only if it has changed, ie non-304 responses.\r\n                            storageOperations.push(this.storage.setLastSuccessfulFetchResponse(response));\r\n                        }\r\n                        return [4 /*yield*/, Promise.all(storageOperations)];\r\n                    case 3:\r\n                        _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return CachingClient;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"registration-window\" /* REGISTRATION_WINDOW */] = 'Undefined window object. This SDK only supports usage in a browser environment.',\r\n    _a[\"registration-project-id\" /* REGISTRATION_PROJECT_ID */] = 'Undefined project identifier. Check Firebase app initialization.',\r\n    _a[\"registration-api-key\" /* REGISTRATION_API_KEY */] = 'Undefined API key. Check Firebase app initialization.',\r\n    _a[\"registration-app-id\" /* REGISTRATION_APP_ID */] = 'Undefined app identifier. Check Firebase app initialization.',\r\n    _a[\"storage-open\" /* STORAGE_OPEN */] = 'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-get\" /* STORAGE_GET */] = 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-set\" /* STORAGE_SET */] = 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-delete\" /* STORAGE_DELETE */] = 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-client-network\" /* FETCH_NETWORK */] = 'Fetch client failed to connect to a network. Check Internet connection.' +\r\n        ' Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-timeout\" /* FETCH_TIMEOUT */] = 'The config fetch request timed out. ' +\r\n        ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.',\r\n    _a[\"fetch-throttle\" /* FETCH_THROTTLE */] = 'The config fetch request timed out while in an exponential backoff state.' +\r\n        ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.' +\r\n        ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\r\n    _a[\"fetch-client-parse\" /* FETCH_PARSE */] = 'Fetch client could not parse response.' +\r\n        ' Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-status\" /* FETCH_STATUS */] = 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',\r\n    _a);\r\nvar ERROR_FACTORY = new util.ErrorFactory('remoteconfig' /* service */, 'Remote Config' /* service name */, ERROR_DESCRIPTION_MAP);\r\n// Note how this is like typeof/instanceof, but for ErrorCode.\r\nfunction hasErrorCode(e, errorCode) {\r\n    return e instanceof util.FirebaseError && e.code.indexOf(errorCode) !== -1;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Attempts to get the most accurate browser language setting.\r\n *\r\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\r\n *\r\n * <p>Defers default language specification to server logic for consistency.\r\n *\r\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\r\n */\r\nfunction getUserLanguage(navigatorLanguage) {\r\n    if (navigatorLanguage === void 0) { navigatorLanguage = navigator; }\r\n    return (\r\n    // Most reliable, but only supported in Chrome/Firefox.\r\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\r\n        // Supported in most browsers, but returns the language of the browser\r\n        // UI, not the language set in browser settings.\r\n        navigatorLanguage.language\r\n    // Polyfill otherwise.\r\n    );\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements the Client abstraction for the Remote Config REST API.\r\n */\r\nvar RestClient = /** @class */ (function () {\r\n    function RestClient(firebaseInstallations, sdkVersion, namespace, projectId, apiKey, appId) {\r\n        this.firebaseInstallations = firebaseInstallations;\r\n        this.sdkVersion = sdkVersion;\r\n        this.namespace = namespace;\r\n        this.projectId = projectId;\r\n        this.apiKey = apiKey;\r\n        this.appId = appId;\r\n    }\r\n    /**\r\n     * Fetches from the Remote Config REST API.\r\n     *\r\n     * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\r\n     * connect to the network.\r\n     * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\r\n     * fetch response.\r\n     * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\r\n     */\r\n    RestClient.prototype.fetch = function (request) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var _a, installationId, installationToken, urlBase, url, headers, requestBody, options, fetchPromise, timeoutPromise, response, originalError_1, errorCode, status, responseEtag, config, state, responseBody, originalError_2;\r\n            return tslib.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.firebaseInstallations.getId(),\r\n                            this.firebaseInstallations.getToken()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), installationId = _a[0], installationToken = _a[1];\r\n                        urlBase = window.FIREBASE_REMOTE_CONFIG_URL_BASE ||\r\n                            'https://firebaseremoteconfig.googleapis.com';\r\n                        url = urlBase + \"/v1/projects/\" + this.projectId + \"/namespaces/\" + this.namespace + \":fetch?key=\" + this.apiKey;\r\n                        headers = {\r\n                            'Content-Type': 'application/json',\r\n                            'Content-Encoding': 'gzip',\r\n                            // Deviates from pure decorator by not passing max-age header since we don't currently have\r\n                            // service behavior using that header.\r\n                            'If-None-Match': request.eTag || '*'\r\n                        };\r\n                        requestBody = {\r\n                            /* eslint-disable camelcase */\r\n                            sdk_version: this.sdkVersion,\r\n                            app_instance_id: installationId,\r\n                            app_instance_id_token: installationToken,\r\n                            app_id: this.appId,\r\n                            language_code: getUserLanguage()\r\n                            /* eslint-enable camelcase */\r\n                        };\r\n                        options = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: JSON.stringify(requestBody)\r\n                        };\r\n                        fetchPromise = fetch(url, options);\r\n                        timeoutPromise = new Promise(function (_resolve, reject) {\r\n                            // Maps async event listener to Promise API.\r\n                            request.signal.addEventListener(function () {\r\n                                // Emulates https://heycam.github.io/webidl/#aborterror\r\n                                var error = new Error('The operation was aborted.');\r\n                                error.name = 'AbortError';\r\n                                reject(error);\r\n                            });\r\n                        });\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 5, , 6]);\r\n                        return [4 /*yield*/, Promise.race([fetchPromise, timeoutPromise])];\r\n                    case 3:\r\n                        _b.sent();\r\n                        return [4 /*yield*/, fetchPromise];\r\n                    case 4:\r\n                        response = _b.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        originalError_1 = _b.sent();\r\n                        errorCode = \"fetch-client-network\" /* FETCH_NETWORK */;\r\n                        if (originalError_1.name === 'AbortError') {\r\n                            errorCode = \"fetch-timeout\" /* FETCH_TIMEOUT */;\r\n                        }\r\n                        throw ERROR_FACTORY.create(errorCode, {\r\n                            originalErrorMessage: originalError_1.message\r\n                        });\r\n                    case 6:\r\n                        status = response.status;\r\n                        responseEtag = response.headers.get('ETag') || undefined;\r\n                        if (!(response.status === 200)) return [3 /*break*/, 11];\r\n                        responseBody = void 0;\r\n                        _b.label = 7;\r\n                    case 7:\r\n                        _b.trys.push([7, 9, , 10]);\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 8:\r\n                        responseBody = _b.sent();\r\n                        return [3 /*break*/, 10];\r\n                    case 9:\r\n                        originalError_2 = _b.sent();\r\n                        throw ERROR_FACTORY.create(\"fetch-client-parse\" /* FETCH_PARSE */, {\r\n                            originalErrorMessage: originalError_2.message\r\n                        });\r\n                    case 10:\r\n                        config = responseBody['entries'];\r\n                        state = responseBody['state'];\r\n                        _b.label = 11;\r\n                    case 11:\r\n                        // Normalizes based on legacy state.\r\n                        if (state === 'INSTANCE_STATE_UNSPECIFIED') {\r\n                            status = 500;\r\n                        }\r\n                        else if (state === 'NO_CHANGE') {\r\n                            status = 304;\r\n                        }\r\n                        else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\r\n                            // These cases can be fixed remotely, so normalize to safe value.\r\n                            config = {};\r\n                        }\r\n                        // Normalize to exception-based control flow for non-success cases.\r\n                        // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\r\n                        // differentiating success states (200 from 304; the state body param is undefined in a\r\n                        // standard 304).\r\n                        if (status !== 304 && status !== 200) {\r\n                            throw ERROR_FACTORY.create(\"fetch-status\" /* FETCH_STATUS */, {\r\n                                httpStatus: status\r\n                            });\r\n                        }\r\n                        return [2 /*return*/, { status: status, eTag: responseEtag, config: config }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RestClient;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Shims a minimal AbortSignal.\r\n *\r\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\r\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\r\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\r\n * swapped out if/when we do.\r\n */\r\nvar RemoteConfigAbortSignal = /** @class */ (function () {\r\n    function RemoteConfigAbortSignal() {\r\n        this.listeners = [];\r\n    }\r\n    RemoteConfigAbortSignal.prototype.addEventListener = function (listener) {\r\n        this.listeners.push(listener);\r\n    };\r\n    RemoteConfigAbortSignal.prototype.abort = function () {\r\n        this.listeners.forEach(function (listener) { return listener(); });\r\n    };\r\n    return RemoteConfigAbortSignal;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_VALUE_FOR_BOOLEAN = false;\r\nvar DEFAULT_VALUE_FOR_STRING = '';\r\nvar DEFAULT_VALUE_FOR_NUMBER = 0;\r\nvar BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\r\nvar Value = /** @class */ (function () {\r\n    function Value(_source, _value) {\r\n        if (_value === void 0) { _value = DEFAULT_VALUE_FOR_STRING; }\r\n        this._source = _source;\r\n        this._value = _value;\r\n    }\r\n    Value.prototype.asString = function () {\r\n        return this._value;\r\n    };\r\n    Value.prototype.asBoolean = function () {\r\n        if (this._source === 'static') {\r\n            return DEFAULT_VALUE_FOR_BOOLEAN;\r\n        }\r\n        return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\r\n    };\r\n    Value.prototype.asNumber = function () {\r\n        if (this._source === 'static') {\r\n            return DEFAULT_VALUE_FOR_NUMBER;\r\n        }\r\n        var num = Number(this._value);\r\n        if (isNaN(num)) {\r\n            num = DEFAULT_VALUE_FOR_NUMBER;\r\n        }\r\n        return num;\r\n    };\r\n    Value.prototype.getSource = function () {\r\n        return this._source;\r\n    };\r\n    return Value;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\r\nvar DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\r\n/**\r\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\r\n *\r\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\r\n */\r\nvar RemoteConfig = /** @class */ (function () {\r\n    function RemoteConfig(\r\n    // Required by FirebaseServiceFactory interface.\r\n    app, \r\n    // JS doesn't support private yet\r\n    // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\r\n    // underscore prefix.\r\n    _client, _storageCache, _storage, _logger) {\r\n        this.app = app;\r\n        this._client = _client;\r\n        this._storageCache = _storageCache;\r\n        this._storage = _storage;\r\n        this._logger = _logger;\r\n        // Tracks completion of initialization promise.\r\n        this._isInitializationComplete = false;\r\n        this.settings = {\r\n            fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\r\n            minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\r\n        };\r\n        this.defaultConfig = {};\r\n    }\r\n    // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\r\n    // to differentiate 2p and 3p use-cases.\r\n    RemoteConfig.prototype.setLogLevel = function (logLevel) {\r\n        switch (logLevel) {\r\n            case 'debug':\r\n                this._logger.logLevel = logger.LogLevel.DEBUG;\r\n                break;\r\n            case 'silent':\r\n                this._logger.logLevel = logger.LogLevel.SILENT;\r\n                break;\r\n            default:\r\n                this._logger.logLevel = logger.LogLevel.ERROR;\r\n        }\r\n    };\r\n    Object.defineProperty(RemoteConfig.prototype, \"fetchTimeMillis\", {\r\n        get: function () {\r\n            return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RemoteConfig.prototype, \"lastFetchStatus\", {\r\n        get: function () {\r\n            return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    RemoteConfig.prototype.activate = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var _a, lastSuccessfulFetchResponse, activeConfigEtag;\r\n            return tslib.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this._storage.getLastSuccessfulFetchResponse(),\r\n                            this._storage.getActiveConfigEtag()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), lastSuccessfulFetchResponse = _a[0], activeConfigEtag = _a[1];\r\n                        if (!lastSuccessfulFetchResponse ||\r\n                            !lastSuccessfulFetchResponse.config ||\r\n                            !lastSuccessfulFetchResponse.eTag ||\r\n                            lastSuccessfulFetchResponse.eTag === activeConfigEtag) {\r\n                            // Either there is no successful fetched config, or is the same as current active\r\n                            // config.\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        return [4 /*yield*/, Promise.all([\r\n                                this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config),\r\n                                this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)\r\n                            ])];\r\n                    case 2:\r\n                        _b.sent();\r\n                        return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.ensureInitialized = function () {\r\n        var _this = this;\r\n        if (!this._initializePromise) {\r\n            this._initializePromise = this._storageCache\r\n                .loadFromStorage()\r\n                .then(function () {\r\n                _this._isInitializationComplete = true;\r\n            });\r\n        }\r\n        return this._initializePromise;\r\n    };\r\n    /**\r\n     * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\r\n     * {@link Settings.fetchTimeoutInSeconds} or\r\n     * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\r\n     */\r\n    RemoteConfig.prototype.fetch = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var abortSignal, e_1, lastFetchStatus;\r\n            var _this = this;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        abortSignal = new RemoteConfigAbortSignal();\r\n                        setTimeout(function () { return tslib.__awaiter(_this, void 0, void 0, function () {\r\n                            return tslib.__generator(this, function (_a) {\r\n                                // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\r\n                                abortSignal.abort();\r\n                                return [2 /*return*/];\r\n                            });\r\n                        }); }, this.settings.fetchTimeoutMillis);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 6]);\r\n                        return [4 /*yield*/, this._client.fetch({\r\n                                cacheMaxAgeMillis: this.settings.minimumFetchIntervalMillis,\r\n                                signal: abortSignal\r\n                            })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this._storageCache.setLastFetchStatus('success')];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        lastFetchStatus = hasErrorCode(e_1, \"fetch-throttle\" /* FETCH_THROTTLE */)\r\n                            ? 'throttle'\r\n                            : 'failure';\r\n                        return [4 /*yield*/, this._storageCache.setLastFetchStatus(lastFetchStatus)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        throw e_1;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.fetchAndActivate = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.fetch()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, this.activate()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.getAll = function () {\r\n        var _this = this;\r\n        return getAllKeys(this._storageCache.getActiveConfig(), this.defaultConfig).reduce(function (allConfigs, key) {\r\n            allConfigs[key] = _this.getValue(key);\r\n            return allConfigs;\r\n        }, {});\r\n    };\r\n    RemoteConfig.prototype.getBoolean = function (key) {\r\n        return this.getValue(key).asBoolean();\r\n    };\r\n    RemoteConfig.prototype.getNumber = function (key) {\r\n        return this.getValue(key).asNumber();\r\n    };\r\n    RemoteConfig.prototype.getString = function (key) {\r\n        return this.getValue(key).asString();\r\n    };\r\n    RemoteConfig.prototype.getValue = function (key) {\r\n        if (!this._isInitializationComplete) {\r\n            this._logger.debug(\"A value was requested for key \\\"\" + key + \"\\\" before SDK initialization completed.\" +\r\n                ' Await on ensureInitialized if the intent was to get a previously activated value.');\r\n        }\r\n        var activeConfig = this._storageCache.getActiveConfig();\r\n        if (activeConfig && activeConfig[key] !== undefined) {\r\n            return new Value('remote', activeConfig[key]);\r\n        }\r\n        else if (this.defaultConfig && this.defaultConfig[key] !== undefined) {\r\n            return new Value('default', String(this.defaultConfig[key]));\r\n        }\r\n        this._logger.debug(\"Returning static value for key \\\"\" + key + \"\\\".\" +\r\n            ' Define a default or remote value if this is unintentional.');\r\n        return new Value('static');\r\n    };\r\n    return RemoteConfig;\r\n}());\r\n/**\r\n * Dedupes and returns an array of all the keys of the received objects.\r\n */\r\nfunction getAllKeys(obj1, obj2) {\r\n    if (obj1 === void 0) { obj1 = {}; }\r\n    if (obj2 === void 0) { obj2 = {}; }\r\n    return Object.keys(tslib.__assign(tslib.__assign({}, obj1), obj2));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\r\n */\r\nfunction toFirebaseError(event, errorCode) {\r\n    var originalError = event.target.error || undefined;\r\n    return ERROR_FACTORY.create(errorCode, {\r\n        originalErrorMessage: originalError && originalError.message\r\n    });\r\n}\r\n/**\r\n * A general-purpose store keyed by app + namespace + {@link\r\n * ProjectNamespaceKeyFieldValue}.\r\n *\r\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\r\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\r\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\r\n *\r\n * <p>Visible for testing.\r\n */\r\nvar APP_NAMESPACE_STORE = 'app_namespace_store';\r\nvar DB_NAME = 'firebase_remote_config';\r\nvar DB_VERSION = 1;\r\n// Visible for testing.\r\nfunction openDatabase() {\r\n    return new Promise(function (resolve, reject) {\r\n        var request = indexedDB.open(DB_NAME, DB_VERSION);\r\n        request.onerror = function (event) {\r\n            reject(toFirebaseError(event, \"storage-open\" /* STORAGE_OPEN */));\r\n        };\r\n        request.onsuccess = function (event) {\r\n            resolve(event.target.result);\r\n        };\r\n        request.onupgradeneeded = function (event) {\r\n            var db = event.target.result;\r\n            // We don't use 'break' in this switch statement, the fall-through\r\n            // behavior is what we want, because if there are multiple versions between\r\n            // the old version and the current version, we want ALL the migrations\r\n            // that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (event.oldVersion) {\r\n                case 0:\r\n                    db.createObjectStore(APP_NAMESPACE_STORE, {\r\n                        keyPath: 'compositeKey'\r\n                    });\r\n            }\r\n        };\r\n    });\r\n}\r\n/**\r\n * Abstracts data persistence.\r\n */\r\nvar Storage = /** @class */ (function () {\r\n    /**\r\n     * @param appId enables storage segmentation by app (ID + name).\r\n     * @param appName enables storage segmentation by app (ID + name).\r\n     * @param namespace enables storage segmentation by namespace.\r\n     */\r\n    function Storage(appId, appName, namespace, openDbPromise) {\r\n        if (openDbPromise === void 0) { openDbPromise = openDatabase(); }\r\n        this.appId = appId;\r\n        this.appName = appName;\r\n        this.namespace = namespace;\r\n        this.openDbPromise = openDbPromise;\r\n    }\r\n    Storage.prototype.getLastFetchStatus = function () {\r\n        return this.get('last_fetch_status');\r\n    };\r\n    Storage.prototype.setLastFetchStatus = function (status) {\r\n        return this.set('last_fetch_status', status);\r\n    };\r\n    // This is comparable to a cache entry timestamp. If we need to expire other data, we could\r\n    // consider adding timestamp to all storage records and an optional max age arg to getters.\r\n    Storage.prototype.getLastSuccessfulFetchTimestampMillis = function () {\r\n        return this.get('last_successful_fetch_timestamp_millis');\r\n    };\r\n    Storage.prototype.setLastSuccessfulFetchTimestampMillis = function (timestamp) {\r\n        return this.set('last_successful_fetch_timestamp_millis', timestamp);\r\n    };\r\n    Storage.prototype.getLastSuccessfulFetchResponse = function () {\r\n        return this.get('last_successful_fetch_response');\r\n    };\r\n    Storage.prototype.setLastSuccessfulFetchResponse = function (response) {\r\n        return this.set('last_successful_fetch_response', response);\r\n    };\r\n    Storage.prototype.getActiveConfig = function () {\r\n        return this.get('active_config');\r\n    };\r\n    Storage.prototype.setActiveConfig = function (config) {\r\n        return this.set('active_config', config);\r\n    };\r\n    Storage.prototype.getActiveConfigEtag = function () {\r\n        return this.get('active_config_etag');\r\n    };\r\n    Storage.prototype.setActiveConfigEtag = function (etag) {\r\n        return this.set('active_config_etag', etag);\r\n    };\r\n    Storage.prototype.getThrottleMetadata = function () {\r\n        return this.get('throttle_metadata');\r\n    };\r\n    Storage.prototype.setThrottleMetadata = function (metadata) {\r\n        return this.set('throttle_metadata', metadata);\r\n    };\r\n    Storage.prototype.deleteThrottleMetadata = function () {\r\n        return this.delete('throttle_metadata');\r\n    };\r\n    Storage.prototype.get = function (key) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.get(compositeKey);\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-get\" /* STORAGE_GET */));\r\n                                    };\r\n                                    request.onsuccess = function (event) {\r\n                                        var result = event.target.result;\r\n                                        if (result) {\r\n                                            resolve(result.value);\r\n                                        }\r\n                                        else {\r\n                                            resolve(undefined);\r\n                                        }\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-get\" /* STORAGE_GET */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Storage.prototype.set = function (key, value) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.put({\r\n                                        compositeKey: compositeKey,\r\n                                        value: value\r\n                                    });\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-set\" /* STORAGE_SET */));\r\n                                    };\r\n                                    request.onsuccess = function () {\r\n                                        resolve();\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-set\" /* STORAGE_SET */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Storage.prototype.delete = function (key) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.delete(compositeKey);\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-delete\" /* STORAGE_DELETE */));\r\n                                    };\r\n                                    request.onsuccess = function () {\r\n                                        resolve();\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-delete\" /* STORAGE_DELETE */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Facilitates composite key functionality (which is unsupported in IE).\r\n    Storage.prototype.createCompositeKey = function (key) {\r\n        return [this.appId, this.appName, this.namespace, key].join();\r\n    };\r\n    return Storage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\r\n */\r\nvar StorageCache = /** @class */ (function () {\r\n    function StorageCache(storage) {\r\n        this.storage = storage;\r\n    }\r\n    /**\r\n     * Memory-only getters\r\n     */\r\n    StorageCache.prototype.getLastFetchStatus = function () {\r\n        return this.lastFetchStatus;\r\n    };\r\n    StorageCache.prototype.getLastSuccessfulFetchTimestampMillis = function () {\r\n        return this.lastSuccessfulFetchTimestampMillis;\r\n    };\r\n    StorageCache.prototype.getActiveConfig = function () {\r\n        return this.activeConfig;\r\n    };\r\n    /**\r\n     * Read-ahead getter\r\n     */\r\n    StorageCache.prototype.loadFromStorage = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var lastFetchStatusPromise, lastSuccessfulFetchTimestampMillisPromise, activeConfigPromise, lastFetchStatus, lastSuccessfulFetchTimestampMillis, activeConfig;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        lastFetchStatusPromise = this.storage.getLastFetchStatus();\r\n                        lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\r\n                        activeConfigPromise = this.storage.getActiveConfig();\r\n                        return [4 /*yield*/, lastFetchStatusPromise];\r\n                    case 1:\r\n                        lastFetchStatus = _a.sent();\r\n                        if (lastFetchStatus) {\r\n                            this.lastFetchStatus = lastFetchStatus;\r\n                        }\r\n                        return [4 /*yield*/, lastSuccessfulFetchTimestampMillisPromise];\r\n                    case 2:\r\n                        lastSuccessfulFetchTimestampMillis = _a.sent();\r\n                        if (lastSuccessfulFetchTimestampMillis) {\r\n                            this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\r\n                        }\r\n                        return [4 /*yield*/, activeConfigPromise];\r\n                    case 3:\r\n                        activeConfig = _a.sent();\r\n                        if (activeConfig) {\r\n                            this.activeConfig = activeConfig;\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Write-through setters\r\n     */\r\n    StorageCache.prototype.setLastFetchStatus = function (status) {\r\n        this.lastFetchStatus = status;\r\n        return this.storage.setLastFetchStatus(status);\r\n    };\r\n    StorageCache.prototype.setLastSuccessfulFetchTimestampMillis = function (timestampMillis) {\r\n        this.lastSuccessfulFetchTimestampMillis = timestampMillis;\r\n        return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\r\n    };\r\n    StorageCache.prototype.setActiveConfig = function (activeConfig) {\r\n        this.activeConfig = activeConfig;\r\n        return this.storage.setActiveConfig(activeConfig);\r\n    };\r\n    return StorageCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Supports waiting on a backoff by:\r\n *\r\n * <ul>\r\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\r\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\r\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\r\n *       request appear the same.</li>\r\n * </ul>\r\n *\r\n * <p>Visible for testing.\r\n */\r\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\r\n    return new Promise(function (resolve, reject) {\r\n        // Derives backoff from given end time, normalizing negative numbers to zero.\r\n        var backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\r\n        var timeout = setTimeout(resolve, backoffMillis);\r\n        // Adds listener, rather than sets onabort, because signal is a shared object.\r\n        signal.addEventListener(function () {\r\n            clearTimeout(timeout);\r\n            // If the request completes before this timeout, the rejection has no effect.\r\n            reject(ERROR_FACTORY.create(\"fetch-throttle\" /* FETCH_THROTTLE */, {\r\n                throttleEndTimeMillis: throttleEndTimeMillis\r\n            }));\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\r\n */\r\nfunction isRetriableError(e) {\r\n    if (!(e instanceof util.FirebaseError)) {\r\n        return false;\r\n    }\r\n    // Uses string index defined by ErrorData, which FirebaseError implements.\r\n    var httpStatus = Number(e['httpStatus']);\r\n    return (httpStatus === 429 ||\r\n        httpStatus === 500 ||\r\n        httpStatus === 503 ||\r\n        httpStatus === 504);\r\n}\r\n/**\r\n * Decorates a Client with retry logic.\r\n *\r\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\r\n * responses (because the SDK has no use for error responses).\r\n */\r\nvar RetryingClient = /** @class */ (function () {\r\n    function RetryingClient(client, storage) {\r\n        this.client = client;\r\n        this.storage = storage;\r\n    }\r\n    RetryingClient.prototype.fetch = function (request) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var throttleMetadata;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.storage.getThrottleMetadata()];\r\n                    case 1:\r\n                        throttleMetadata = (_a.sent()) || {\r\n                            backoffCount: 0,\r\n                            throttleEndTimeMillis: Date.now()\r\n                        };\r\n                        return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * A recursive helper for attempting a fetch request repeatedly.\r\n     *\r\n     * @throws any non-retriable errors.\r\n     */\r\n    RetryingClient.prototype.attemptFetch = function (request, _a) {\r\n        var throttleEndTimeMillis = _a.throttleEndTimeMillis, backoffCount = _a.backoffCount;\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var response, e_1, throttleMetadata;\r\n            return tslib.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: \r\n                    // Starts with a (potentially zero) timeout to support resumption from stored state.\r\n                    // Ensures the throttle end time is honored if the last attempt timed out.\r\n                    // Note the SDK will never make a request if the fetch timeout expires at this point.\r\n                    return [4 /*yield*/, setAbortableTimeout(request.signal, throttleEndTimeMillis)];\r\n                    case 1:\r\n                        // Starts with a (potentially zero) timeout to support resumption from stored state.\r\n                        // Ensures the throttle end time is honored if the last attempt timed out.\r\n                        // Note the SDK will never make a request if the fetch timeout expires at this point.\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 5, , 7]);\r\n                        return [4 /*yield*/, this.client.fetch(request)];\r\n                    case 3:\r\n                        response = _b.sent();\r\n                        // Note the SDK only clears throttle state if response is success or non-retriable.\r\n                        return [4 /*yield*/, this.storage.deleteThrottleMetadata()];\r\n                    case 4:\r\n                        // Note the SDK only clears throttle state if response is success or non-retriable.\r\n                        _b.sent();\r\n                        return [2 /*return*/, response];\r\n                    case 5:\r\n                        e_1 = _b.sent();\r\n                        if (!isRetriableError(e_1)) {\r\n                            throw e_1;\r\n                        }\r\n                        throttleMetadata = {\r\n                            throttleEndTimeMillis: Date.now() + util.calculateBackoffMillis(backoffCount),\r\n                            backoffCount: backoffCount + 1\r\n                        };\r\n                        // Persists state.\r\n                        return [4 /*yield*/, this.storage.setThrottleMetadata(throttleMetadata)];\r\n                    case 6:\r\n                        // Persists state.\r\n                        _b.sent();\r\n                        return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RetryingClient;\r\n}());\n\nvar name = \"@firebase/remote-config\";\nvar version = \"0.1.28\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerRemoteConfig(firebaseInstance) {\r\n    firebaseInstance.INTERNAL.registerComponent(new component.Component('remoteConfig', remoteConfigFactory, \"PUBLIC\" /* PUBLIC */).setMultipleInstances(true));\r\n    firebaseInstance.registerVersion(name, version);\r\n    function remoteConfigFactory(container, namespace) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        // The following call will always succeed because rc has `import '@firebase/installations'`\r\n        var installations = container.getProvider('installations').getImmediate();\r\n        // Guards against the SDK being used in non-browser environments.\r\n        if (typeof window === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"registration-window\" /* REGISTRATION_WINDOW */);\r\n        }\r\n        // Normalizes optional inputs.\r\n        var _a = app.options, projectId = _a.projectId, apiKey = _a.apiKey, appId = _a.appId;\r\n        if (!projectId) {\r\n            throw ERROR_FACTORY.create(\"registration-project-id\" /* REGISTRATION_PROJECT_ID */);\r\n        }\r\n        if (!apiKey) {\r\n            throw ERROR_FACTORY.create(\"registration-api-key\" /* REGISTRATION_API_KEY */);\r\n        }\r\n        if (!appId) {\r\n            throw ERROR_FACTORY.create(\"registration-app-id\" /* REGISTRATION_APP_ID */);\r\n        }\r\n        namespace = namespace || 'firebase';\r\n        var storage = new Storage(appId, app.name, namespace);\r\n        var storageCache = new StorageCache(storage);\r\n        var logger$1 = new logger.Logger(name);\r\n        // Sets ERROR as the default log level.\r\n        // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\r\n        logger$1.logLevel = logger.LogLevel.ERROR;\r\n        var restClient = new RestClient(installations, \r\n        // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\r\n        firebaseInstance.SDK_VERSION, namespace, projectId, apiKey, appId);\r\n        var retryingClient = new RetryingClient(restClient, storage);\r\n        var cachingClient = new CachingClient(retryingClient, storage, storageCache, logger$1);\r\n        var remoteConfigInstance = new RemoteConfig(app, cachingClient, storageCache, storage, logger$1);\r\n        // Starts warming cache.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        remoteConfigInstance.ensureInitialized();\r\n        return remoteConfigInstance;\r\n    }\r\n}\r\nregisterRemoteConfig(firebase__default['default']);\n\nexports.registerRemoteConfig = registerRemoteConfig;\n//# sourceMappingURL=index.cjs.js.map\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$tslib$tslib","~$shadow.js","~$module$node_modules$$firebase$installations$dist$index_cjs","~$module$node_modules$$firebase$component$dist$index_cjs","~$module$node_modules$$firebase$app$dist$index_cjs","~$module$node_modules$$firebase$util$dist$index_cjs","~$module$node_modules$$firebase$logger$dist$index_cjs"]],"~:properties",["^5",["setThrottleMetadata","getLastSuccessfulFetchTimestampMillis","registerRemoteConfig","fetch","eTag","setLastSuccessfulFetchTimestampMillis","fetchTimeMillis","firebaseInstallations","lastSuccessfulFetchTimestampMillis","onerror","body","config","getLastFetchStatus","getLastSuccessfulFetchResponse","logLevel","_value","delete","activate","settings","openDbPromise","httpStatus","deleteThrottleMetadata","onsuccess","getString","label","method","minimumFetchIntervalMillis","getNumber","__esModule","setLastFetchStatus","storage","getAll","asNumber","fetchTimeoutMillis","getValue","compositeKey","signal","defaultConfig","keyPath","name","appName","configurable","attemptFetch","cacheMaxAgeMillis","isCachedDataFresh","_source","value","loadFromStorage","onupgradeneeded","enumerable","getSource","setActiveConfig","getActiveConfigEtag","status","fetchAndActivate","setActiveConfigEtag","_client","setLastSuccessfulFetchResponse","logger","activeConfig","apiKey","createCompositeKey","app_instance_id_token","_initializePromise","appId","app","throttleEndTimeMillis","_storageCache","_logger","getThrottleMetadata","setLogLevel","_isInitializationComplete","set","getBoolean","asBoolean","lastFetchStatus","abort","projectId","originalErrorMessage","_storage","namespace","sdkVersion","app_id","app_instance_id","storageCache","addEventListener","client","getActiveConfig","listeners","get","backoffCount","asString","ensureInitialized","sdk_version","language_code","headers"]],"~:compiled-at",1627829695429,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$firebase$remote_config$dist$index_cjs.js\",\n\"lineCount\":43,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@firebase/remote-config/dist/index.cjs.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$firebase$remote_config$dist$index_cjs\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nObject.defineProperty(exports, '__esModule', { value: true });\\n\\nvar firebase = require('@firebase/app');\\nrequire('@firebase/installations');\\nvar tslib = require('tslib');\\nvar util = require('@firebase/util');\\nvar logger = require('@firebase/logger');\\nvar component = require('@firebase/component');\\n\\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\\n\\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\\r\\n *\\r\\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\\r\\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\\r\\n * Cache API doesn't support matching entries by time.\\r\\n */\\r\\nvar CachingClient = /** @class */ (function () {\\r\\n    function CachingClient(client, storage, storageCache, logger) {\\r\\n        this.client = client;\\r\\n        this.storage = storage;\\r\\n        this.storageCache = storageCache;\\r\\n        this.logger = logger;\\r\\n    }\\r\\n    /**\\r\\n     * Returns true if the age of the cached fetched configs is less than or equal to\\r\\n     * {@link Settings#minimumFetchIntervalInSeconds}.\\r\\n     *\\r\\n     * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\\r\\n     * native Fetch API.\\r\\n     *\\r\\n     * <p>Visible for testing.\\r\\n     */\\r\\n    CachingClient.prototype.isCachedDataFresh = function (cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis) {\\r\\n        // Cache can only be fresh if it's populated.\\r\\n        if (!lastSuccessfulFetchTimestampMillis) {\\r\\n            this.logger.debug('Config fetch cache check. Cache unpopulated.');\\r\\n            return false;\\r\\n        }\\r\\n        // Calculates age of cache entry.\\r\\n        var cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\\r\\n        var isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\\r\\n        this.logger.debug('Config fetch cache check.' +\\r\\n            (\\\" Cache age millis: \\\" + cacheAgeMillis + \\\".\\\") +\\r\\n            (\\\" Cache max age millis (minimumFetchIntervalMillis setting): \\\" + cacheMaxAgeMillis + \\\".\\\") +\\r\\n            (\\\" Is cache hit: \\\" + isCachedDataFresh + \\\".\\\"));\\r\\n        return isCachedDataFresh;\\r\\n    };\\r\\n    CachingClient.prototype.fetch = function (request) {\\r\\n        return tslib.__awaiter(this, void 0, void 0, function () {\\r\\n            var _a, lastSuccessfulFetchTimestampMillis, lastSuccessfulFetchResponse, response, storageOperations;\\r\\n            return tslib.__generator(this, function (_b) {\\r\\n                switch (_b.label) {\\r\\n                    case 0: return [4 /*yield*/, Promise.all([\\r\\n                            this.storage.getLastSuccessfulFetchTimestampMillis(),\\r\\n                            this.storage.getLastSuccessfulFetchResponse()\\r\\n                        ])];\\r\\n                    case 1:\\r\\n                        _a = _b.sent(), lastSuccessfulFetchTimestampMillis = _a[0], lastSuccessfulFetchResponse = _a[1];\\r\\n                        // Exits early on cache hit.\\r\\n                        if (lastSuccessfulFetchResponse &&\\r\\n                            this.isCachedDataFresh(request.cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis)) {\\r\\n                            return [2 /*return*/, lastSuccessfulFetchResponse];\\r\\n                        }\\r\\n                        // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\\r\\n                        // that allows the caller to pass an ETag.\\r\\n                        request.eTag =\\r\\n                            lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\\r\\n                        return [4 /*yield*/, this.client.fetch(request)];\\r\\n                    case 2:\\r\\n                        response = _b.sent();\\r\\n                        storageOperations = [\\r\\n                            // Uses write-through cache for consistency with synchronous public API.\\r\\n                            this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())\\r\\n                        ];\\r\\n                        if (response.status === 200) {\\r\\n                            // Caches response only if it has changed, ie non-304 responses.\\r\\n                            storageOperations.push(this.storage.setLastSuccessfulFetchResponse(response));\\r\\n                        }\\r\\n                        return [4 /*yield*/, Promise.all(storageOperations)];\\r\\n                    case 3:\\r\\n                        _b.sent();\\r\\n                        return [2 /*return*/, response];\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    };\\r\\n    return CachingClient;\\r\\n}());\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar _a;\\r\\nvar ERROR_DESCRIPTION_MAP = (_a = {},\\r\\n    _a[\\\"registration-window\\\" /* REGISTRATION_WINDOW */] = 'Undefined window object. This SDK only supports usage in a browser environment.',\\r\\n    _a[\\\"registration-project-id\\\" /* REGISTRATION_PROJECT_ID */] = 'Undefined project identifier. Check Firebase app initialization.',\\r\\n    _a[\\\"registration-api-key\\\" /* REGISTRATION_API_KEY */] = 'Undefined API key. Check Firebase app initialization.',\\r\\n    _a[\\\"registration-app-id\\\" /* REGISTRATION_APP_ID */] = 'Undefined app identifier. Check Firebase app initialization.',\\r\\n    _a[\\\"storage-open\\\" /* STORAGE_OPEN */] = 'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\\r\\n    _a[\\\"storage-get\\\" /* STORAGE_GET */] = 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\\r\\n    _a[\\\"storage-set\\\" /* STORAGE_SET */] = 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\\r\\n    _a[\\\"storage-delete\\\" /* STORAGE_DELETE */] = 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',\\r\\n    _a[\\\"fetch-client-network\\\" /* FETCH_NETWORK */] = 'Fetch client failed to connect to a network. Check Internet connection.' +\\r\\n        ' Original error: {$originalErrorMessage}.',\\r\\n    _a[\\\"fetch-timeout\\\" /* FETCH_TIMEOUT */] = 'The config fetch request timed out. ' +\\r\\n        ' Configure timeout using \\\"fetchTimeoutMillis\\\" SDK setting.',\\r\\n    _a[\\\"fetch-throttle\\\" /* FETCH_THROTTLE */] = 'The config fetch request timed out while in an exponential backoff state.' +\\r\\n        ' Configure timeout using \\\"fetchTimeoutMillis\\\" SDK setting.' +\\r\\n        ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\\r\\n    _a[\\\"fetch-client-parse\\\" /* FETCH_PARSE */] = 'Fetch client could not parse response.' +\\r\\n        ' Original error: {$originalErrorMessage}.',\\r\\n    _a[\\\"fetch-status\\\" /* FETCH_STATUS */] = 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',\\r\\n    _a);\\r\\nvar ERROR_FACTORY = new util.ErrorFactory('remoteconfig' /* service */, 'Remote Config' /* service name */, ERROR_DESCRIPTION_MAP);\\r\\n// Note how this is like typeof/instanceof, but for ErrorCode.\\r\\nfunction hasErrorCode(e, errorCode) {\\r\\n    return e instanceof util.FirebaseError && e.code.indexOf(errorCode) !== -1;\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * Attempts to get the most accurate browser language setting.\\r\\n *\\r\\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\\r\\n *\\r\\n * <p>Defers default language specification to server logic for consistency.\\r\\n *\\r\\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\\r\\n */\\r\\nfunction getUserLanguage(navigatorLanguage) {\\r\\n    if (navigatorLanguage === void 0) { navigatorLanguage = navigator; }\\r\\n    return (\\r\\n    // Most reliable, but only supported in Chrome/Firefox.\\r\\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\\r\\n        // Supported in most browsers, but returns the language of the browser\\r\\n        // UI, not the language set in browser settings.\\r\\n        navigatorLanguage.language\\r\\n    // Polyfill otherwise.\\r\\n    );\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * Implements the Client abstraction for the Remote Config REST API.\\r\\n */\\r\\nvar RestClient = /** @class */ (function () {\\r\\n    function RestClient(firebaseInstallations, sdkVersion, namespace, projectId, apiKey, appId) {\\r\\n        this.firebaseInstallations = firebaseInstallations;\\r\\n        this.sdkVersion = sdkVersion;\\r\\n        this.namespace = namespace;\\r\\n        this.projectId = projectId;\\r\\n        this.apiKey = apiKey;\\r\\n        this.appId = appId;\\r\\n    }\\r\\n    /**\\r\\n     * Fetches from the Remote Config REST API.\\r\\n     *\\r\\n     * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\\r\\n     * connect to the network.\\r\\n     * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\\r\\n     * fetch response.\\r\\n     * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\\r\\n     */\\r\\n    RestClient.prototype.fetch = function (request) {\\r\\n        return tslib.__awaiter(this, void 0, void 0, function () {\\r\\n            var _a, installationId, installationToken, urlBase, url, headers, requestBody, options, fetchPromise, timeoutPromise, response, originalError_1, errorCode, status, responseEtag, config, state, responseBody, originalError_2;\\r\\n            return tslib.__generator(this, function (_b) {\\r\\n                switch (_b.label) {\\r\\n                    case 0: return [4 /*yield*/, Promise.all([\\r\\n                            this.firebaseInstallations.getId(),\\r\\n                            this.firebaseInstallations.getToken()\\r\\n                        ])];\\r\\n                    case 1:\\r\\n                        _a = _b.sent(), installationId = _a[0], installationToken = _a[1];\\r\\n                        urlBase = window.FIREBASE_REMOTE_CONFIG_URL_BASE ||\\r\\n                            'https://firebaseremoteconfig.googleapis.com';\\r\\n                        url = urlBase + \\\"/v1/projects/\\\" + this.projectId + \\\"/namespaces/\\\" + this.namespace + \\\":fetch?key=\\\" + this.apiKey;\\r\\n                        headers = {\\r\\n                            'Content-Type': 'application/json',\\r\\n                            'Content-Encoding': 'gzip',\\r\\n                            // Deviates from pure decorator by not passing max-age header since we don't currently have\\r\\n                            // service behavior using that header.\\r\\n                            'If-None-Match': request.eTag || '*'\\r\\n                        };\\r\\n                        requestBody = {\\r\\n                            /* eslint-disable camelcase */\\r\\n                            sdk_version: this.sdkVersion,\\r\\n                            app_instance_id: installationId,\\r\\n                            app_instance_id_token: installationToken,\\r\\n                            app_id: this.appId,\\r\\n                            language_code: getUserLanguage()\\r\\n                            /* eslint-enable camelcase */\\r\\n                        };\\r\\n                        options = {\\r\\n                            method: 'POST',\\r\\n                            headers: headers,\\r\\n                            body: JSON.stringify(requestBody)\\r\\n                        };\\r\\n                        fetchPromise = fetch(url, options);\\r\\n                        timeoutPromise = new Promise(function (_resolve, reject) {\\r\\n                            // Maps async event listener to Promise API.\\r\\n                            request.signal.addEventListener(function () {\\r\\n                                // Emulates https://heycam.github.io/webidl/#aborterror\\r\\n                                var error = new Error('The operation was aborted.');\\r\\n                                error.name = 'AbortError';\\r\\n                                reject(error);\\r\\n                            });\\r\\n                        });\\r\\n                        _b.label = 2;\\r\\n                    case 2:\\r\\n                        _b.trys.push([2, 5, , 6]);\\r\\n                        return [4 /*yield*/, Promise.race([fetchPromise, timeoutPromise])];\\r\\n                    case 3:\\r\\n                        _b.sent();\\r\\n                        return [4 /*yield*/, fetchPromise];\\r\\n                    case 4:\\r\\n                        response = _b.sent();\\r\\n                        return [3 /*break*/, 6];\\r\\n                    case 5:\\r\\n                        originalError_1 = _b.sent();\\r\\n                        errorCode = \\\"fetch-client-network\\\" /* FETCH_NETWORK */;\\r\\n                        if (originalError_1.name === 'AbortError') {\\r\\n                            errorCode = \\\"fetch-timeout\\\" /* FETCH_TIMEOUT */;\\r\\n                        }\\r\\n                        throw ERROR_FACTORY.create(errorCode, {\\r\\n                            originalErrorMessage: originalError_1.message\\r\\n                        });\\r\\n                    case 6:\\r\\n                        status = response.status;\\r\\n                        responseEtag = response.headers.get('ETag') || undefined;\\r\\n                        if (!(response.status === 200)) return [3 /*break*/, 11];\\r\\n                        responseBody = void 0;\\r\\n                        _b.label = 7;\\r\\n                    case 7:\\r\\n                        _b.trys.push([7, 9, , 10]);\\r\\n                        return [4 /*yield*/, response.json()];\\r\\n                    case 8:\\r\\n                        responseBody = _b.sent();\\r\\n                        return [3 /*break*/, 10];\\r\\n                    case 9:\\r\\n                        originalError_2 = _b.sent();\\r\\n                        throw ERROR_FACTORY.create(\\\"fetch-client-parse\\\" /* FETCH_PARSE */, {\\r\\n                            originalErrorMessage: originalError_2.message\\r\\n                        });\\r\\n                    case 10:\\r\\n                        config = responseBody['entries'];\\r\\n                        state = responseBody['state'];\\r\\n                        _b.label = 11;\\r\\n                    case 11:\\r\\n                        // Normalizes based on legacy state.\\r\\n                        if (state === 'INSTANCE_STATE_UNSPECIFIED') {\\r\\n                            status = 500;\\r\\n                        }\\r\\n                        else if (state === 'NO_CHANGE') {\\r\\n                            status = 304;\\r\\n                        }\\r\\n                        else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\\r\\n                            // These cases can be fixed remotely, so normalize to safe value.\\r\\n                            config = {};\\r\\n                        }\\r\\n                        // Normalize to exception-based control flow for non-success cases.\\r\\n                        // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\\r\\n                        // differentiating success states (200 from 304; the state body param is undefined in a\\r\\n                        // standard 304).\\r\\n                        if (status !== 304 && status !== 200) {\\r\\n                            throw ERROR_FACTORY.create(\\\"fetch-status\\\" /* FETCH_STATUS */, {\\r\\n                                httpStatus: status\\r\\n                            });\\r\\n                        }\\r\\n                        return [2 /*return*/, { status: status, eTag: responseEtag, config: config }];\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    };\\r\\n    return RestClient;\\r\\n}());\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * Shims a minimal AbortSignal.\\r\\n *\\r\\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\\r\\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\\r\\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\\r\\n * swapped out if/when we do.\\r\\n */\\r\\nvar RemoteConfigAbortSignal = /** @class */ (function () {\\r\\n    function RemoteConfigAbortSignal() {\\r\\n        this.listeners = [];\\r\\n    }\\r\\n    RemoteConfigAbortSignal.prototype.addEventListener = function (listener) {\\r\\n        this.listeners.push(listener);\\r\\n    };\\r\\n    RemoteConfigAbortSignal.prototype.abort = function () {\\r\\n        this.listeners.forEach(function (listener) { return listener(); });\\r\\n    };\\r\\n    return RemoteConfigAbortSignal;\\r\\n}());\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar DEFAULT_VALUE_FOR_BOOLEAN = false;\\r\\nvar DEFAULT_VALUE_FOR_STRING = '';\\r\\nvar DEFAULT_VALUE_FOR_NUMBER = 0;\\r\\nvar BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\\r\\nvar Value = /** @class */ (function () {\\r\\n    function Value(_source, _value) {\\r\\n        if (_value === void 0) { _value = DEFAULT_VALUE_FOR_STRING; }\\r\\n        this._source = _source;\\r\\n        this._value = _value;\\r\\n    }\\r\\n    Value.prototype.asString = function () {\\r\\n        return this._value;\\r\\n    };\\r\\n    Value.prototype.asBoolean = function () {\\r\\n        if (this._source === 'static') {\\r\\n            return DEFAULT_VALUE_FOR_BOOLEAN;\\r\\n        }\\r\\n        return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\\r\\n    };\\r\\n    Value.prototype.asNumber = function () {\\r\\n        if (this._source === 'static') {\\r\\n            return DEFAULT_VALUE_FOR_NUMBER;\\r\\n        }\\r\\n        var num = Number(this._value);\\r\\n        if (isNaN(num)) {\\r\\n            num = DEFAULT_VALUE_FOR_NUMBER;\\r\\n        }\\r\\n        return num;\\r\\n    };\\r\\n    Value.prototype.getSource = function () {\\r\\n        return this._source;\\r\\n    };\\r\\n    return Value;\\r\\n}());\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\\r\\nvar DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\\r\\n/**\\r\\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\\r\\n *\\r\\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\\r\\n */\\r\\nvar RemoteConfig = /** @class */ (function () {\\r\\n    function RemoteConfig(\\r\\n    // Required by FirebaseServiceFactory interface.\\r\\n    app, \\r\\n    // JS doesn't support private yet\\r\\n    // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\\r\\n    // underscore prefix.\\r\\n    _client, _storageCache, _storage, _logger) {\\r\\n        this.app = app;\\r\\n        this._client = _client;\\r\\n        this._storageCache = _storageCache;\\r\\n        this._storage = _storage;\\r\\n        this._logger = _logger;\\r\\n        // Tracks completion of initialization promise.\\r\\n        this._isInitializationComplete = false;\\r\\n        this.settings = {\\r\\n            fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\\r\\n            minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\\r\\n        };\\r\\n        this.defaultConfig = {};\\r\\n    }\\r\\n    // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\\r\\n    // to differentiate 2p and 3p use-cases.\\r\\n    RemoteConfig.prototype.setLogLevel = function (logLevel) {\\r\\n        switch (logLevel) {\\r\\n            case 'debug':\\r\\n                this._logger.logLevel = logger.LogLevel.DEBUG;\\r\\n                break;\\r\\n            case 'silent':\\r\\n                this._logger.logLevel = logger.LogLevel.SILENT;\\r\\n                break;\\r\\n            default:\\r\\n                this._logger.logLevel = logger.LogLevel.ERROR;\\r\\n        }\\r\\n    };\\r\\n    Object.defineProperty(RemoteConfig.prototype, \\\"fetchTimeMillis\\\", {\\r\\n        get: function () {\\r\\n            return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(RemoteConfig.prototype, \\\"lastFetchStatus\\\", {\\r\\n        get: function () {\\r\\n            return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    RemoteConfig.prototype.activate = function () {\\r\\n        return tslib.__awaiter(this, void 0, void 0, function () {\\r\\n            var _a, lastSuccessfulFetchResponse, activeConfigEtag;\\r\\n            return tslib.__generator(this, function (_b) {\\r\\n                switch (_b.label) {\\r\\n                    case 0: return [4 /*yield*/, Promise.all([\\r\\n                            this._storage.getLastSuccessfulFetchResponse(),\\r\\n                            this._storage.getActiveConfigEtag()\\r\\n                        ])];\\r\\n                    case 1:\\r\\n                        _a = _b.sent(), lastSuccessfulFetchResponse = _a[0], activeConfigEtag = _a[1];\\r\\n                        if (!lastSuccessfulFetchResponse ||\\r\\n                            !lastSuccessfulFetchResponse.config ||\\r\\n                            !lastSuccessfulFetchResponse.eTag ||\\r\\n                            lastSuccessfulFetchResponse.eTag === activeConfigEtag) {\\r\\n                            // Either there is no successful fetched config, or is the same as current active\\r\\n                            // config.\\r\\n                            return [2 /*return*/, false];\\r\\n                        }\\r\\n                        return [4 /*yield*/, Promise.all([\\r\\n                                this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config),\\r\\n                                this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)\\r\\n                            ])];\\r\\n                    case 2:\\r\\n                        _b.sent();\\r\\n                        return [2 /*return*/, true];\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    };\\r\\n    RemoteConfig.prototype.ensureInitialized = function () {\\r\\n        var _this = this;\\r\\n        if (!this._initializePromise) {\\r\\n            this._initializePromise = this._storageCache\\r\\n                .loadFromStorage()\\r\\n                .then(function () {\\r\\n                _this._isInitializationComplete = true;\\r\\n            });\\r\\n        }\\r\\n        return this._initializePromise;\\r\\n    };\\r\\n    /**\\r\\n     * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\\r\\n     * {@link Settings.fetchTimeoutInSeconds} or\\r\\n     * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\\r\\n     */\\r\\n    RemoteConfig.prototype.fetch = function () {\\r\\n        return tslib.__awaiter(this, void 0, void 0, function () {\\r\\n            var abortSignal, e_1, lastFetchStatus;\\r\\n            var _this = this;\\r\\n            return tslib.__generator(this, function (_a) {\\r\\n                switch (_a.label) {\\r\\n                    case 0:\\r\\n                        abortSignal = new RemoteConfigAbortSignal();\\r\\n                        setTimeout(function () { return tslib.__awaiter(_this, void 0, void 0, function () {\\r\\n                            return tslib.__generator(this, function (_a) {\\r\\n                                // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\\r\\n                                abortSignal.abort();\\r\\n                                return [2 /*return*/];\\r\\n                            });\\r\\n                        }); }, this.settings.fetchTimeoutMillis);\\r\\n                        _a.label = 1;\\r\\n                    case 1:\\r\\n                        _a.trys.push([1, 4, , 6]);\\r\\n                        return [4 /*yield*/, this._client.fetch({\\r\\n                                cacheMaxAgeMillis: this.settings.minimumFetchIntervalMillis,\\r\\n                                signal: abortSignal\\r\\n                            })];\\r\\n                    case 2:\\r\\n                        _a.sent();\\r\\n                        return [4 /*yield*/, this._storageCache.setLastFetchStatus('success')];\\r\\n                    case 3:\\r\\n                        _a.sent();\\r\\n                        return [3 /*break*/, 6];\\r\\n                    case 4:\\r\\n                        e_1 = _a.sent();\\r\\n                        lastFetchStatus = hasErrorCode(e_1, \\\"fetch-throttle\\\" /* FETCH_THROTTLE */)\\r\\n                            ? 'throttle'\\r\\n                            : 'failure';\\r\\n                        return [4 /*yield*/, this._storageCache.setLastFetchStatus(lastFetchStatus)];\\r\\n                    case 5:\\r\\n                        _a.sent();\\r\\n                        throw e_1;\\r\\n                    case 6: return [2 /*return*/];\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    };\\r\\n    RemoteConfig.prototype.fetchAndActivate = function () {\\r\\n        return tslib.__awaiter(this, void 0, void 0, function () {\\r\\n            return tslib.__generator(this, function (_a) {\\r\\n                switch (_a.label) {\\r\\n                    case 0: return [4 /*yield*/, this.fetch()];\\r\\n                    case 1:\\r\\n                        _a.sent();\\r\\n                        return [2 /*return*/, this.activate()];\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    };\\r\\n    RemoteConfig.prototype.getAll = function () {\\r\\n        var _this = this;\\r\\n        return getAllKeys(this._storageCache.getActiveConfig(), this.defaultConfig).reduce(function (allConfigs, key) {\\r\\n            allConfigs[key] = _this.getValue(key);\\r\\n            return allConfigs;\\r\\n        }, {});\\r\\n    };\\r\\n    RemoteConfig.prototype.getBoolean = function (key) {\\r\\n        return this.getValue(key).asBoolean();\\r\\n    };\\r\\n    RemoteConfig.prototype.getNumber = function (key) {\\r\\n        return this.getValue(key).asNumber();\\r\\n    };\\r\\n    RemoteConfig.prototype.getString = function (key) {\\r\\n        return this.getValue(key).asString();\\r\\n    };\\r\\n    RemoteConfig.prototype.getValue = function (key) {\\r\\n        if (!this._isInitializationComplete) {\\r\\n            this._logger.debug(\\\"A value was requested for key \\\\\\\"\\\" + key + \\\"\\\\\\\" before SDK initialization completed.\\\" +\\r\\n                ' Await on ensureInitialized if the intent was to get a previously activated value.');\\r\\n        }\\r\\n        var activeConfig = this._storageCache.getActiveConfig();\\r\\n        if (activeConfig && activeConfig[key] !== undefined) {\\r\\n            return new Value('remote', activeConfig[key]);\\r\\n        }\\r\\n        else if (this.defaultConfig && this.defaultConfig[key] !== undefined) {\\r\\n            return new Value('default', String(this.defaultConfig[key]));\\r\\n        }\\r\\n        this._logger.debug(\\\"Returning static value for key \\\\\\\"\\\" + key + \\\"\\\\\\\".\\\" +\\r\\n            ' Define a default or remote value if this is unintentional.');\\r\\n        return new Value('static');\\r\\n    };\\r\\n    return RemoteConfig;\\r\\n}());\\r\\n/**\\r\\n * Dedupes and returns an array of all the keys of the received objects.\\r\\n */\\r\\nfunction getAllKeys(obj1, obj2) {\\r\\n    if (obj1 === void 0) { obj1 = {}; }\\r\\n    if (obj2 === void 0) { obj2 = {}; }\\r\\n    return Object.keys(tslib.__assign(tslib.__assign({}, obj1), obj2));\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\\r\\n */\\r\\nfunction toFirebaseError(event, errorCode) {\\r\\n    var originalError = event.target.error || undefined;\\r\\n    return ERROR_FACTORY.create(errorCode, {\\r\\n        originalErrorMessage: originalError && originalError.message\\r\\n    });\\r\\n}\\r\\n/**\\r\\n * A general-purpose store keyed by app + namespace + {@link\\r\\n * ProjectNamespaceKeyFieldValue}.\\r\\n *\\r\\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\\r\\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\\r\\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\\r\\n *\\r\\n * <p>Visible for testing.\\r\\n */\\r\\nvar APP_NAMESPACE_STORE = 'app_namespace_store';\\r\\nvar DB_NAME = 'firebase_remote_config';\\r\\nvar DB_VERSION = 1;\\r\\n// Visible for testing.\\r\\nfunction openDatabase() {\\r\\n    return new Promise(function (resolve, reject) {\\r\\n        var request = indexedDB.open(DB_NAME, DB_VERSION);\\r\\n        request.onerror = function (event) {\\r\\n            reject(toFirebaseError(event, \\\"storage-open\\\" /* STORAGE_OPEN */));\\r\\n        };\\r\\n        request.onsuccess = function (event) {\\r\\n            resolve(event.target.result);\\r\\n        };\\r\\n        request.onupgradeneeded = function (event) {\\r\\n            var db = event.target.result;\\r\\n            // We don't use 'break' in this switch statement, the fall-through\\r\\n            // behavior is what we want, because if there are multiple versions between\\r\\n            // the old version and the current version, we want ALL the migrations\\r\\n            // that correspond to those versions to run, not only the last one.\\r\\n            // eslint-disable-next-line default-case\\r\\n            switch (event.oldVersion) {\\r\\n                case 0:\\r\\n                    db.createObjectStore(APP_NAMESPACE_STORE, {\\r\\n                        keyPath: 'compositeKey'\\r\\n                    });\\r\\n            }\\r\\n        };\\r\\n    });\\r\\n}\\r\\n/**\\r\\n * Abstracts data persistence.\\r\\n */\\r\\nvar Storage = /** @class */ (function () {\\r\\n    /**\\r\\n     * @param appId enables storage segmentation by app (ID + name).\\r\\n     * @param appName enables storage segmentation by app (ID + name).\\r\\n     * @param namespace enables storage segmentation by namespace.\\r\\n     */\\r\\n    function Storage(appId, appName, namespace, openDbPromise) {\\r\\n        if (openDbPromise === void 0) { openDbPromise = openDatabase(); }\\r\\n        this.appId = appId;\\r\\n        this.appName = appName;\\r\\n        this.namespace = namespace;\\r\\n        this.openDbPromise = openDbPromise;\\r\\n    }\\r\\n    Storage.prototype.getLastFetchStatus = function () {\\r\\n        return this.get('last_fetch_status');\\r\\n    };\\r\\n    Storage.prototype.setLastFetchStatus = function (status) {\\r\\n        return this.set('last_fetch_status', status);\\r\\n    };\\r\\n    // This is comparable to a cache entry timestamp. If we need to expire other data, we could\\r\\n    // consider adding timestamp to all storage records and an optional max age arg to getters.\\r\\n    Storage.prototype.getLastSuccessfulFetchTimestampMillis = function () {\\r\\n        return this.get('last_successful_fetch_timestamp_millis');\\r\\n    };\\r\\n    Storage.prototype.setLastSuccessfulFetchTimestampMillis = function (timestamp) {\\r\\n        return this.set('last_successful_fetch_timestamp_millis', timestamp);\\r\\n    };\\r\\n    Storage.prototype.getLastSuccessfulFetchResponse = function () {\\r\\n        return this.get('last_successful_fetch_response');\\r\\n    };\\r\\n    Storage.prototype.setLastSuccessfulFetchResponse = function (response) {\\r\\n        return this.set('last_successful_fetch_response', response);\\r\\n    };\\r\\n    Storage.prototype.getActiveConfig = function () {\\r\\n        return this.get('active_config');\\r\\n    };\\r\\n    Storage.prototype.setActiveConfig = function (config) {\\r\\n        return this.set('active_config', config);\\r\\n    };\\r\\n    Storage.prototype.getActiveConfigEtag = function () {\\r\\n        return this.get('active_config_etag');\\r\\n    };\\r\\n    Storage.prototype.setActiveConfigEtag = function (etag) {\\r\\n        return this.set('active_config_etag', etag);\\r\\n    };\\r\\n    Storage.prototype.getThrottleMetadata = function () {\\r\\n        return this.get('throttle_metadata');\\r\\n    };\\r\\n    Storage.prototype.setThrottleMetadata = function (metadata) {\\r\\n        return this.set('throttle_metadata', metadata);\\r\\n    };\\r\\n    Storage.prototype.deleteThrottleMetadata = function () {\\r\\n        return this.delete('throttle_metadata');\\r\\n    };\\r\\n    Storage.prototype.get = function (key) {\\r\\n        return tslib.__awaiter(this, void 0, void 0, function () {\\r\\n            var db;\\r\\n            var _this = this;\\r\\n            return tslib.__generator(this, function (_a) {\\r\\n                switch (_a.label) {\\r\\n                    case 0: return [4 /*yield*/, this.openDbPromise];\\r\\n                    case 1:\\r\\n                        db = _a.sent();\\r\\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\\r\\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\\r\\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\\r\\n                                var compositeKey = _this.createCompositeKey(key);\\r\\n                                try {\\r\\n                                    var request = objectStore.get(compositeKey);\\r\\n                                    request.onerror = function (event) {\\r\\n                                        reject(toFirebaseError(event, \\\"storage-get\\\" /* STORAGE_GET */));\\r\\n                                    };\\r\\n                                    request.onsuccess = function (event) {\\r\\n                                        var result = event.target.result;\\r\\n                                        if (result) {\\r\\n                                            resolve(result.value);\\r\\n                                        }\\r\\n                                        else {\\r\\n                                            resolve(undefined);\\r\\n                                        }\\r\\n                                    };\\r\\n                                }\\r\\n                                catch (e) {\\r\\n                                    reject(ERROR_FACTORY.create(\\\"storage-get\\\" /* STORAGE_GET */, {\\r\\n                                        originalErrorMessage: e && e.message\\r\\n                                    }));\\r\\n                                }\\r\\n                            })];\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    };\\r\\n    Storage.prototype.set = function (key, value) {\\r\\n        return tslib.__awaiter(this, void 0, void 0, function () {\\r\\n            var db;\\r\\n            var _this = this;\\r\\n            return tslib.__generator(this, function (_a) {\\r\\n                switch (_a.label) {\\r\\n                    case 0: return [4 /*yield*/, this.openDbPromise];\\r\\n                    case 1:\\r\\n                        db = _a.sent();\\r\\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\\r\\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\\r\\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\\r\\n                                var compositeKey = _this.createCompositeKey(key);\\r\\n                                try {\\r\\n                                    var request = objectStore.put({\\r\\n                                        compositeKey: compositeKey,\\r\\n                                        value: value\\r\\n                                    });\\r\\n                                    request.onerror = function (event) {\\r\\n                                        reject(toFirebaseError(event, \\\"storage-set\\\" /* STORAGE_SET */));\\r\\n                                    };\\r\\n                                    request.onsuccess = function () {\\r\\n                                        resolve();\\r\\n                                    };\\r\\n                                }\\r\\n                                catch (e) {\\r\\n                                    reject(ERROR_FACTORY.create(\\\"storage-set\\\" /* STORAGE_SET */, {\\r\\n                                        originalErrorMessage: e && e.message\\r\\n                                    }));\\r\\n                                }\\r\\n                            })];\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    };\\r\\n    Storage.prototype.delete = function (key) {\\r\\n        return tslib.__awaiter(this, void 0, void 0, function () {\\r\\n            var db;\\r\\n            var _this = this;\\r\\n            return tslib.__generator(this, function (_a) {\\r\\n                switch (_a.label) {\\r\\n                    case 0: return [4 /*yield*/, this.openDbPromise];\\r\\n                    case 1:\\r\\n                        db = _a.sent();\\r\\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\\r\\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\\r\\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\\r\\n                                var compositeKey = _this.createCompositeKey(key);\\r\\n                                try {\\r\\n                                    var request = objectStore.delete(compositeKey);\\r\\n                                    request.onerror = function (event) {\\r\\n                                        reject(toFirebaseError(event, \\\"storage-delete\\\" /* STORAGE_DELETE */));\\r\\n                                    };\\r\\n                                    request.onsuccess = function () {\\r\\n                                        resolve();\\r\\n                                    };\\r\\n                                }\\r\\n                                catch (e) {\\r\\n                                    reject(ERROR_FACTORY.create(\\\"storage-delete\\\" /* STORAGE_DELETE */, {\\r\\n                                        originalErrorMessage: e && e.message\\r\\n                                    }));\\r\\n                                }\\r\\n                            })];\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    };\\r\\n    // Facilitates composite key functionality (which is unsupported in IE).\\r\\n    Storage.prototype.createCompositeKey = function (key) {\\r\\n        return [this.appId, this.appName, this.namespace, key].join();\\r\\n    };\\r\\n    return Storage;\\r\\n}());\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\\r\\n */\\r\\nvar StorageCache = /** @class */ (function () {\\r\\n    function StorageCache(storage) {\\r\\n        this.storage = storage;\\r\\n    }\\r\\n    /**\\r\\n     * Memory-only getters\\r\\n     */\\r\\n    StorageCache.prototype.getLastFetchStatus = function () {\\r\\n        return this.lastFetchStatus;\\r\\n    };\\r\\n    StorageCache.prototype.getLastSuccessfulFetchTimestampMillis = function () {\\r\\n        return this.lastSuccessfulFetchTimestampMillis;\\r\\n    };\\r\\n    StorageCache.prototype.getActiveConfig = function () {\\r\\n        return this.activeConfig;\\r\\n    };\\r\\n    /**\\r\\n     * Read-ahead getter\\r\\n     */\\r\\n    StorageCache.prototype.loadFromStorage = function () {\\r\\n        return tslib.__awaiter(this, void 0, void 0, function () {\\r\\n            var lastFetchStatusPromise, lastSuccessfulFetchTimestampMillisPromise, activeConfigPromise, lastFetchStatus, lastSuccessfulFetchTimestampMillis, activeConfig;\\r\\n            return tslib.__generator(this, function (_a) {\\r\\n                switch (_a.label) {\\r\\n                    case 0:\\r\\n                        lastFetchStatusPromise = this.storage.getLastFetchStatus();\\r\\n                        lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\\r\\n                        activeConfigPromise = this.storage.getActiveConfig();\\r\\n                        return [4 /*yield*/, lastFetchStatusPromise];\\r\\n                    case 1:\\r\\n                        lastFetchStatus = _a.sent();\\r\\n                        if (lastFetchStatus) {\\r\\n                            this.lastFetchStatus = lastFetchStatus;\\r\\n                        }\\r\\n                        return [4 /*yield*/, lastSuccessfulFetchTimestampMillisPromise];\\r\\n                    case 2:\\r\\n                        lastSuccessfulFetchTimestampMillis = _a.sent();\\r\\n                        if (lastSuccessfulFetchTimestampMillis) {\\r\\n                            this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\\r\\n                        }\\r\\n                        return [4 /*yield*/, activeConfigPromise];\\r\\n                    case 3:\\r\\n                        activeConfig = _a.sent();\\r\\n                        if (activeConfig) {\\r\\n                            this.activeConfig = activeConfig;\\r\\n                        }\\r\\n                        return [2 /*return*/];\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    };\\r\\n    /**\\r\\n     * Write-through setters\\r\\n     */\\r\\n    StorageCache.prototype.setLastFetchStatus = function (status) {\\r\\n        this.lastFetchStatus = status;\\r\\n        return this.storage.setLastFetchStatus(status);\\r\\n    };\\r\\n    StorageCache.prototype.setLastSuccessfulFetchTimestampMillis = function (timestampMillis) {\\r\\n        this.lastSuccessfulFetchTimestampMillis = timestampMillis;\\r\\n        return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\\r\\n    };\\r\\n    StorageCache.prototype.setActiveConfig = function (activeConfig) {\\r\\n        this.activeConfig = activeConfig;\\r\\n        return this.storage.setActiveConfig(activeConfig);\\r\\n    };\\r\\n    return StorageCache;\\r\\n}());\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * Supports waiting on a backoff by:\\r\\n *\\r\\n * <ul>\\r\\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\\r\\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\\r\\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\\r\\n *       request appear the same.</li>\\r\\n * </ul>\\r\\n *\\r\\n * <p>Visible for testing.\\r\\n */\\r\\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\\r\\n    return new Promise(function (resolve, reject) {\\r\\n        // Derives backoff from given end time, normalizing negative numbers to zero.\\r\\n        var backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\\r\\n        var timeout = setTimeout(resolve, backoffMillis);\\r\\n        // Adds listener, rather than sets onabort, because signal is a shared object.\\r\\n        signal.addEventListener(function () {\\r\\n            clearTimeout(timeout);\\r\\n            // If the request completes before this timeout, the rejection has no effect.\\r\\n            reject(ERROR_FACTORY.create(\\\"fetch-throttle\\\" /* FETCH_THROTTLE */, {\\r\\n                throttleEndTimeMillis: throttleEndTimeMillis\\r\\n            }));\\r\\n        });\\r\\n    });\\r\\n}\\r\\n/**\\r\\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\\r\\n */\\r\\nfunction isRetriableError(e) {\\r\\n    if (!(e instanceof util.FirebaseError)) {\\r\\n        return false;\\r\\n    }\\r\\n    // Uses string index defined by ErrorData, which FirebaseError implements.\\r\\n    var httpStatus = Number(e['httpStatus']);\\r\\n    return (httpStatus === 429 ||\\r\\n        httpStatus === 500 ||\\r\\n        httpStatus === 503 ||\\r\\n        httpStatus === 504);\\r\\n}\\r\\n/**\\r\\n * Decorates a Client with retry logic.\\r\\n *\\r\\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\\r\\n * responses (because the SDK has no use for error responses).\\r\\n */\\r\\nvar RetryingClient = /** @class */ (function () {\\r\\n    function RetryingClient(client, storage) {\\r\\n        this.client = client;\\r\\n        this.storage = storage;\\r\\n    }\\r\\n    RetryingClient.prototype.fetch = function (request) {\\r\\n        return tslib.__awaiter(this, void 0, void 0, function () {\\r\\n            var throttleMetadata;\\r\\n            return tslib.__generator(this, function (_a) {\\r\\n                switch (_a.label) {\\r\\n                    case 0: return [4 /*yield*/, this.storage.getThrottleMetadata()];\\r\\n                    case 1:\\r\\n                        throttleMetadata = (_a.sent()) || {\\r\\n                            backoffCount: 0,\\r\\n                            throttleEndTimeMillis: Date.now()\\r\\n                        };\\r\\n                        return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    };\\r\\n    /**\\r\\n     * A recursive helper for attempting a fetch request repeatedly.\\r\\n     *\\r\\n     * @throws any non-retriable errors.\\r\\n     */\\r\\n    RetryingClient.prototype.attemptFetch = function (request, _a) {\\r\\n        var throttleEndTimeMillis = _a.throttleEndTimeMillis, backoffCount = _a.backoffCount;\\r\\n        return tslib.__awaiter(this, void 0, void 0, function () {\\r\\n            var response, e_1, throttleMetadata;\\r\\n            return tslib.__generator(this, function (_b) {\\r\\n                switch (_b.label) {\\r\\n                    case 0: \\r\\n                    // Starts with a (potentially zero) timeout to support resumption from stored state.\\r\\n                    // Ensures the throttle end time is honored if the last attempt timed out.\\r\\n                    // Note the SDK will never make a request if the fetch timeout expires at this point.\\r\\n                    return [4 /*yield*/, setAbortableTimeout(request.signal, throttleEndTimeMillis)];\\r\\n                    case 1:\\r\\n                        // Starts with a (potentially zero) timeout to support resumption from stored state.\\r\\n                        // Ensures the throttle end time is honored if the last attempt timed out.\\r\\n                        // Note the SDK will never make a request if the fetch timeout expires at this point.\\r\\n                        _b.sent();\\r\\n                        _b.label = 2;\\r\\n                    case 2:\\r\\n                        _b.trys.push([2, 5, , 7]);\\r\\n                        return [4 /*yield*/, this.client.fetch(request)];\\r\\n                    case 3:\\r\\n                        response = _b.sent();\\r\\n                        // Note the SDK only clears throttle state if response is success or non-retriable.\\r\\n                        return [4 /*yield*/, this.storage.deleteThrottleMetadata()];\\r\\n                    case 4:\\r\\n                        // Note the SDK only clears throttle state if response is success or non-retriable.\\r\\n                        _b.sent();\\r\\n                        return [2 /*return*/, response];\\r\\n                    case 5:\\r\\n                        e_1 = _b.sent();\\r\\n                        if (!isRetriableError(e_1)) {\\r\\n                            throw e_1;\\r\\n                        }\\r\\n                        throttleMetadata = {\\r\\n                            throttleEndTimeMillis: Date.now() + util.calculateBackoffMillis(backoffCount),\\r\\n                            backoffCount: backoffCount + 1\\r\\n                        };\\r\\n                        // Persists state.\\r\\n                        return [4 /*yield*/, this.storage.setThrottleMetadata(throttleMetadata)];\\r\\n                    case 6:\\r\\n                        // Persists state.\\r\\n                        _b.sent();\\r\\n                        return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\\r\\n                    case 7: return [2 /*return*/];\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    };\\r\\n    return RetryingClient;\\r\\n}());\\n\\nvar name = \\\"@firebase/remote-config\\\";\\nvar version = \\\"0.1.28\\\";\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nfunction registerRemoteConfig(firebaseInstance) {\\r\\n    firebaseInstance.INTERNAL.registerComponent(new component.Component('remoteConfig', remoteConfigFactory, \\\"PUBLIC\\\" /* PUBLIC */).setMultipleInstances(true));\\r\\n    firebaseInstance.registerVersion(name, version);\\r\\n    function remoteConfigFactory(container, namespace) {\\r\\n        /* Dependencies */\\r\\n        // getImmediate for FirebaseApp will always succeed\\r\\n        var app = container.getProvider('app').getImmediate();\\r\\n        // The following call will always succeed because rc has `import '@firebase/installations'`\\r\\n        var installations = container.getProvider('installations').getImmediate();\\r\\n        // Guards against the SDK being used in non-browser environments.\\r\\n        if (typeof window === 'undefined') {\\r\\n            throw ERROR_FACTORY.create(\\\"registration-window\\\" /* REGISTRATION_WINDOW */);\\r\\n        }\\r\\n        // Normalizes optional inputs.\\r\\n        var _a = app.options, projectId = _a.projectId, apiKey = _a.apiKey, appId = _a.appId;\\r\\n        if (!projectId) {\\r\\n            throw ERROR_FACTORY.create(\\\"registration-project-id\\\" /* REGISTRATION_PROJECT_ID */);\\r\\n        }\\r\\n        if (!apiKey) {\\r\\n            throw ERROR_FACTORY.create(\\\"registration-api-key\\\" /* REGISTRATION_API_KEY */);\\r\\n        }\\r\\n        if (!appId) {\\r\\n            throw ERROR_FACTORY.create(\\\"registration-app-id\\\" /* REGISTRATION_APP_ID */);\\r\\n        }\\r\\n        namespace = namespace || 'firebase';\\r\\n        var storage = new Storage(appId, app.name, namespace);\\r\\n        var storageCache = new StorageCache(storage);\\r\\n        var logger$1 = new logger.Logger(name);\\r\\n        // Sets ERROR as the default log level.\\r\\n        // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\\r\\n        logger$1.logLevel = logger.LogLevel.ERROR;\\r\\n        var restClient = new RestClient(installations, \\r\\n        // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\\r\\n        firebaseInstance.SDK_VERSION, namespace, projectId, apiKey, appId);\\r\\n        var retryingClient = new RetryingClient(restClient, storage);\\r\\n        var cachingClient = new CachingClient(retryingClient, storage, storageCache, logger$1);\\r\\n        var remoteConfigInstance = new RemoteConfig(app, cachingClient, storageCache, storage, logger$1);\\r\\n        // Starts warming cache.\\r\\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\\r\\n        remoteConfigInstance.ensureInitialized();\\r\\n        return remoteConfigInstance;\\r\\n    }\\r\\n}\\r\\nregisterRemoteConfig(firebase__default['default']);\\n\\nexports.registerRemoteConfig = registerRemoteConfig;\\n//# sourceMappingURL=index.cjs.js.map\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"getUserLanguage\",\"navigatorLanguage\",\"navigator\",\"languages\",\"language\",\"getAllKeys\",\"obj1\",\"obj2\",\"Object\",\"keys\",\"tslib\",\"__assign\",\"toFirebaseError\",\"event\",\"errorCode\",\"originalError\",\"target\",\"error\",\"undefined\",\"ERROR_FACTORY\",\"create\",\"originalErrorMessage\",\"message\",\"openDatabase\",\"Promise\",\"resolve\",\"reject\",\"request\",\"indexedDB\",\"open\",\"DB_NAME\",\"DB_VERSION\",\"onerror\",\"request.onerror\",\"onsuccess\",\"request.onsuccess\",\"result\",\"onupgradeneeded\",\"request.onupgradeneeded\",\"db\",\"oldVersion\",\"createObjectStore\",\"APP_NAMESPACE_STORE\",\"keyPath\",\"setAbortableTimeout\",\"signal\",\"throttleEndTimeMillis\",\"backoffMillis\",\"Math\",\"max\",\"Date\",\"now\",\"timeout\",\"setTimeout\",\"addEventListener\",\"clearTimeout\",\"registerRemoteConfig\",\"firebaseInstance\",\"INTERNAL\",\"registerComponent\",\"setMultipleInstances\",\"component\",\"Component\",\"remoteConfigFactory\",\"container\",\"namespace\",\"app\",\"getProvider\",\"getImmediate\",\"installations\",\"window\",\"_a\",\"options\",\"projectId\",\"apiKey\",\"appId\",\"storage\",\"Storage\",\"name\",\"storageCache\",\"StorageCache\",\"logger$1\",\"logger\",\"Logger\",\"logLevel\",\"LogLevel\",\"ERROR\",\"restClient\",\"RestClient\",\"SDK_VERSION\",\"retryingClient\",\"RetryingClient\",\"cachingClient\",\"CachingClient\",\"remoteConfigInstance\",\"RemoteConfig\",\"ensureInitialized\",\"registerVersion\",\"version\",\"defineProperty\",\"value\",\"firebase\",\"util\",\"firebase__default\",\"client\",\"prototype\",\"isCachedDataFresh\",\"CachingClient.prototype.isCachedDataFresh\",\"cacheMaxAgeMillis\",\"lastSuccessfulFetchTimestampMillis\",\"debug\",\"cacheAgeMillis\",\"fetch\",\"CachingClient.prototype.fetch\",\"__awaiter\",\"lastSuccessfulFetchResponse\",\"response\",\"storageOperations\",\"__generator\",\"_b\",\"label\",\"all\",\"getLastSuccessfulFetchTimestampMillis\",\"getLastSuccessfulFetchResponse\",\"sent\",\"eTag\",\"setLastSuccessfulFetchTimestampMillis\",\"status\",\"push\",\"setLastSuccessfulFetchResponse\",\"ERROR_DESCRIPTION_MAP\",\"ErrorFactory\",\"firebaseInstallations\",\"sdkVersion\",\"RestClient.prototype.fetch\",\"installationId\",\"installationToken\",\"urlBase\",\"url\",\"headers\",\"requestBody\",\"fetchPromise\",\"timeoutPromise\",\"originalError_1\",\"responseEtag\",\"config\",\"state\",\"responseBody\",\"originalError_2\",\"getId\",\"getToken\",\"FIREBASE_REMOTE_CONFIG_URL_BASE\",\"sdk_version\",\"app_instance_id\",\"app_instance_id_token\",\"app_id\",\"language_code\",\"method\",\"body\",\"JSON\",\"stringify\",\"_resolve\",\"Error\",\"trys\",\"race\",\"get\",\"json\",\"httpStatus\",\"RemoteConfigAbortSignal\",\"listeners\",\"RemoteConfigAbortSignal.prototype.addEventListener\",\"listener\",\"abort\",\"RemoteConfigAbortSignal.prototype.abort\",\"forEach\",\"BOOLEAN_TRUTHY_VALUES\",\"Value\",\"_source\",\"_value\",\"DEFAULT_VALUE_FOR_STRING\",\"asString\",\"Value.prototype.asString\",\"asBoolean\",\"Value.prototype.asBoolean\",\"DEFAULT_VALUE_FOR_BOOLEAN\",\"indexOf\",\"toLowerCase\",\"asNumber\",\"Value.prototype.asNumber\",\"DEFAULT_VALUE_FOR_NUMBER\",\"num\",\"Number\",\"isNaN\",\"getSource\",\"Value.prototype.getSource\",\"_client\",\"_storageCache\",\"_storage\",\"_logger\",\"_isInitializationComplete\",\"settings\",\"fetchTimeoutMillis\",\"DEFAULT_FETCH_TIMEOUT_MILLIS\",\"minimumFetchIntervalMillis\",\"DEFAULT_CACHE_MAX_AGE_MILLIS\",\"defaultConfig\",\"setLogLevel\",\"RemoteConfig.prototype.setLogLevel\",\"DEBUG\",\"SILENT\",\"enumerable\",\"configurable\",\"getLastFetchStatus\",\"activate\",\"RemoteConfig.prototype.activate\",\"activeConfigEtag\",\"getActiveConfigEtag\",\"setActiveConfig\",\"setActiveConfigEtag\",\"RemoteConfig.prototype.ensureInitialized\",\"_this\",\"_initializePromise\",\"loadFromStorage\",\"then\",\"RemoteConfig.prototype.fetch\",\"abortSignal\",\"e_1\",\"lastFetchStatus\",\"setLastFetchStatus\",\"FirebaseError\",\"code\",\"fetchAndActivate\",\"RemoteConfig.prototype.fetchAndActivate\",\"getAll\",\"RemoteConfig.prototype.getAll\",\"getActiveConfig\",\"reduce\",\"allConfigs\",\"key\",\"getValue\",\"getBoolean\",\"RemoteConfig.prototype.getBoolean\",\"getNumber\",\"RemoteConfig.prototype.getNumber\",\"getString\",\"RemoteConfig.prototype.getString\",\"RemoteConfig.prototype.getValue\",\"activeConfig\",\"String\",\"appName\",\"openDbPromise\",\"Storage.prototype.getLastFetchStatus\",\"Storage.prototype.setLastFetchStatus\",\"set\",\"Storage.prototype.getLastSuccessfulFetchTimestampMillis\",\"Storage.prototype.setLastSuccessfulFetchTimestampMillis\",\"timestamp\",\"Storage.prototype.getLastSuccessfulFetchResponse\",\"Storage.prototype.setLastSuccessfulFetchResponse\",\"Storage.prototype.getActiveConfig\",\"Storage.prototype.setActiveConfig\",\"Storage.prototype.getActiveConfigEtag\",\"Storage.prototype.setActiveConfigEtag\",\"etag\",\"getThrottleMetadata\",\"Storage.prototype.getThrottleMetadata\",\"setThrottleMetadata\",\"Storage.prototype.setThrottleMetadata\",\"metadata\",\"deleteThrottleMetadata\",\"Storage.prototype.deleteThrottleMetadata\",\"delete\",\"Storage.prototype.get\",\"objectStore\",\"transaction\",\"compositeKey\",\"createCompositeKey\",\"e\",\"Storage.prototype.set\",\"put\",\"Storage.prototype.delete\",\"Storage.prototype.createCompositeKey\",\"join\",\"StorageCache.prototype.getLastFetchStatus\",\"StorageCache.prototype.getLastSuccessfulFetchTimestampMillis\",\"StorageCache.prototype.getActiveConfig\",\"StorageCache.prototype.loadFromStorage\",\"lastFetchStatusPromise\",\"lastSuccessfulFetchTimestampMillisPromise\",\"activeConfigPromise\",\"StorageCache.prototype.setLastFetchStatus\",\"StorageCache.prototype.setLastSuccessfulFetchTimestampMillis\",\"timestampMillis\",\"StorageCache.prototype.setActiveConfig\",\"RetryingClient.prototype.fetch\",\"throttleMetadata\",\"backoffCount\",\"attemptFetch\",\"RetryingClient.prototype.attemptFetch\",\"calculateBackoffMillis\"]\n}\n"]