["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@firebase/logger/dist/index.cjs.js"],"~:js","shadow$provide.module$node_modules$$firebase$logger$dist$index_cjs=function(global,require,module,exports){function __spreadArrays(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;s=Array(s);var k=0;for(i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)s[k]=a[j];return s}Object.defineProperty(exports,\"__esModule\",{value:!0});var _a,instances=[];(function(LogLevel){LogLevel[LogLevel.DEBUG=0]=\"DEBUG\";LogLevel[LogLevel.VERBOSE=1]=\"VERBOSE\";LogLevel[LogLevel.INFO=2]=\n\"INFO\";LogLevel[LogLevel.WARN=3]=\"WARN\";LogLevel[LogLevel.ERROR=4]=\"ERROR\";LogLevel[LogLevel.SILENT=5]=\"SILENT\"})(exports.LogLevel||(exports.LogLevel={}));var levelStringToEnum={debug:exports.LogLevel.DEBUG,verbose:exports.LogLevel.VERBOSE,info:exports.LogLevel.INFO,warn:exports.LogLevel.WARN,error:exports.LogLevel.ERROR,silent:exports.LogLevel.SILENT},defaultLogLevel=exports.LogLevel.INFO,ConsoleMethod=(_a={},_a[exports.LogLevel.DEBUG]=\"log\",_a[exports.LogLevel.VERBOSE]=\"log\",_a[exports.LogLevel.INFO]=\n\"info\",_a[exports.LogLevel.WARN]=\"warn\",_a[exports.LogLevel.ERROR]=\"error\",_a),defaultLogHandler=function(instance,logType){for(var args=[],_i=2;_i<arguments.length;_i++)args[_i-2]=arguments[_i];if(!(logType<instance.logLevel)){_i=(new Date).toISOString();var method=ConsoleMethod[logType];if(method)console[method].apply(console,__spreadArrays([\"[\"+_i+\"]  \"+instance.name+\":\"],args));else throw Error(\"Attempted to log a message with an invalid logType (value: \"+logType+\")\");}};global=function(){function Logger(name){this.name=\nname;this._logLevel=defaultLogLevel;this._logHandler=defaultLogHandler;this._userLogHandler=null;instances.push(this)}Object.defineProperty(Logger.prototype,\"logLevel\",{get:function(){return this._logLevel},set:function(val){if(!(val in exports.LogLevel))throw new TypeError('Invalid value \"'+val+'\" assigned to `logLevel`');this._logLevel=val},enumerable:!1,configurable:!0});Logger.prototype.setLogLevel=function(val){this._logLevel=\"string\"===typeof val?levelStringToEnum[val]:val};Object.defineProperty(Logger.prototype,\n\"logHandler\",{get:function(){return this._logHandler},set:function(val){if(\"function\"!==typeof val)throw new TypeError(\"Value assigned to `logHandler` must be a function\");this._logHandler=val},enumerable:!1,configurable:!0});Object.defineProperty(Logger.prototype,\"userLogHandler\",{get:function(){return this._userLogHandler},set:function(val){this._userLogHandler=val},enumerable:!1,configurable:!0});Logger.prototype.debug=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];\nthis._userLogHandler&&this._userLogHandler.apply(this,__spreadArrays([this,exports.LogLevel.DEBUG],args));this._logHandler.apply(this,__spreadArrays([this,exports.LogLevel.DEBUG],args))};Logger.prototype.log=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];this._userLogHandler&&this._userLogHandler.apply(this,__spreadArrays([this,exports.LogLevel.VERBOSE],args));this._logHandler.apply(this,__spreadArrays([this,exports.LogLevel.VERBOSE],args))};Logger.prototype.info=\nfunction(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];this._userLogHandler&&this._userLogHandler.apply(this,__spreadArrays([this,exports.LogLevel.INFO],args));this._logHandler.apply(this,__spreadArrays([this,exports.LogLevel.INFO],args))};Logger.prototype.warn=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];this._userLogHandler&&this._userLogHandler.apply(this,__spreadArrays([this,exports.LogLevel.WARN],args));this._logHandler.apply(this,__spreadArrays([this,\nexports.LogLevel.WARN],args))};Logger.prototype.error=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];this._userLogHandler&&this._userLogHandler.apply(this,__spreadArrays([this,exports.LogLevel.ERROR],args));this._logHandler.apply(this,__spreadArrays([this,exports.LogLevel.ERROR],args))};return Logger}();exports.Logger=global;exports.setLogLevel=function(level){instances.forEach(function(inst){inst.setLogLevel(level)})};exports.setUserLogHandler=function(logCallback,\noptions){for(var _loop_1=function(instance$jscomp$0){var customLogLevel=null;options&&options.level&&(customLogLevel=levelStringToEnum[options.level]);instance$jscomp$0.userLogHandler=null===logCallback?null:function(instance,level){for(var args=[],_i=2;_i<arguments.length;_i++)args[_i-2]=arguments[_i];_i=args.map(function(arg){if(null==arg)return null;if(\"string\"===typeof arg)return arg;if(\"number\"===typeof arg||\"boolean\"===typeof arg)return arg.toString();if(arg instanceof Error)return arg.message;\ntry{return JSON.stringify(arg)}catch(ignored){return null}}).filter(function(arg){return arg}).join(\" \");level>=(null!==customLogLevel&&void 0!==customLogLevel?customLogLevel:instance.logLevel)&&logCallback({level:exports.LogLevel[level].toLowerCase(),message:_i,args,type:instance.name})}},_i$jscomp$0=0;_i$jscomp$0<instances.length;_i$jscomp$0++)_loop_1(instances[_i$jscomp$0])}}","~:source","shadow$provide[\"module$node_modules$$firebase$logger$dist$index_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(exports.LogLevel || (exports.LogLevel = {}));\r\nvar levelStringToEnum = {\r\n    'debug': exports.LogLevel.DEBUG,\r\n    'verbose': exports.LogLevel.VERBOSE,\r\n    'info': exports.LogLevel.INFO,\r\n    'warn': exports.LogLevel.WARN,\r\n    'error': exports.LogLevel.ERROR,\r\n    'silent': exports.LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = exports.LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nvar ConsoleMethod = (_a = {},\r\n    _a[exports.LogLevel.DEBUG] = 'log',\r\n    _a[exports.LogLevel.VERBOSE] = 'log',\r\n    _a[exports.LogLevel.INFO] = 'info',\r\n    _a[exports.LogLevel.WARN] = 'warn',\r\n    _a[exports.LogLevel.ERROR] = 'error',\r\n    _a);\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    var now = new Date().toISOString();\r\n    var method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method].apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\r\n    }\r\n    else {\r\n        throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in exports.LogLevel)) {\r\n                throw new TypeError(\"Invalid value \\\"\" + val + \"\\\" assigned to `logLevel`\");\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Workaround for setter/getter having to be the same type.\r\n    Logger.prototype.setLogLevel = function (val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    };\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"userLogHandler\", {\r\n        get: function () {\r\n            return this._userLogHandler;\r\n        },\r\n        set: function (val) {\r\n            this._userLogHandler = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.DEBUG], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.DEBUG], args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.VERBOSE], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.VERBOSE], args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.INFO], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.INFO], args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.WARN], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.WARN], args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.ERROR], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.ERROR], args));\r\n    };\r\n    return Logger;\r\n}());\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    var _loop_1 = function (instance) {\r\n        var customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = function (instance, level) {\r\n                var args = [];\r\n                for (var _i = 2; _i < arguments.length; _i++) {\r\n                    args[_i - 2] = arguments[_i];\r\n                }\r\n                var message = args\r\n                    .map(function (arg) {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(function (arg) { return arg; })\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: exports.LogLevel[level].toLowerCase(),\r\n                        message: message,\r\n                        args: args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    };\r\n    for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {\r\n        var instance = instances_1[_i];\r\n        _loop_1(instance);\r\n    }\r\n}\n\nexports.Logger = Logger;\nexports.setLogLevel = setLogLevel;\nexports.setUserLogHandler = setUserLogHandler;\n//# sourceMappingURL=index.cjs.js.map\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["message","userLogHandler","_logLevel","logLevel","LogLevel","args","__esModule","info","warn","_logHandler","error","log","name","level","configurable","value","_userLogHandler","enumerable","logHandler","debug","type","setLogLevel","set","setUserLogHandler","get","Logger"]],"~:compiled-at",1627822785122,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$firebase$logger$dist$index_cjs.js\",\n\"lineCount\":10,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@firebase/logger/dist/index.cjs.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$firebase$logger$dist$index_cjs\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nObject.defineProperty(exports, '__esModule', { value: true });\\n\\n/*! *****************************************************************************\\r\\nCopyright (c) Microsoft Corporation. All rights reserved.\\r\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\r\\nthis file except in compliance with the License. You may obtain a copy of the\\r\\nLicense at http://www.apache.org/licenses/LICENSE-2.0\\r\\n\\r\\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\r\\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\\r\\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\\r\\nMERCHANTABLITY OR NON-INFRINGEMENT.\\r\\n\\r\\nSee the Apache Version 2.0 License for specific language governing permissions\\r\\nand limitations under the License.\\r\\n***************************************************************************** */\\r\\n\\r\\nfunction __spreadArrays() {\\r\\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\\r\\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\\r\\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\\r\\n            r[k] = a[j];\\r\\n    return r;\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar _a;\\r\\n/**\\r\\n * A container for all of the Logger instances\\r\\n */\\r\\nvar instances = [];\\r\\n(function (LogLevel) {\\r\\n    LogLevel[LogLevel[\\\"DEBUG\\\"] = 0] = \\\"DEBUG\\\";\\r\\n    LogLevel[LogLevel[\\\"VERBOSE\\\"] = 1] = \\\"VERBOSE\\\";\\r\\n    LogLevel[LogLevel[\\\"INFO\\\"] = 2] = \\\"INFO\\\";\\r\\n    LogLevel[LogLevel[\\\"WARN\\\"] = 3] = \\\"WARN\\\";\\r\\n    LogLevel[LogLevel[\\\"ERROR\\\"] = 4] = \\\"ERROR\\\";\\r\\n    LogLevel[LogLevel[\\\"SILENT\\\"] = 5] = \\\"SILENT\\\";\\r\\n})(exports.LogLevel || (exports.LogLevel = {}));\\r\\nvar levelStringToEnum = {\\r\\n    'debug': exports.LogLevel.DEBUG,\\r\\n    'verbose': exports.LogLevel.VERBOSE,\\r\\n    'info': exports.LogLevel.INFO,\\r\\n    'warn': exports.LogLevel.WARN,\\r\\n    'error': exports.LogLevel.ERROR,\\r\\n    'silent': exports.LogLevel.SILENT\\r\\n};\\r\\n/**\\r\\n * The default log level\\r\\n */\\r\\nvar defaultLogLevel = exports.LogLevel.INFO;\\r\\n/**\\r\\n * By default, `console.debug` is not displayed in the developer console (in\\r\\n * chrome). To avoid forcing users to have to opt-in to these logs twice\\r\\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\\r\\n * logs to the `console.log` function.\\r\\n */\\r\\nvar ConsoleMethod = (_a = {},\\r\\n    _a[exports.LogLevel.DEBUG] = 'log',\\r\\n    _a[exports.LogLevel.VERBOSE] = 'log',\\r\\n    _a[exports.LogLevel.INFO] = 'info',\\r\\n    _a[exports.LogLevel.WARN] = 'warn',\\r\\n    _a[exports.LogLevel.ERROR] = 'error',\\r\\n    _a);\\r\\n/**\\r\\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\\r\\n * messages on to their corresponding console counterparts (if the log method\\r\\n * is supported by the current log level)\\r\\n */\\r\\nvar defaultLogHandler = function (instance, logType) {\\r\\n    var args = [];\\r\\n    for (var _i = 2; _i < arguments.length; _i++) {\\r\\n        args[_i - 2] = arguments[_i];\\r\\n    }\\r\\n    if (logType < instance.logLevel) {\\r\\n        return;\\r\\n    }\\r\\n    var now = new Date().toISOString();\\r\\n    var method = ConsoleMethod[logType];\\r\\n    if (method) {\\r\\n        console[method].apply(console, __spreadArrays([\\\"[\\\" + now + \\\"]  \\\" + instance.name + \\\":\\\"], args));\\r\\n    }\\r\\n    else {\\r\\n        throw new Error(\\\"Attempted to log a message with an invalid logType (value: \\\" + logType + \\\")\\\");\\r\\n    }\\r\\n};\\r\\nvar Logger = /** @class */ (function () {\\r\\n    /**\\r\\n     * Gives you an instance of a Logger to capture messages according to\\r\\n     * Firebase's logging scheme.\\r\\n     *\\r\\n     * @param name The name that the logs will be associated with\\r\\n     */\\r\\n    function Logger(name) {\\r\\n        this.name = name;\\r\\n        /**\\r\\n         * The log level of the given Logger instance.\\r\\n         */\\r\\n        this._logLevel = defaultLogLevel;\\r\\n        /**\\r\\n         * The main (internal) log handler for the Logger instance.\\r\\n         * Can be set to a new function in internal package code but not by user.\\r\\n         */\\r\\n        this._logHandler = defaultLogHandler;\\r\\n        /**\\r\\n         * The optional, additional, user-defined log handler for the Logger instance.\\r\\n         */\\r\\n        this._userLogHandler = null;\\r\\n        /**\\r\\n         * Capture the current instance for later use\\r\\n         */\\r\\n        instances.push(this);\\r\\n    }\\r\\n    Object.defineProperty(Logger.prototype, \\\"logLevel\\\", {\\r\\n        get: function () {\\r\\n            return this._logLevel;\\r\\n        },\\r\\n        set: function (val) {\\r\\n            if (!(val in exports.LogLevel)) {\\r\\n                throw new TypeError(\\\"Invalid value \\\\\\\"\\\" + val + \\\"\\\\\\\" assigned to `logLevel`\\\");\\r\\n            }\\r\\n            this._logLevel = val;\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    // Workaround for setter/getter having to be the same type.\\r\\n    Logger.prototype.setLogLevel = function (val) {\\r\\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\\r\\n    };\\r\\n    Object.defineProperty(Logger.prototype, \\\"logHandler\\\", {\\r\\n        get: function () {\\r\\n            return this._logHandler;\\r\\n        },\\r\\n        set: function (val) {\\r\\n            if (typeof val !== 'function') {\\r\\n                throw new TypeError('Value assigned to `logHandler` must be a function');\\r\\n            }\\r\\n            this._logHandler = val;\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(Logger.prototype, \\\"userLogHandler\\\", {\\r\\n        get: function () {\\r\\n            return this._userLogHandler;\\r\\n        },\\r\\n        set: function (val) {\\r\\n            this._userLogHandler = val;\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    /**\\r\\n     * The functions below are all based on the `console` interface\\r\\n     */\\r\\n    Logger.prototype.debug = function () {\\r\\n        var args = [];\\r\\n        for (var _i = 0; _i < arguments.length; _i++) {\\r\\n            args[_i] = arguments[_i];\\r\\n        }\\r\\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.DEBUG], args));\\r\\n        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.DEBUG], args));\\r\\n    };\\r\\n    Logger.prototype.log = function () {\\r\\n        var args = [];\\r\\n        for (var _i = 0; _i < arguments.length; _i++) {\\r\\n            args[_i] = arguments[_i];\\r\\n        }\\r\\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.VERBOSE], args));\\r\\n        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.VERBOSE], args));\\r\\n    };\\r\\n    Logger.prototype.info = function () {\\r\\n        var args = [];\\r\\n        for (var _i = 0; _i < arguments.length; _i++) {\\r\\n            args[_i] = arguments[_i];\\r\\n        }\\r\\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.INFO], args));\\r\\n        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.INFO], args));\\r\\n    };\\r\\n    Logger.prototype.warn = function () {\\r\\n        var args = [];\\r\\n        for (var _i = 0; _i < arguments.length; _i++) {\\r\\n            args[_i] = arguments[_i];\\r\\n        }\\r\\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.WARN], args));\\r\\n        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.WARN], args));\\r\\n    };\\r\\n    Logger.prototype.error = function () {\\r\\n        var args = [];\\r\\n        for (var _i = 0; _i < arguments.length; _i++) {\\r\\n            args[_i] = arguments[_i];\\r\\n        }\\r\\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, exports.LogLevel.ERROR], args));\\r\\n        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.ERROR], args));\\r\\n    };\\r\\n    return Logger;\\r\\n}());\\r\\nfunction setLogLevel(level) {\\r\\n    instances.forEach(function (inst) {\\r\\n        inst.setLogLevel(level);\\r\\n    });\\r\\n}\\r\\nfunction setUserLogHandler(logCallback, options) {\\r\\n    var _loop_1 = function (instance) {\\r\\n        var customLogLevel = null;\\r\\n        if (options && options.level) {\\r\\n            customLogLevel = levelStringToEnum[options.level];\\r\\n        }\\r\\n        if (logCallback === null) {\\r\\n            instance.userLogHandler = null;\\r\\n        }\\r\\n        else {\\r\\n            instance.userLogHandler = function (instance, level) {\\r\\n                var args = [];\\r\\n                for (var _i = 2; _i < arguments.length; _i++) {\\r\\n                    args[_i - 2] = arguments[_i];\\r\\n                }\\r\\n                var message = args\\r\\n                    .map(function (arg) {\\r\\n                    if (arg == null) {\\r\\n                        return null;\\r\\n                    }\\r\\n                    else if (typeof arg === 'string') {\\r\\n                        return arg;\\r\\n                    }\\r\\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\\r\\n                        return arg.toString();\\r\\n                    }\\r\\n                    else if (arg instanceof Error) {\\r\\n                        return arg.message;\\r\\n                    }\\r\\n                    else {\\r\\n                        try {\\r\\n                            return JSON.stringify(arg);\\r\\n                        }\\r\\n                        catch (ignored) {\\r\\n                            return null;\\r\\n                        }\\r\\n                    }\\r\\n                })\\r\\n                    .filter(function (arg) { return arg; })\\r\\n                    .join(' ');\\r\\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\\r\\n                    logCallback({\\r\\n                        level: exports.LogLevel[level].toLowerCase(),\\r\\n                        message: message,\\r\\n                        args: args,\\r\\n                        type: instance.name\\r\\n                    });\\r\\n                }\\r\\n            };\\r\\n        }\\r\\n    };\\r\\n    for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {\\r\\n        var instance = instances_1[_i];\\r\\n        _loop_1(instance);\\r\\n    }\\r\\n}\\n\\nexports.Logger = Logger;\\nexports.setLogLevel = setLogLevel;\\nexports.setUserLogHandler = setUserLogHandler;\\n//# sourceMappingURL=index.cjs.js.map\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"__spreadArrays\",\"s\",\"i\",\"il\",\"arguments\",\"length\",\"r\",\"Array\",\"k\",\"a\",\"j\",\"jl\",\"Object\",\"defineProperty\",\"value\",\"_a\",\"instances\",\"LogLevel\",\"levelStringToEnum\",\"DEBUG\",\"VERBOSE\",\"INFO\",\"WARN\",\"ERROR\",\"SILENT\",\"defaultLogLevel\",\"ConsoleMethod\",\"defaultLogHandler\",\"instance\",\"logType\",\"args\",\"_i\",\"logLevel\",\"now\",\"toISOString\",\"Date\",\"method\",\"console\",\"apply\",\"name\",\"Error\",\"Logger\",\"_logLevel\",\"_logHandler\",\"_userLogHandler\",\"push\",\"prototype\",\"get\",\"set\",\"val\",\"TypeError\",\"enumerable\",\"configurable\",\"setLogLevel\",\"Logger.prototype.setLogLevel\",\"debug\",\"Logger.prototype.debug\",\"log\",\"Logger.prototype.log\",\"info\",\"Logger.prototype.info\",\"warn\",\"Logger.prototype.warn\",\"error\",\"Logger.prototype.error\",\"level\",\"forEach\",\"inst\",\"setUserLogHandler\",\"logCallback\",\"options\",\"_loop_1\",\"customLogLevel\",\"userLogHandler\",\"instance.userLogHandler\",\"message\",\"map\",\"arg\",\"toString\",\"JSON\",\"stringify\",\"ignored\",\"filter\",\"join\",\"toLowerCase\",\"type\"]\n}\n"]