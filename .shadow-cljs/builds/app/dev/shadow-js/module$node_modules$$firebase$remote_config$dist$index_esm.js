["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@firebase/remote-config/dist/index.esm.js"],"~:js","shadow$provide.module$node_modules$$firebase$remote_config$dist$index_esm=function(global,require,module,exports){function getUserLanguage(navigatorLanguage){void 0===navigatorLanguage&&(navigatorLanguage=navigator);return navigatorLanguage.languages&&navigatorLanguage.languages[0]||navigatorLanguage.language}function getAllKeys(obj1,obj2){void 0===obj1&&(obj1={});void 0===obj2&&(obj2={});return Object.keys((0,_tslib.__assign)((0,_tslib.__assign)({},obj1),obj2))}function toFirebaseError(event,errorCode){event=\nevent.target.error||void 0;return ERROR_FACTORY.create(errorCode,{originalErrorMessage:event&&event.message})}function openDatabase(){return new Promise(function(resolve,reject){var request=indexedDB.open(\"firebase_remote_config\",1);request.onerror=function(event){reject(toFirebaseError(event,\"storage-open\"))};request.onsuccess=function(event){resolve(event.target.result)};request.onupgradeneeded=function(event){var db=event.target.result;switch(event.oldVersion){case 0:db.createObjectStore(\"app_namespace_store\",\n{keyPath:\"compositeKey\"})}}})}function setAbortableTimeout(signal,throttleEndTimeMillis){return new Promise(function(resolve,reject){var backoffMillis=Math.max(throttleEndTimeMillis-Date.now(),0),timeout=setTimeout(resolve,backoffMillis);signal.addEventListener(function(){clearTimeout(timeout);reject(ERROR_FACTORY.create(\"fetch-throttle\",{throttleEndTimeMillis}))})})}function registerRemoteConfig(firebaseInstance){firebaseInstance.INTERNAL.registerComponent((new _component.Component(\"remoteConfig\",\nfunction(container,_a){var namespace=_a.instanceIdentifier;_a=container.getProvider(\"app\").getImmediate();var installations=container.getProvider(\"installations\").getImmediate();if(\"undefined\"===typeof window)throw ERROR_FACTORY.create(\"registration-window\");container=_a.options;var projectId=container.projectId,apiKey=container.apiKey,appId=container.appId;if(!projectId)throw ERROR_FACTORY.create(\"registration-project-id\");if(!apiKey)throw ERROR_FACTORY.create(\"registration-api-key\");if(!appId)throw ERROR_FACTORY.create(\"registration-app-id\");\nnamespace=namespace||\"firebase\";container=new Storage$jscomp$0(appId,_a.name,namespace);var storageCache=new StorageCache(container),logger=new _logger2.Logger(name);logger.logLevel=_logger2.LogLevel.ERROR;namespace=new RestClient(installations,firebaseInstance.SDK_VERSION,namespace,projectId,apiKey,appId);namespace=new RetryingClient(namespace,container);namespace=new CachingClient(namespace,container,storageCache,logger);_a=new RemoteConfig(_a,namespace,storageCache,container,logger);_a.ensureInitialized();\nreturn _a},\"PUBLIC\")).setMultipleInstances(!0));firebaseInstance.registerVersion(name,version)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.registerRemoteConfig=registerRemoteConfig;global=function(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}(require(\"module$node_modules$$firebase$app$dist$index_esm\"));require(\"module$node_modules$$firebase$installations$dist$index_cjs\");var _tslib=require(\"module$node_modules$tslib$tslib\"),_util=require(\"module$node_modules$$firebase$util$dist$index_esm\"),\n_logger2=require(\"module$node_modules$$firebase$logger$dist$index_cjs\"),_component=require(\"module$node_modules$$firebase$component$dist$index_esm\"),CachingClient=function(){function CachingClient(client,storage,storageCache,logger){this.client=client;this.storage=storage;this.storageCache=storageCache;this.logger=logger}CachingClient.prototype.isCachedDataFresh=function(cacheMaxAgeMillis,lastSuccessfulFetchTimestampMillis){if(!lastSuccessfulFetchTimestampMillis)return this.logger.debug(\"Config fetch cache check. Cache unpopulated.\"),\n!1;lastSuccessfulFetchTimestampMillis=Date.now()-lastSuccessfulFetchTimestampMillis;var isCachedDataFresh=lastSuccessfulFetchTimestampMillis<=cacheMaxAgeMillis;this.logger.debug(\"Config fetch cache check. Cache age millis: \"+(lastSuccessfulFetchTimestampMillis+\". Cache max age millis (minimumFetchIntervalMillis setting): \")+(cacheMaxAgeMillis+\". Is cache hit: \")+(isCachedDataFresh+\".\"));return isCachedDataFresh};CachingClient.prototype.fetch=function(request){return(0,_tslib.__awaiter)(this,void 0,\nvoid 0,function(){var _a,lastSuccessfulFetchTimestampMillis,lastSuccessfulFetchResponse,response,storageOperations;return(0,_tslib.__generator)(this,function(_b){switch(_b.label){case 0:return[4,Promise.all([this.storage.getLastSuccessfulFetchTimestampMillis(),this.storage.getLastSuccessfulFetchResponse()])];case 1:_a=_b.sent();lastSuccessfulFetchTimestampMillis=_a[0];if((lastSuccessfulFetchResponse=_a[1])&&this.isCachedDataFresh(request.cacheMaxAgeMillis,lastSuccessfulFetchTimestampMillis))return[2,\nlastSuccessfulFetchResponse];request.eTag=lastSuccessfulFetchResponse&&lastSuccessfulFetchResponse.eTag;return[4,this.client.fetch(request)];case 2:return response=_b.sent(),storageOperations=[this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())],200===response.status&&storageOperations.push(this.storage.setLastSuccessfulFetchResponse(response)),[4,Promise.all(storageOperations)];case 3:return _b.sent(),[2,response]}})})};return CachingClient}(),_a$jscomp$1;require=(_a$jscomp$1={},\n_a$jscomp$1[\"registration-window\"]=\"Undefined window object. This SDK only supports usage in a browser environment.\",_a$jscomp$1[\"registration-project-id\"]=\"Undefined project identifier. Check Firebase app initialization.\",_a$jscomp$1[\"registration-api-key\"]=\"Undefined API key. Check Firebase app initialization.\",_a$jscomp$1[\"registration-app-id\"]=\"Undefined app identifier. Check Firebase app initialization.\",_a$jscomp$1[\"storage-open\"]=\"Error thrown when opening storage. Original error: {$originalErrorMessage}.\",\n_a$jscomp$1[\"storage-get\"]=\"Error thrown when reading from storage. Original error: {$originalErrorMessage}.\",_a$jscomp$1[\"storage-set\"]=\"Error thrown when writing to storage. Original error: {$originalErrorMessage}.\",_a$jscomp$1[\"storage-delete\"]=\"Error thrown when deleting from storage. Original error: {$originalErrorMessage}.\",_a$jscomp$1[\"fetch-client-network\"]=\"Fetch client failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.\",_a$jscomp$1[\"fetch-timeout\"]=\n'The config fetch request timed out.  Configure timeout using \"fetchTimeoutMillis\" SDK setting.',_a$jscomp$1[\"fetch-throttle\"]='The config fetch request timed out while in an exponential backoff state. Configure timeout using \"fetchTimeoutMillis\" SDK setting. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',_a$jscomp$1[\"fetch-client-parse\"]=\"Fetch client could not parse response. Original error: {$originalErrorMessage}.\",_a$jscomp$1[\"fetch-status\"]=\"Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.\",\n_a$jscomp$1);var ERROR_FACTORY=new _util.ErrorFactory(\"remoteconfig\",\"Remote Config\",require),RestClient=function(){function RestClient(firebaseInstallations,sdkVersion,namespace,projectId,apiKey,appId){this.firebaseInstallations=firebaseInstallations;this.sdkVersion=sdkVersion;this.namespace=namespace;this.projectId=projectId;this.apiKey=apiKey;this.appId=appId}RestClient.prototype.fetch=function(request){return(0,_tslib.__awaiter)(this,void 0,void 0,function(){var _a,installationId,installationToken,\nurlBase,url,headers,requestBody,options,fetchPromise,timeoutPromise,response,originalError_1,errorCode,status,responseEtag,config,state,responseBody,originalError_2;return(0,_tslib.__generator)(this,function(_b){switch(_b.label){case 0:return[4,Promise.all([this.firebaseInstallations.getId(),this.firebaseInstallations.getToken()])];case 1:_a=_b.sent(),installationId=_a[0],installationToken=_a[1],urlBase=window.FIREBASE_REMOTE_CONFIG_URL_BASE||\"https://firebaseremoteconfig.googleapis.com\",url=urlBase+\n\"/v1/projects/\"+this.projectId+\"/namespaces/\"+this.namespace+\":fetch?key\\x3d\"+this.apiKey,headers={\"Content-Type\":\"application/json\",\"Content-Encoding\":\"gzip\",\"If-None-Match\":request.eTag||\"*\"},requestBody={sdk_version:this.sdkVersion,app_instance_id:installationId,app_instance_id_token:installationToken,app_id:this.appId,language_code:getUserLanguage()},options={method:\"POST\",headers,body:JSON.stringify(requestBody)},fetchPromise=fetch(url,options),timeoutPromise=new Promise(function(_resolve,reject){request.signal.addEventListener(function(){var error=\nError(\"The operation was aborted.\");error.name=\"AbortError\";reject(error)})}),_b.label=2;case 2:return _b.trys.push([2,5,,6]),[4,Promise.race([fetchPromise,timeoutPromise])];case 3:return _b.sent(),[4,fetchPromise];case 4:return response=_b.sent(),[3,6];case 5:throw originalError_1=_b.sent(),errorCode=\"fetch-client-network\",\"AbortError\"===originalError_1.name&&(errorCode=\"fetch-timeout\"),ERROR_FACTORY.create(errorCode,{originalErrorMessage:originalError_1.message});case 6:status=response.status;responseEtag=\nresponse.headers.get(\"ETag\")||void 0;if(200!==response.status)return[3,11];responseBody=void 0;_b.label=7;case 7:return _b.trys.push([7,9,,10]),[4,response.json()];case 8:return responseBody=_b.sent(),[3,10];case 9:throw originalError_2=_b.sent(),ERROR_FACTORY.create(\"fetch-client-parse\",{originalErrorMessage:originalError_2.message});case 10:config=responseBody.entries,state=responseBody.state,_b.label=11;case 11:if(\"INSTANCE_STATE_UNSPECIFIED\"===state)status=500;else if(\"NO_CHANGE\"===state)status=\n304;else if(\"NO_TEMPLATE\"===state||\"EMPTY_CONFIG\"===state)config={};if(304!==status&&200!==status)throw ERROR_FACTORY.create(\"fetch-status\",{httpStatus:status});return[2,{status,eTag:responseEtag,config}]}})})};return RestClient}(),RemoteConfigAbortSignal=function(){function RemoteConfigAbortSignal(){this.listeners=[]}RemoteConfigAbortSignal.prototype.addEventListener=function(listener){this.listeners.push(listener)};RemoteConfigAbortSignal.prototype.abort=function(){this.listeners.forEach(function(listener){return listener()})};\nreturn RemoteConfigAbortSignal}(),BOOLEAN_TRUTHY_VALUES=\"1 true t yes y on\".split(\" \"),Value=function(){function Value(_source,_value){void 0===_value&&(_value=\"\");this._source=_source;this._value=_value}Value.prototype.asString=function(){return this._value};Value.prototype.asBoolean=function(){return\"static\"===this._source?!1:0<=BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase())};Value.prototype.asNumber=function(){if(\"static\"===this._source)return 0;var num=Number(this._value);isNaN(num)&&\n(num=0);return num};Value.prototype.getSource=function(){return this._source};return Value}(),RemoteConfig=function(){function RemoteConfig(app,_client,_storageCache,_storage,_logger){this.app=app;this._client=_client;this._storageCache=_storageCache;this._storage=_storage;this._logger=_logger;this._isInitializationComplete=!1;this.settings={fetchTimeoutMillis:6E4,minimumFetchIntervalMillis:432E5};this.defaultConfig={}}RemoteConfig.prototype.setLogLevel=function(logLevel){switch(logLevel){case \"debug\":this._logger.logLevel=\n_logger2.LogLevel.DEBUG;break;case \"silent\":this._logger.logLevel=_logger2.LogLevel.SILENT;break;default:this._logger.logLevel=_logger2.LogLevel.ERROR}};Object.defineProperty(RemoteConfig.prototype,\"fetchTimeMillis\",{get:function(){return this._storageCache.getLastSuccessfulFetchTimestampMillis()||-1},enumerable:!1,configurable:!0});Object.defineProperty(RemoteConfig.prototype,\"lastFetchStatus\",{get:function(){return this._storageCache.getLastFetchStatus()||\"no-fetch-yet\"},enumerable:!1,configurable:!0});\nRemoteConfig.prototype.activate=function(){return(0,_tslib.__awaiter)(this,void 0,void 0,function(){var _a,lastSuccessfulFetchResponse,activeConfigEtag;return(0,_tslib.__generator)(this,function(_b){switch(_b.label){case 0:return[4,Promise.all([this._storage.getLastSuccessfulFetchResponse(),this._storage.getActiveConfigEtag()])];case 1:return _a=_b.sent(),lastSuccessfulFetchResponse=_a[0],activeConfigEtag=_a[1],lastSuccessfulFetchResponse&&lastSuccessfulFetchResponse.config&&lastSuccessfulFetchResponse.eTag&&\nlastSuccessfulFetchResponse.eTag!==activeConfigEtag?[4,Promise.all([this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config),this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)])]:[2,!1];case 2:return _b.sent(),[2,!0]}})})};RemoteConfig.prototype.ensureInitialized=function(){var _this=this;this._initializePromise||(this._initializePromise=this._storageCache.loadFromStorage().then(function(){_this._isInitializationComplete=!0}));return this._initializePromise};RemoteConfig.prototype.fetch=\nfunction(){return(0,_tslib.__awaiter)(this,void 0,void 0,function(){var abortSignal,e_1,lastFetchStatus,_this=this;return(0,_tslib.__generator)(this,function(_a$jscomp$0){switch(_a$jscomp$0.label){case 0:abortSignal=new RemoteConfigAbortSignal,setTimeout(function(){return(0,_tslib.__awaiter)(_this,void 0,void 0,function(){return(0,_tslib.__generator)(this,function(_a){abortSignal.abort();return[2]})})},this.settings.fetchTimeoutMillis),_a$jscomp$0.label=1;case 1:return _a$jscomp$0.trys.push([1,4,\n,6]),[4,this._client.fetch({cacheMaxAgeMillis:this.settings.minimumFetchIntervalMillis,signal:abortSignal})];case 2:return _a$jscomp$0.sent(),[4,this._storageCache.setLastFetchStatus(\"success\")];case 3:return _a$jscomp$0.sent(),[3,6];case 4:return e_1=_a$jscomp$0.sent(),lastFetchStatus=e_1 instanceof _util.FirebaseError&&-1!==e_1.code.indexOf(\"fetch-throttle\")?\"throttle\":\"failure\",[4,this._storageCache.setLastFetchStatus(lastFetchStatus)];case 5:throw _a$jscomp$0.sent(),e_1;case 6:return[2]}})})};\nRemoteConfig.prototype.fetchAndActivate=function(){return(0,_tslib.__awaiter)(this,void 0,void 0,function(){return(0,_tslib.__generator)(this,function(_a){switch(_a.label){case 0:return[4,this.fetch()];case 1:return _a.sent(),[2,this.activate()]}})})};RemoteConfig.prototype.getAll=function(){var _this=this;return getAllKeys(this._storageCache.getActiveConfig(),this.defaultConfig).reduce(function(allConfigs,key){allConfigs[key]=_this.getValue(key);return allConfigs},{})};RemoteConfig.prototype.getBoolean=\nfunction(key){return this.getValue(key).asBoolean()};RemoteConfig.prototype.getNumber=function(key){return this.getValue(key).asNumber()};RemoteConfig.prototype.getString=function(key){return this.getValue(key).asString()};RemoteConfig.prototype.getValue=function(key){this._isInitializationComplete||this._logger.debug('A value was requested for key \"'+key+'\" before SDK initialization completed. Await on ensureInitialized if the intent was to get a previously activated value.');var activeConfig=this._storageCache.getActiveConfig();\nif(activeConfig&&void 0!==activeConfig[key])return new Value(\"remote\",activeConfig[key]);if(this.defaultConfig&&void 0!==this.defaultConfig[key])return new Value(\"default\",String(this.defaultConfig[key]));this._logger.debug('Returning static value for key \"'+key+'\". Define a default or remote value if this is unintentional.');return new Value(\"static\")};return RemoteConfig}(),Storage$jscomp$0=function(){function Storage(appId,appName,namespace,openDbPromise){void 0===openDbPromise&&(openDbPromise=\nopenDatabase());this.appId=appId;this.appName=appName;this.namespace=namespace;this.openDbPromise=openDbPromise}Storage.prototype.getLastFetchStatus=function(){return this.get(\"last_fetch_status\")};Storage.prototype.setLastFetchStatus=function(status){return this.set(\"last_fetch_status\",status)};Storage.prototype.getLastSuccessfulFetchTimestampMillis=function(){return this.get(\"last_successful_fetch_timestamp_millis\")};Storage.prototype.setLastSuccessfulFetchTimestampMillis=function(timestamp){return this.set(\"last_successful_fetch_timestamp_millis\",\ntimestamp)};Storage.prototype.getLastSuccessfulFetchResponse=function(){return this.get(\"last_successful_fetch_response\")};Storage.prototype.setLastSuccessfulFetchResponse=function(response){return this.set(\"last_successful_fetch_response\",response)};Storage.prototype.getActiveConfig=function(){return this.get(\"active_config\")};Storage.prototype.setActiveConfig=function(config){return this.set(\"active_config\",config)};Storage.prototype.getActiveConfigEtag=function(){return this.get(\"active_config_etag\")};\nStorage.prototype.setActiveConfigEtag=function(etag){return this.set(\"active_config_etag\",etag)};Storage.prototype.getThrottleMetadata=function(){return this.get(\"throttle_metadata\")};Storage.prototype.setThrottleMetadata=function(metadata){return this.set(\"throttle_metadata\",metadata)};Storage.prototype.deleteThrottleMetadata=function(){return this[\"delete\"](\"throttle_metadata\")};Storage.prototype.get=function(key){return(0,_tslib.__awaiter)(this,void 0,void 0,function(){var db,_this=this;return(0,\n_tslib.__generator)(this,function(_a){switch(_a.label){case 0:return[4,this.openDbPromise];case 1:return db=_a.sent(),[2,new Promise(function(resolve,reject){var objectStore=db.transaction([\"app_namespace_store\"],\"readonly\").objectStore(\"app_namespace_store\"),compositeKey=_this.createCompositeKey(key);try{var request=objectStore.get(compositeKey);request.onerror=function(event){reject(toFirebaseError(event,\"storage-get\"))};request.onsuccess=function(event){(event=event.target.result)?resolve(event.value):\nresolve(void 0)}}catch(e){reject(ERROR_FACTORY.create(\"storage-get\",{originalErrorMessage:e&&e.message}))}})]}})})};Storage.prototype.set=function(key,value){return(0,_tslib.__awaiter)(this,void 0,void 0,function(){var db,_this=this;return(0,_tslib.__generator)(this,function(_a){switch(_a.label){case 0:return[4,this.openDbPromise];case 1:return db=_a.sent(),[2,new Promise(function(resolve,reject){var objectStore=db.transaction([\"app_namespace_store\"],\"readwrite\").objectStore(\"app_namespace_store\"),\ncompositeKey=_this.createCompositeKey(key);try{var request=objectStore.put({compositeKey,value});request.onerror=function(event){reject(toFirebaseError(event,\"storage-set\"))};request.onsuccess=function(){resolve()}}catch(e){reject(ERROR_FACTORY.create(\"storage-set\",{originalErrorMessage:e&&e.message}))}})]}})})};Storage.prototype[\"delete\"]=function(key){return(0,_tslib.__awaiter)(this,void 0,void 0,function(){var db,_this=this;return(0,_tslib.__generator)(this,function(_a){switch(_a.label){case 0:return[4,\nthis.openDbPromise];case 1:return db=_a.sent(),[2,new Promise(function(resolve,reject){var objectStore=db.transaction([\"app_namespace_store\"],\"readwrite\").objectStore(\"app_namespace_store\"),compositeKey=_this.createCompositeKey(key);try{var request=objectStore[\"delete\"](compositeKey);request.onerror=function(event){reject(toFirebaseError(event,\"storage-delete\"))};request.onsuccess=function(){resolve()}}catch(e){reject(ERROR_FACTORY.create(\"storage-delete\",{originalErrorMessage:e&&e.message}))}})]}})})};\nStorage.prototype.createCompositeKey=function(key){return[this.appId,this.appName,this.namespace,key].join()};return Storage}(),StorageCache=function(){function StorageCache(storage){this.storage=storage}StorageCache.prototype.getLastFetchStatus=function(){return this.lastFetchStatus};StorageCache.prototype.getLastSuccessfulFetchTimestampMillis=function(){return this.lastSuccessfulFetchTimestampMillis};StorageCache.prototype.getActiveConfig=function(){return this.activeConfig};StorageCache.prototype.loadFromStorage=\nfunction(){return(0,_tslib.__awaiter)(this,void 0,void 0,function(){var lastFetchStatusPromise,lastSuccessfulFetchTimestampMillisPromise,activeConfigPromise,lastFetchStatus,lastSuccessfulFetchTimestampMillis,activeConfig;return(0,_tslib.__generator)(this,function(_a){switch(_a.label){case 0:return lastFetchStatusPromise=this.storage.getLastFetchStatus(),lastSuccessfulFetchTimestampMillisPromise=this.storage.getLastSuccessfulFetchTimestampMillis(),activeConfigPromise=this.storage.getActiveConfig(),\n[4,lastFetchStatusPromise];case 1:if(lastFetchStatus=_a.sent())this.lastFetchStatus=lastFetchStatus;return[4,lastSuccessfulFetchTimestampMillisPromise];case 2:if(lastSuccessfulFetchTimestampMillis=_a.sent())this.lastSuccessfulFetchTimestampMillis=lastSuccessfulFetchTimestampMillis;return[4,activeConfigPromise];case 3:if(activeConfig=_a.sent())this.activeConfig=activeConfig;return[2]}})})};StorageCache.prototype.setLastFetchStatus=function(status){this.lastFetchStatus=status;return this.storage.setLastFetchStatus(status)};\nStorageCache.prototype.setLastSuccessfulFetchTimestampMillis=function(timestampMillis){this.lastSuccessfulFetchTimestampMillis=timestampMillis;return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis)};StorageCache.prototype.setActiveConfig=function(activeConfig){this.activeConfig=activeConfig;return this.storage.setActiveConfig(activeConfig)};return StorageCache}(),RetryingClient=function(){function RetryingClient(client,storage){this.client=client;this.storage=storage}RetryingClient.prototype.fetch=\nfunction(request){return(0,_tslib.__awaiter)(this,void 0,void 0,function(){var throttleMetadata;return(0,_tslib.__generator)(this,function(_a){switch(_a.label){case 0:return[4,this.storage.getThrottleMetadata()];case 1:return throttleMetadata=_a.sent()||{backoffCount:0,throttleEndTimeMillis:Date.now()},[2,this.attemptFetch(request,throttleMetadata)]}})})};RetryingClient.prototype.attemptFetch=function(request,_a){var throttleEndTimeMillis=_a.throttleEndTimeMillis,backoffCount=_a.backoffCount;return(0,\n_tslib.__awaiter)(this,void 0,void 0,function(){var response,e_1,throttleMetadata;return(0,_tslib.__generator)(this,function(_b){switch(_b.label){case 0:return[4,setAbortableTimeout(request.signal,throttleEndTimeMillis)];case 1:_b.sent(),_b.label=2;case 2:return _b.trys.push([2,5,,7]),[4,this.client.fetch(request)];case 3:return response=_b.sent(),[4,this.storage.deleteThrottleMetadata()];case 4:return _b.sent(),[2,response];case 5:e_1=_b.sent();e_1 instanceof _util.FirebaseError&&e_1.customData?\n(_b=Number(e_1.customData.httpStatus),_b=429===_b||500===_b||503===_b||504===_b):_b=!1;if(!_b)throw e_1;throttleMetadata={throttleEndTimeMillis:Date.now()+(0,_util.calculateBackoffMillis)(backoffCount),backoffCount:backoffCount+1};return[4,this.storage.setThrottleMetadata(throttleMetadata)];case 6:return _b.sent(),[2,this.attemptFetch(request,throttleMetadata)];case 7:return[2]}})})};return RetryingClient}(),name=\"@firebase/remote-config\",version=\"0.1.42\";registerRemoteConfig(global[\"default\"])}","~:source","shadow$provide[\"module$node_modules$$firebase$remote_config$dist$index_esm\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerRemoteConfig = registerRemoteConfig;\n\nvar _app = _interopRequireDefault(require(\"@firebase/app\"));\n\nrequire(\"@firebase/installations\");\n\nvar _tslib = require(\"tslib\");\n\nvar _util = require(\"@firebase/util\");\n\nvar _logger2 = require(\"@firebase/logger\");\n\nvar _component = require(\"@firebase/component\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\r\n *\r\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\r\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\r\n * Cache API doesn't support matching entries by time.\r\n */\nvar CachingClient =\n/** @class */\nfunction () {\n  function CachingClient(client, storage, storageCache, logger) {\n    this.client = client;\n    this.storage = storage;\n    this.storageCache = storageCache;\n    this.logger = logger;\n  }\n  /**\r\n   * Returns true if the age of the cached fetched configs is less than or equal to\r\n   * {@link Settings#minimumFetchIntervalInSeconds}.\r\n   *\r\n   * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\r\n   * native Fetch API.\r\n   *\r\n   * <p>Visible for testing.\r\n   */\n\n\n  CachingClient.prototype.isCachedDataFresh = function (cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis) {\n    // Cache can only be fresh if it's populated.\n    if (!lastSuccessfulFetchTimestampMillis) {\n      this.logger.debug('Config fetch cache check. Cache unpopulated.');\n      return false;\n    } // Calculates age of cache entry.\n\n\n    var cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\n    var isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\n    this.logger.debug('Config fetch cache check.' + (\" Cache age millis: \" + cacheAgeMillis + \".\") + (\" Cache max age millis (minimumFetchIntervalMillis setting): \" + cacheMaxAgeMillis + \".\") + (\" Is cache hit: \" + isCachedDataFresh + \".\"));\n    return isCachedDataFresh;\n  };\n\n  CachingClient.prototype.fetch = function (request) {\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n      var _a, lastSuccessfulFetchTimestampMillis, lastSuccessfulFetchResponse, response, storageOperations;\n\n      return (0, _tslib.__generator)(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all([this.storage.getLastSuccessfulFetchTimestampMillis(), this.storage.getLastSuccessfulFetchResponse()])];\n\n          case 1:\n            _a = _b.sent(), lastSuccessfulFetchTimestampMillis = _a[0], lastSuccessfulFetchResponse = _a[1]; // Exits early on cache hit.\n\n            if (lastSuccessfulFetchResponse && this.isCachedDataFresh(request.cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis)) {\n              return [2\n              /*return*/\n              , lastSuccessfulFetchResponse];\n            } // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\n            // that allows the caller to pass an ETag.\n\n\n            request.eTag = lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\n            return [4\n            /*yield*/\n            , this.client.fetch(request)];\n\n          case 2:\n            response = _b.sent();\n            storageOperations = [// Uses write-through cache for consistency with synchronous public API.\n            this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())];\n\n            if (response.status === 200) {\n              // Caches response only if it has changed, ie non-304 responses.\n              storageOperations.push(this.storage.setLastSuccessfulFetchResponse(response));\n            }\n\n            return [4\n            /*yield*/\n            , Promise.all(storageOperations)];\n\n          case 3:\n            _b.sent();\n\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n\n  return CachingClient;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _a;\n\nvar ERROR_DESCRIPTION_MAP = (_a = {}, _a[\"registration-window\"\n/* REGISTRATION_WINDOW */\n] = 'Undefined window object. This SDK only supports usage in a browser environment.', _a[\"registration-project-id\"\n/* REGISTRATION_PROJECT_ID */\n] = 'Undefined project identifier. Check Firebase app initialization.', _a[\"registration-api-key\"\n/* REGISTRATION_API_KEY */\n] = 'Undefined API key. Check Firebase app initialization.', _a[\"registration-app-id\"\n/* REGISTRATION_APP_ID */\n] = 'Undefined app identifier. Check Firebase app initialization.', _a[\"storage-open\"\n/* STORAGE_OPEN */\n] = 'Error thrown when opening storage. Original error: {$originalErrorMessage}.', _a[\"storage-get\"\n/* STORAGE_GET */\n] = 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.', _a[\"storage-set\"\n/* STORAGE_SET */\n] = 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.', _a[\"storage-delete\"\n/* STORAGE_DELETE */\n] = 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.', _a[\"fetch-client-network\"\n/* FETCH_NETWORK */\n] = 'Fetch client failed to connect to a network. Check Internet connection.' + ' Original error: {$originalErrorMessage}.', _a[\"fetch-timeout\"\n/* FETCH_TIMEOUT */\n] = 'The config fetch request timed out. ' + ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.', _a[\"fetch-throttle\"\n/* FETCH_THROTTLE */\n] = 'The config fetch request timed out while in an exponential backoff state.' + ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.' + ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.', _a[\"fetch-client-parse\"\n/* FETCH_PARSE */\n] = 'Fetch client could not parse response.' + ' Original error: {$originalErrorMessage}.', _a[\"fetch-status\"\n/* FETCH_STATUS */\n] = 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.', _a);\nvar ERROR_FACTORY = new _util.ErrorFactory('remoteconfig'\n/* service */\n, 'Remote Config'\n/* service name */\n, ERROR_DESCRIPTION_MAP); // Note how this is like typeof/instanceof, but for ErrorCode.\n\nfunction hasErrorCode(e, errorCode) {\n  return e instanceof _util.FirebaseError && e.code.indexOf(errorCode) !== -1;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Attempts to get the most accurate browser language setting.\r\n *\r\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\r\n *\r\n * <p>Defers default language specification to server logic for consistency.\r\n *\r\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\r\n */\n\n\nfunction getUserLanguage(navigatorLanguage) {\n  if (navigatorLanguage === void 0) {\n    navigatorLanguage = navigator;\n  }\n\n  return (// Most reliable, but only supported in Chrome/Firefox.\n    navigatorLanguage.languages && navigatorLanguage.languages[0] || // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language // Polyfill otherwise.\n\n  );\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Implements the Client abstraction for the Remote Config REST API.\r\n */\n\n\nvar RestClient =\n/** @class */\nfunction () {\n  function RestClient(firebaseInstallations, sdkVersion, namespace, projectId, apiKey, appId) {\n    this.firebaseInstallations = firebaseInstallations;\n    this.sdkVersion = sdkVersion;\n    this.namespace = namespace;\n    this.projectId = projectId;\n    this.apiKey = apiKey;\n    this.appId = appId;\n  }\n  /**\r\n   * Fetches from the Remote Config REST API.\r\n   *\r\n   * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\r\n   * connect to the network.\r\n   * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\r\n   * fetch response.\r\n   * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\r\n   */\n\n\n  RestClient.prototype.fetch = function (request) {\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n      var _a, installationId, installationToken, urlBase, url, headers, requestBody, options, fetchPromise, timeoutPromise, response, originalError_1, errorCode, status, responseEtag, config, state, responseBody, originalError_2;\n\n      return (0, _tslib.__generator)(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all([this.firebaseInstallations.getId(), this.firebaseInstallations.getToken()])];\n\n          case 1:\n            _a = _b.sent(), installationId = _a[0], installationToken = _a[1];\n            urlBase = window.FIREBASE_REMOTE_CONFIG_URL_BASE || 'https://firebaseremoteconfig.googleapis.com';\n            url = urlBase + \"/v1/projects/\" + this.projectId + \"/namespaces/\" + this.namespace + \":fetch?key=\" + this.apiKey;\n            headers = {\n              'Content-Type': 'application/json',\n              'Content-Encoding': 'gzip',\n              // Deviates from pure decorator by not passing max-age header since we don't currently have\n              // service behavior using that header.\n              'If-None-Match': request.eTag || '*'\n            };\n            requestBody = {\n              /* eslint-disable camelcase */\n              sdk_version: this.sdkVersion,\n              app_instance_id: installationId,\n              app_instance_id_token: installationToken,\n              app_id: this.appId,\n              language_code: getUserLanguage()\n              /* eslint-enable camelcase */\n\n            };\n            options = {\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify(requestBody)\n            };\n            fetchPromise = fetch(url, options);\n            timeoutPromise = new Promise(function (_resolve, reject) {\n              // Maps async event listener to Promise API.\n              request.signal.addEventListener(function () {\n                // Emulates https://heycam.github.io/webidl/#aborterror\n                var error = new Error('The operation was aborted.');\n                error.name = 'AbortError';\n                reject(error);\n              });\n            });\n            _b.label = 2;\n\n          case 2:\n            _b.trys.push([2, 5,, 6]);\n\n            return [4\n            /*yield*/\n            , Promise.race([fetchPromise, timeoutPromise])];\n\n          case 3:\n            _b.sent();\n\n            return [4\n            /*yield*/\n            , fetchPromise];\n\n          case 4:\n            response = _b.sent();\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            originalError_1 = _b.sent();\n            errorCode = \"fetch-client-network\"\n            /* FETCH_NETWORK */\n            ;\n\n            if (originalError_1.name === 'AbortError') {\n              errorCode = \"fetch-timeout\"\n              /* FETCH_TIMEOUT */\n              ;\n            }\n\n            throw ERROR_FACTORY.create(errorCode, {\n              originalErrorMessage: originalError_1.message\n            });\n\n          case 6:\n            status = response.status;\n            responseEtag = response.headers.get('ETag') || undefined;\n            if (!(response.status === 200)) return [3\n            /*break*/\n            , 11];\n            responseBody = void 0;\n            _b.label = 7;\n\n          case 7:\n            _b.trys.push([7, 9,, 10]);\n\n            return [4\n            /*yield*/\n            , response.json()];\n\n          case 8:\n            responseBody = _b.sent();\n            return [3\n            /*break*/\n            , 10];\n\n          case 9:\n            originalError_2 = _b.sent();\n            throw ERROR_FACTORY.create(\"fetch-client-parse\"\n            /* FETCH_PARSE */\n            , {\n              originalErrorMessage: originalError_2.message\n            });\n\n          case 10:\n            config = responseBody['entries'];\n            state = responseBody['state'];\n            _b.label = 11;\n\n          case 11:\n            // Normalizes based on legacy state.\n            if (state === 'INSTANCE_STATE_UNSPECIFIED') {\n              status = 500;\n            } else if (state === 'NO_CHANGE') {\n              status = 304;\n            } else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\n              // These cases can be fixed remotely, so normalize to safe value.\n              config = {};\n            } // Normalize to exception-based control flow for non-success cases.\n            // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\n            // differentiating success states (200 from 304; the state body param is undefined in a\n            // standard 304).\n\n\n            if (status !== 304 && status !== 200) {\n              throw ERROR_FACTORY.create(\"fetch-status\"\n              /* FETCH_STATUS */\n              , {\n                httpStatus: status\n              });\n            }\n\n            return [2\n            /*return*/\n            , {\n              status: status,\n              eTag: responseEtag,\n              config: config\n            }];\n        }\n      });\n    });\n  };\n\n  return RestClient;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Shims a minimal AbortSignal.\r\n *\r\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\r\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\r\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\r\n * swapped out if/when we do.\r\n */\n\n\nvar RemoteConfigAbortSignal =\n/** @class */\nfunction () {\n  function RemoteConfigAbortSignal() {\n    this.listeners = [];\n  }\n\n  RemoteConfigAbortSignal.prototype.addEventListener = function (listener) {\n    this.listeners.push(listener);\n  };\n\n  RemoteConfigAbortSignal.prototype.abort = function () {\n    this.listeners.forEach(function (listener) {\n      return listener();\n    });\n  };\n\n  return RemoteConfigAbortSignal;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_VALUE_FOR_BOOLEAN = false;\nvar DEFAULT_VALUE_FOR_STRING = '';\nvar DEFAULT_VALUE_FOR_NUMBER = 0;\nvar BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\n\nvar Value =\n/** @class */\nfunction () {\n  function Value(_source, _value) {\n    if (_value === void 0) {\n      _value = DEFAULT_VALUE_FOR_STRING;\n    }\n\n    this._source = _source;\n    this._value = _value;\n  }\n\n  Value.prototype.asString = function () {\n    return this._value;\n  };\n\n  Value.prototype.asBoolean = function () {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_BOOLEAN;\n    }\n\n    return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\n  };\n\n  Value.prototype.asNumber = function () {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_NUMBER;\n    }\n\n    var num = Number(this._value);\n\n    if (isNaN(num)) {\n      num = DEFAULT_VALUE_FOR_NUMBER;\n    }\n\n    return num;\n  };\n\n  Value.prototype.getSource = function () {\n    return this._source;\n  };\n\n  return Value;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\n\nvar DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\n\n/**\r\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\r\n *\r\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\r\n */\n\nvar RemoteConfig =\n/** @class */\nfunction () {\n  function RemoteConfig( // Required by FirebaseServiceFactory interface.\n  app, // JS doesn't support private yet\n  // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\n  // underscore prefix.\n  _client, _storageCache, _storage, _logger) {\n    this.app = app;\n    this._client = _client;\n    this._storageCache = _storageCache;\n    this._storage = _storage;\n    this._logger = _logger; // Tracks completion of initialization promise.\n\n    this._isInitializationComplete = false;\n    this.settings = {\n      fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\n      minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\n    };\n    this.defaultConfig = {};\n  } // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\n  // to differentiate 2p and 3p use-cases.\n\n\n  RemoteConfig.prototype.setLogLevel = function (logLevel) {\n    switch (logLevel) {\n      case 'debug':\n        this._logger.logLevel = _logger2.LogLevel.DEBUG;\n        break;\n\n      case 'silent':\n        this._logger.logLevel = _logger2.LogLevel.SILENT;\n        break;\n\n      default:\n        this._logger.logLevel = _logger2.LogLevel.ERROR;\n    }\n  };\n\n  Object.defineProperty(RemoteConfig.prototype, \"fetchTimeMillis\", {\n    get: function get() {\n      return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RemoteConfig.prototype, \"lastFetchStatus\", {\n    get: function get() {\n      return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  RemoteConfig.prototype.activate = function () {\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n      var _a, lastSuccessfulFetchResponse, activeConfigEtag;\n\n      return (0, _tslib.__generator)(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all([this._storage.getLastSuccessfulFetchResponse(), this._storage.getActiveConfigEtag()])];\n\n          case 1:\n            _a = _b.sent(), lastSuccessfulFetchResponse = _a[0], activeConfigEtag = _a[1];\n\n            if (!lastSuccessfulFetchResponse || !lastSuccessfulFetchResponse.config || !lastSuccessfulFetchResponse.eTag || lastSuccessfulFetchResponse.eTag === activeConfigEtag) {\n              // Either there is no successful fetched config, or is the same as current active\n              // config.\n              return [2\n              /*return*/\n              , false];\n            }\n\n            return [4\n            /*yield*/\n            , Promise.all([this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config), this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)])];\n\n          case 2:\n            _b.sent();\n\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  };\n\n  RemoteConfig.prototype.ensureInitialized = function () {\n    var _this = this;\n\n    if (!this._initializePromise) {\n      this._initializePromise = this._storageCache.loadFromStorage().then(function () {\n        _this._isInitializationComplete = true;\n      });\n    }\n\n    return this._initializePromise;\n  };\n  /**\r\n   * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\r\n   * {@link Settings.fetchTimeoutInSeconds} or\r\n   * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\r\n   */\n\n\n  RemoteConfig.prototype.fetch = function () {\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n      var abortSignal, e_1, lastFetchStatus;\n\n      var _this = this;\n\n      return (0, _tslib.__generator)(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            abortSignal = new RemoteConfigAbortSignal();\n            setTimeout(function () {\n              return (0, _tslib.__awaiter)(_this, void 0, void 0, function () {\n                return (0, _tslib.__generator)(this, function (_a) {\n                  // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\n                  abortSignal.abort();\n                  return [2\n                  /*return*/\n                  ];\n                });\n              });\n            }, this.settings.fetchTimeoutMillis);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 4,, 6]);\n\n            return [4\n            /*yield*/\n            , this._client.fetch({\n              cacheMaxAgeMillis: this.settings.minimumFetchIntervalMillis,\n              signal: abortSignal\n            })];\n\n          case 2:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this._storageCache.setLastFetchStatus('success')];\n\n          case 3:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 4:\n            e_1 = _a.sent();\n            lastFetchStatus = hasErrorCode(e_1, \"fetch-throttle\"\n            /* FETCH_THROTTLE */\n            ) ? 'throttle' : 'failure';\n            return [4\n            /*yield*/\n            , this._storageCache.setLastFetchStatus(lastFetchStatus)];\n\n          case 5:\n            _a.sent();\n\n            throw e_1;\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  RemoteConfig.prototype.fetchAndActivate = function () {\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n      return (0, _tslib.__generator)(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.fetch()];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , this.activate()];\n        }\n      });\n    });\n  };\n\n  RemoteConfig.prototype.getAll = function () {\n    var _this = this;\n\n    return getAllKeys(this._storageCache.getActiveConfig(), this.defaultConfig).reduce(function (allConfigs, key) {\n      allConfigs[key] = _this.getValue(key);\n      return allConfigs;\n    }, {});\n  };\n\n  RemoteConfig.prototype.getBoolean = function (key) {\n    return this.getValue(key).asBoolean();\n  };\n\n  RemoteConfig.prototype.getNumber = function (key) {\n    return this.getValue(key).asNumber();\n  };\n\n  RemoteConfig.prototype.getString = function (key) {\n    return this.getValue(key).asString();\n  };\n\n  RemoteConfig.prototype.getValue = function (key) {\n    if (!this._isInitializationComplete) {\n      this._logger.debug(\"A value was requested for key \\\"\" + key + \"\\\" before SDK initialization completed.\" + ' Await on ensureInitialized if the intent was to get a previously activated value.');\n    }\n\n    var activeConfig = this._storageCache.getActiveConfig();\n\n    if (activeConfig && activeConfig[key] !== undefined) {\n      return new Value('remote', activeConfig[key]);\n    } else if (this.defaultConfig && this.defaultConfig[key] !== undefined) {\n      return new Value('default', String(this.defaultConfig[key]));\n    }\n\n    this._logger.debug(\"Returning static value for key \\\"\" + key + \"\\\".\" + ' Define a default or remote value if this is unintentional.');\n\n    return new Value('static');\n  };\n\n  return RemoteConfig;\n}();\n/**\r\n * Dedupes and returns an array of all the keys of the received objects.\r\n */\n\n\nfunction getAllKeys(obj1, obj2) {\n  if (obj1 === void 0) {\n    obj1 = {};\n  }\n\n  if (obj2 === void 0) {\n    obj2 = {};\n  }\n\n  return Object.keys((0, _tslib.__assign)((0, _tslib.__assign)({}, obj1), obj2));\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\r\n */\n\n\nfunction toFirebaseError(event, errorCode) {\n  var originalError = event.target.error || undefined;\n  return ERROR_FACTORY.create(errorCode, {\n    originalErrorMessage: originalError && originalError.message\n  });\n}\n/**\r\n * A general-purpose store keyed by app + namespace + {@link\r\n * ProjectNamespaceKeyFieldValue}.\r\n *\r\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\r\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\r\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\r\n *\r\n * <p>Visible for testing.\r\n */\n\n\nvar APP_NAMESPACE_STORE = 'app_namespace_store';\nvar DB_NAME = 'firebase_remote_config';\nvar DB_VERSION = 1; // Visible for testing.\n\nfunction openDatabase() {\n  return new Promise(function (resolve, reject) {\n    var request = indexedDB.open(DB_NAME, DB_VERSION);\n\n    request.onerror = function (event) {\n      reject(toFirebaseError(event, \"storage-open\"\n      /* STORAGE_OPEN */\n      ));\n    };\n\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n\n    request.onupgradeneeded = function (event) {\n      var db = event.target.result; // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n\n      switch (event.oldVersion) {\n        case 0:\n          db.createObjectStore(APP_NAMESPACE_STORE, {\n            keyPath: 'compositeKey'\n          });\n      }\n    };\n  });\n}\n/**\r\n * Abstracts data persistence.\r\n */\n\n\nvar Storage =\n/** @class */\nfunction () {\n  /**\r\n   * @param appId enables storage segmentation by app (ID + name).\r\n   * @param appName enables storage segmentation by app (ID + name).\r\n   * @param namespace enables storage segmentation by namespace.\r\n   */\n  function Storage(appId, appName, namespace, openDbPromise) {\n    if (openDbPromise === void 0) {\n      openDbPromise = openDatabase();\n    }\n\n    this.appId = appId;\n    this.appName = appName;\n    this.namespace = namespace;\n    this.openDbPromise = openDbPromise;\n  }\n\n  Storage.prototype.getLastFetchStatus = function () {\n    return this.get('last_fetch_status');\n  };\n\n  Storage.prototype.setLastFetchStatus = function (status) {\n    return this.set('last_fetch_status', status);\n  }; // This is comparable to a cache entry timestamp. If we need to expire other data, we could\n  // consider adding timestamp to all storage records and an optional max age arg to getters.\n\n\n  Storage.prototype.getLastSuccessfulFetchTimestampMillis = function () {\n    return this.get('last_successful_fetch_timestamp_millis');\n  };\n\n  Storage.prototype.setLastSuccessfulFetchTimestampMillis = function (timestamp) {\n    return this.set('last_successful_fetch_timestamp_millis', timestamp);\n  };\n\n  Storage.prototype.getLastSuccessfulFetchResponse = function () {\n    return this.get('last_successful_fetch_response');\n  };\n\n  Storage.prototype.setLastSuccessfulFetchResponse = function (response) {\n    return this.set('last_successful_fetch_response', response);\n  };\n\n  Storage.prototype.getActiveConfig = function () {\n    return this.get('active_config');\n  };\n\n  Storage.prototype.setActiveConfig = function (config) {\n    return this.set('active_config', config);\n  };\n\n  Storage.prototype.getActiveConfigEtag = function () {\n    return this.get('active_config_etag');\n  };\n\n  Storage.prototype.setActiveConfigEtag = function (etag) {\n    return this.set('active_config_etag', etag);\n  };\n\n  Storage.prototype.getThrottleMetadata = function () {\n    return this.get('throttle_metadata');\n  };\n\n  Storage.prototype.setThrottleMetadata = function (metadata) {\n    return this.set('throttle_metadata', metadata);\n  };\n\n  Storage.prototype.deleteThrottleMetadata = function () {\n    return this[\"delete\"]('throttle_metadata');\n  };\n\n  Storage.prototype.get = function (key) {\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n      var db;\n\n      var _this = this;\n\n      return (0, _tslib.__generator)(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.openDbPromise];\n\n          case 1:\n            db = _a.sent();\n            return [2\n            /*return*/\n            , new Promise(function (resolve, reject) {\n              var transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\n              var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n\n              var compositeKey = _this.createCompositeKey(key);\n\n              try {\n                var request = objectStore.get(compositeKey);\n\n                request.onerror = function (event) {\n                  reject(toFirebaseError(event, \"storage-get\"\n                  /* STORAGE_GET */\n                  ));\n                };\n\n                request.onsuccess = function (event) {\n                  var result = event.target.result;\n\n                  if (result) {\n                    resolve(result.value);\n                  } else {\n                    resolve(undefined);\n                  }\n                };\n              } catch (e) {\n                reject(ERROR_FACTORY.create(\"storage-get\"\n                /* STORAGE_GET */\n                , {\n                  originalErrorMessage: e && e.message\n                }));\n              }\n            })];\n        }\n      });\n    });\n  };\n\n  Storage.prototype.set = function (key, value) {\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n      var db;\n\n      var _this = this;\n\n      return (0, _tslib.__generator)(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.openDbPromise];\n\n          case 1:\n            db = _a.sent();\n            return [2\n            /*return*/\n            , new Promise(function (resolve, reject) {\n              var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n              var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n\n              var compositeKey = _this.createCompositeKey(key);\n\n              try {\n                var request = objectStore.put({\n                  compositeKey: compositeKey,\n                  value: value\n                });\n\n                request.onerror = function (event) {\n                  reject(toFirebaseError(event, \"storage-set\"\n                  /* STORAGE_SET */\n                  ));\n                };\n\n                request.onsuccess = function () {\n                  resolve();\n                };\n              } catch (e) {\n                reject(ERROR_FACTORY.create(\"storage-set\"\n                /* STORAGE_SET */\n                , {\n                  originalErrorMessage: e && e.message\n                }));\n              }\n            })];\n        }\n      });\n    });\n  };\n\n  Storage.prototype[\"delete\"] = function (key) {\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n      var db;\n\n      var _this = this;\n\n      return (0, _tslib.__generator)(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.openDbPromise];\n\n          case 1:\n            db = _a.sent();\n            return [2\n            /*return*/\n            , new Promise(function (resolve, reject) {\n              var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n              var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n\n              var compositeKey = _this.createCompositeKey(key);\n\n              try {\n                var request = objectStore[\"delete\"](compositeKey);\n\n                request.onerror = function (event) {\n                  reject(toFirebaseError(event, \"storage-delete\"\n                  /* STORAGE_DELETE */\n                  ));\n                };\n\n                request.onsuccess = function () {\n                  resolve();\n                };\n              } catch (e) {\n                reject(ERROR_FACTORY.create(\"storage-delete\"\n                /* STORAGE_DELETE */\n                , {\n                  originalErrorMessage: e && e.message\n                }));\n              }\n            })];\n        }\n      });\n    });\n  }; // Facilitates composite key functionality (which is unsupported in IE).\n\n\n  Storage.prototype.createCompositeKey = function (key) {\n    return [this.appId, this.appName, this.namespace, key].join();\n  };\n\n  return Storage;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\r\n */\n\n\nvar StorageCache =\n/** @class */\nfunction () {\n  function StorageCache(storage) {\n    this.storage = storage;\n  }\n  /**\r\n   * Memory-only getters\r\n   */\n\n\n  StorageCache.prototype.getLastFetchStatus = function () {\n    return this.lastFetchStatus;\n  };\n\n  StorageCache.prototype.getLastSuccessfulFetchTimestampMillis = function () {\n    return this.lastSuccessfulFetchTimestampMillis;\n  };\n\n  StorageCache.prototype.getActiveConfig = function () {\n    return this.activeConfig;\n  };\n  /**\r\n   * Read-ahead getter\r\n   */\n\n\n  StorageCache.prototype.loadFromStorage = function () {\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n      var lastFetchStatusPromise, lastSuccessfulFetchTimestampMillisPromise, activeConfigPromise, lastFetchStatus, lastSuccessfulFetchTimestampMillis, activeConfig;\n      return (0, _tslib.__generator)(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            lastFetchStatusPromise = this.storage.getLastFetchStatus();\n            lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\n            activeConfigPromise = this.storage.getActiveConfig();\n            return [4\n            /*yield*/\n            , lastFetchStatusPromise];\n\n          case 1:\n            lastFetchStatus = _a.sent();\n\n            if (lastFetchStatus) {\n              this.lastFetchStatus = lastFetchStatus;\n            }\n\n            return [4\n            /*yield*/\n            , lastSuccessfulFetchTimestampMillisPromise];\n\n          case 2:\n            lastSuccessfulFetchTimestampMillis = _a.sent();\n\n            if (lastSuccessfulFetchTimestampMillis) {\n              this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\n            }\n\n            return [4\n            /*yield*/\n            , activeConfigPromise];\n\n          case 3:\n            activeConfig = _a.sent();\n\n            if (activeConfig) {\n              this.activeConfig = activeConfig;\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Write-through setters\r\n   */\n\n\n  StorageCache.prototype.setLastFetchStatus = function (status) {\n    this.lastFetchStatus = status;\n    return this.storage.setLastFetchStatus(status);\n  };\n\n  StorageCache.prototype.setLastSuccessfulFetchTimestampMillis = function (timestampMillis) {\n    this.lastSuccessfulFetchTimestampMillis = timestampMillis;\n    return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\n  };\n\n  StorageCache.prototype.setActiveConfig = function (activeConfig) {\n    this.activeConfig = activeConfig;\n    return this.storage.setActiveConfig(activeConfig);\n  };\n\n  return StorageCache;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Supports waiting on a backoff by:\r\n *\r\n * <ul>\r\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\r\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\r\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\r\n *       request appear the same.</li>\r\n * </ul>\r\n *\r\n * <p>Visible for testing.\r\n */\n\n\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\n  return new Promise(function (resolve, reject) {\n    // Derives backoff from given end time, normalizing negative numbers to zero.\n    var backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\n    var timeout = setTimeout(resolve, backoffMillis); // Adds listener, rather than sets onabort, because signal is a shared object.\n\n    signal.addEventListener(function () {\n      clearTimeout(timeout); // If the request completes before this timeout, the rejection has no effect.\n\n      reject(ERROR_FACTORY.create(\"fetch-throttle\"\n      /* FETCH_THROTTLE */\n      , {\n        throttleEndTimeMillis: throttleEndTimeMillis\n      }));\n    });\n  });\n}\n/**\r\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\r\n */\n\n\nfunction isRetriableError(e) {\n  if (!(e instanceof _util.FirebaseError) || !e.customData) {\n    return false;\n  } // Uses string index defined by ErrorData, which FirebaseError implements.\n\n\n  var httpStatus = Number(e.customData['httpStatus']);\n  return httpStatus === 429 || httpStatus === 500 || httpStatus === 503 || httpStatus === 504;\n}\n/**\r\n * Decorates a Client with retry logic.\r\n *\r\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\r\n * responses (because the SDK has no use for error responses).\r\n */\n\n\nvar RetryingClient =\n/** @class */\nfunction () {\n  function RetryingClient(client, storage) {\n    this.client = client;\n    this.storage = storage;\n  }\n\n  RetryingClient.prototype.fetch = function (request) {\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n      var throttleMetadata;\n      return (0, _tslib.__generator)(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.storage.getThrottleMetadata()];\n\n          case 1:\n            throttleMetadata = _a.sent() || {\n              backoffCount: 0,\n              throttleEndTimeMillis: Date.now()\n            };\n            return [2\n            /*return*/\n            , this.attemptFetch(request, throttleMetadata)];\n        }\n      });\n    });\n  };\n  /**\r\n   * A recursive helper for attempting a fetch request repeatedly.\r\n   *\r\n   * @throws any non-retriable errors.\r\n   */\n\n\n  RetryingClient.prototype.attemptFetch = function (request, _a) {\n    var throttleEndTimeMillis = _a.throttleEndTimeMillis,\n        backoffCount = _a.backoffCount;\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\n      var response, e_1, throttleMetadata;\n      return (0, _tslib.__generator)(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            // Starts with a (potentially zero) timeout to support resumption from stored state.\n            // Ensures the throttle end time is honored if the last attempt timed out.\n            // Note the SDK will never make a request if the fetch timeout expires at this point.\n            return [4\n            /*yield*/\n            , setAbortableTimeout(request.signal, throttleEndTimeMillis)];\n\n          case 1:\n            // Starts with a (potentially zero) timeout to support resumption from stored state.\n            // Ensures the throttle end time is honored if the last attempt timed out.\n            // Note the SDK will never make a request if the fetch timeout expires at this point.\n            _b.sent();\n\n            _b.label = 2;\n\n          case 2:\n            _b.trys.push([2, 5,, 7]);\n\n            return [4\n            /*yield*/\n            , this.client.fetch(request)];\n\n          case 3:\n            response = _b.sent(); // Note the SDK only clears throttle state if response is success or non-retriable.\n\n            return [4\n            /*yield*/\n            , this.storage.deleteThrottleMetadata()];\n\n          case 4:\n            // Note the SDK only clears throttle state if response is success or non-retriable.\n            _b.sent();\n\n            return [2\n            /*return*/\n            , response];\n\n          case 5:\n            e_1 = _b.sent();\n\n            if (!isRetriableError(e_1)) {\n              throw e_1;\n            }\n\n            throttleMetadata = {\n              throttleEndTimeMillis: Date.now() + (0, _util.calculateBackoffMillis)(backoffCount),\n              backoffCount: backoffCount + 1\n            }; // Persists state.\n\n            return [4\n            /*yield*/\n            , this.storage.setThrottleMetadata(throttleMetadata)];\n\n          case 6:\n            // Persists state.\n            _b.sent();\n\n            return [2\n            /*return*/\n            , this.attemptFetch(request, throttleMetadata)];\n\n          case 7:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return RetryingClient;\n}();\n\nvar name = \"@firebase/remote-config\";\nvar version = \"0.1.42\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nfunction registerRemoteConfig(firebaseInstance) {\n  firebaseInstance.INTERNAL.registerComponent(new _component.Component('remoteConfig', remoteConfigFactory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setMultipleInstances(true));\n  firebaseInstance.registerVersion(name, version);\n\n  function remoteConfigFactory(container, _a) {\n    var namespace = _a.instanceIdentifier;\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n\n    var app = container.getProvider('app').getImmediate(); // The following call will always succeed because rc has `import '@firebase/installations'`\n\n    var installations = container.getProvider('installations').getImmediate(); // Guards against the SDK being used in non-browser environments.\n\n    if (typeof window === 'undefined') {\n      throw ERROR_FACTORY.create(\"registration-window\"\n      /* REGISTRATION_WINDOW */\n      );\n    } // Normalizes optional inputs.\n\n\n    var _b = app.options,\n        projectId = _b.projectId,\n        apiKey = _b.apiKey,\n        appId = _b.appId;\n\n    if (!projectId) {\n      throw ERROR_FACTORY.create(\"registration-project-id\"\n      /* REGISTRATION_PROJECT_ID */\n      );\n    }\n\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(\"registration-api-key\"\n      /* REGISTRATION_API_KEY */\n      );\n    }\n\n    if (!appId) {\n      throw ERROR_FACTORY.create(\"registration-app-id\"\n      /* REGISTRATION_APP_ID */\n      );\n    }\n\n    namespace = namespace || 'firebase';\n    var storage = new Storage(appId, app.name, namespace);\n    var storageCache = new StorageCache(storage);\n    var logger = new _logger2.Logger(name); // Sets ERROR as the default log level.\n    // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\n\n    logger.logLevel = _logger2.LogLevel.ERROR;\n    var restClient = new RestClient(installations, // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\n    firebaseInstance.SDK_VERSION, namespace, projectId, apiKey, appId);\n    var retryingClient = new RetryingClient(restClient, storage);\n    var cachingClient = new CachingClient(retryingClient, storage, storageCache, logger);\n    var remoteConfigInstance = new RemoteConfig(app, cachingClient, storageCache, storage, logger); // Starts warming cache.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n    remoteConfigInstance.ensureInitialized();\n    return remoteConfigInstance;\n  }\n}\n\nregisterRemoteConfig(_app[\"default\"]);\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$firebase$util$dist$index_esm","~$module$node_modules$tslib$tslib","~$shadow.js","~$module$node_modules$$firebase$installations$dist$index_cjs","~$module$node_modules$$firebase$app$dist$index_esm","~$module$node_modules$$firebase$component$dist$index_esm","~$module$node_modules$$firebase$logger$dist$index_cjs"]],"~:properties",["^5",["setThrottleMetadata","getLastSuccessfulFetchTimestampMillis","registerRemoteConfig","fetch","eTag","setLastSuccessfulFetchTimestampMillis","fetchTimeMillis","firebaseInstallations","lastSuccessfulFetchTimestampMillis","onerror","body","config","getLastFetchStatus","getLastSuccessfulFetchResponse","logLevel","_value","activate","settings","openDbPromise","httpStatus","deleteThrottleMetadata","onsuccess","getString","label","method","minimumFetchIntervalMillis","getNumber","__esModule","setLastFetchStatus","storage","getAll","asNumber","fetchTimeoutMillis","getValue","compositeKey","signal","defaultConfig","keyPath","name","appName","configurable","attemptFetch","cacheMaxAgeMillis","isCachedDataFresh","_source","value","loadFromStorage","onupgradeneeded","enumerable","getSource","setActiveConfig","getActiveConfigEtag","status","fetchAndActivate","setActiveConfigEtag","_client","setLastSuccessfulFetchResponse","logger","activeConfig","apiKey","createCompositeKey","app_instance_id_token","_initializePromise","appId","app","throttleEndTimeMillis","_storageCache","_logger","getThrottleMetadata","setLogLevel","_isInitializationComplete","set","getBoolean","asBoolean","lastFetchStatus","abort","projectId","originalErrorMessage","_storage","namespace","sdkVersion","app_id","app_instance_id","storageCache","addEventListener","client","getActiveConfig","listeners","get","backoffCount","asString","ensureInitialized","sdk_version","language_code","headers"]],"~:compiled-at",1627823146991,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$firebase$remote_config$dist$index_esm.js\",\n\"lineCount\":43,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@firebase/remote-config/dist/index.esm.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$firebase$remote_config$dist$index_esm\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.registerRemoteConfig = registerRemoteConfig;\\n\\nvar _app = _interopRequireDefault(require(\\\"@firebase/app\\\"));\\n\\nrequire(\\\"@firebase/installations\\\");\\n\\nvar _tslib = require(\\\"tslib\\\");\\n\\nvar _util = require(\\\"@firebase/util\\\");\\n\\nvar _logger2 = require(\\\"@firebase/logger\\\");\\n\\nvar _component = require(\\\"@firebase/component\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\\r\\n *\\r\\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\\r\\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\\r\\n * Cache API doesn't support matching entries by time.\\r\\n */\\nvar CachingClient =\\n/** @class */\\nfunction () {\\n  function CachingClient(client, storage, storageCache, logger) {\\n    this.client = client;\\n    this.storage = storage;\\n    this.storageCache = storageCache;\\n    this.logger = logger;\\n  }\\n  /**\\r\\n   * Returns true if the age of the cached fetched configs is less than or equal to\\r\\n   * {@link Settings#minimumFetchIntervalInSeconds}.\\r\\n   *\\r\\n   * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\\r\\n   * native Fetch API.\\r\\n   *\\r\\n   * <p>Visible for testing.\\r\\n   */\\n\\n\\n  CachingClient.prototype.isCachedDataFresh = function (cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis) {\\n    // Cache can only be fresh if it's populated.\\n    if (!lastSuccessfulFetchTimestampMillis) {\\n      this.logger.debug('Config fetch cache check. Cache unpopulated.');\\n      return false;\\n    } // Calculates age of cache entry.\\n\\n\\n    var cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\\n    var isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\\n    this.logger.debug('Config fetch cache check.' + (\\\" Cache age millis: \\\" + cacheAgeMillis + \\\".\\\") + (\\\" Cache max age millis (minimumFetchIntervalMillis setting): \\\" + cacheMaxAgeMillis + \\\".\\\") + (\\\" Is cache hit: \\\" + isCachedDataFresh + \\\".\\\"));\\n    return isCachedDataFresh;\\n  };\\n\\n  CachingClient.prototype.fetch = function (request) {\\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n      var _a, lastSuccessfulFetchTimestampMillis, lastSuccessfulFetchResponse, response, storageOperations;\\n\\n      return (0, _tslib.__generator)(this, function (_b) {\\n        switch (_b.label) {\\n          case 0:\\n            return [4\\n            /*yield*/\\n            , Promise.all([this.storage.getLastSuccessfulFetchTimestampMillis(), this.storage.getLastSuccessfulFetchResponse()])];\\n\\n          case 1:\\n            _a = _b.sent(), lastSuccessfulFetchTimestampMillis = _a[0], lastSuccessfulFetchResponse = _a[1]; // Exits early on cache hit.\\n\\n            if (lastSuccessfulFetchResponse && this.isCachedDataFresh(request.cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis)) {\\n              return [2\\n              /*return*/\\n              , lastSuccessfulFetchResponse];\\n            } // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\\n            // that allows the caller to pass an ETag.\\n\\n\\n            request.eTag = lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\\n            return [4\\n            /*yield*/\\n            , this.client.fetch(request)];\\n\\n          case 2:\\n            response = _b.sent();\\n            storageOperations = [// Uses write-through cache for consistency with synchronous public API.\\n            this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())];\\n\\n            if (response.status === 200) {\\n              // Caches response only if it has changed, ie non-304 responses.\\n              storageOperations.push(this.storage.setLastSuccessfulFetchResponse(response));\\n            }\\n\\n            return [4\\n            /*yield*/\\n            , Promise.all(storageOperations)];\\n\\n          case 3:\\n            _b.sent();\\n\\n            return [2\\n            /*return*/\\n            , response];\\n        }\\n      });\\n    });\\n  };\\n\\n  return CachingClient;\\n}();\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar _a;\\n\\nvar ERROR_DESCRIPTION_MAP = (_a = {}, _a[\\\"registration-window\\\"\\n/* REGISTRATION_WINDOW */\\n] = 'Undefined window object. This SDK only supports usage in a browser environment.', _a[\\\"registration-project-id\\\"\\n/* REGISTRATION_PROJECT_ID */\\n] = 'Undefined project identifier. Check Firebase app initialization.', _a[\\\"registration-api-key\\\"\\n/* REGISTRATION_API_KEY */\\n] = 'Undefined API key. Check Firebase app initialization.', _a[\\\"registration-app-id\\\"\\n/* REGISTRATION_APP_ID */\\n] = 'Undefined app identifier. Check Firebase app initialization.', _a[\\\"storage-open\\\"\\n/* STORAGE_OPEN */\\n] = 'Error thrown when opening storage. Original error: {$originalErrorMessage}.', _a[\\\"storage-get\\\"\\n/* STORAGE_GET */\\n] = 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.', _a[\\\"storage-set\\\"\\n/* STORAGE_SET */\\n] = 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.', _a[\\\"storage-delete\\\"\\n/* STORAGE_DELETE */\\n] = 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.', _a[\\\"fetch-client-network\\\"\\n/* FETCH_NETWORK */\\n] = 'Fetch client failed to connect to a network. Check Internet connection.' + ' Original error: {$originalErrorMessage}.', _a[\\\"fetch-timeout\\\"\\n/* FETCH_TIMEOUT */\\n] = 'The config fetch request timed out. ' + ' Configure timeout using \\\"fetchTimeoutMillis\\\" SDK setting.', _a[\\\"fetch-throttle\\\"\\n/* FETCH_THROTTLE */\\n] = 'The config fetch request timed out while in an exponential backoff state.' + ' Configure timeout using \\\"fetchTimeoutMillis\\\" SDK setting.' + ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.', _a[\\\"fetch-client-parse\\\"\\n/* FETCH_PARSE */\\n] = 'Fetch client could not parse response.' + ' Original error: {$originalErrorMessage}.', _a[\\\"fetch-status\\\"\\n/* FETCH_STATUS */\\n] = 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.', _a);\\nvar ERROR_FACTORY = new _util.ErrorFactory('remoteconfig'\\n/* service */\\n, 'Remote Config'\\n/* service name */\\n, ERROR_DESCRIPTION_MAP); // Note how this is like typeof/instanceof, but for ErrorCode.\\n\\nfunction hasErrorCode(e, errorCode) {\\n  return e instanceof _util.FirebaseError && e.code.indexOf(errorCode) !== -1;\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * Attempts to get the most accurate browser language setting.\\r\\n *\\r\\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\\r\\n *\\r\\n * <p>Defers default language specification to server logic for consistency.\\r\\n *\\r\\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\\r\\n */\\n\\n\\nfunction getUserLanguage(navigatorLanguage) {\\n  if (navigatorLanguage === void 0) {\\n    navigatorLanguage = navigator;\\n  }\\n\\n  return (// Most reliable, but only supported in Chrome/Firefox.\\n    navigatorLanguage.languages && navigatorLanguage.languages[0] || // Supported in most browsers, but returns the language of the browser\\n    // UI, not the language set in browser settings.\\n    navigatorLanguage.language // Polyfill otherwise.\\n\\n  );\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * Implements the Client abstraction for the Remote Config REST API.\\r\\n */\\n\\n\\nvar RestClient =\\n/** @class */\\nfunction () {\\n  function RestClient(firebaseInstallations, sdkVersion, namespace, projectId, apiKey, appId) {\\n    this.firebaseInstallations = firebaseInstallations;\\n    this.sdkVersion = sdkVersion;\\n    this.namespace = namespace;\\n    this.projectId = projectId;\\n    this.apiKey = apiKey;\\n    this.appId = appId;\\n  }\\n  /**\\r\\n   * Fetches from the Remote Config REST API.\\r\\n   *\\r\\n   * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\\r\\n   * connect to the network.\\r\\n   * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\\r\\n   * fetch response.\\r\\n   * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\\r\\n   */\\n\\n\\n  RestClient.prototype.fetch = function (request) {\\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n      var _a, installationId, installationToken, urlBase, url, headers, requestBody, options, fetchPromise, timeoutPromise, response, originalError_1, errorCode, status, responseEtag, config, state, responseBody, originalError_2;\\n\\n      return (0, _tslib.__generator)(this, function (_b) {\\n        switch (_b.label) {\\n          case 0:\\n            return [4\\n            /*yield*/\\n            , Promise.all([this.firebaseInstallations.getId(), this.firebaseInstallations.getToken()])];\\n\\n          case 1:\\n            _a = _b.sent(), installationId = _a[0], installationToken = _a[1];\\n            urlBase = window.FIREBASE_REMOTE_CONFIG_URL_BASE || 'https://firebaseremoteconfig.googleapis.com';\\n            url = urlBase + \\\"/v1/projects/\\\" + this.projectId + \\\"/namespaces/\\\" + this.namespace + \\\":fetch?key=\\\" + this.apiKey;\\n            headers = {\\n              'Content-Type': 'application/json',\\n              'Content-Encoding': 'gzip',\\n              // Deviates from pure decorator by not passing max-age header since we don't currently have\\n              // service behavior using that header.\\n              'If-None-Match': request.eTag || '*'\\n            };\\n            requestBody = {\\n              /* eslint-disable camelcase */\\n              sdk_version: this.sdkVersion,\\n              app_instance_id: installationId,\\n              app_instance_id_token: installationToken,\\n              app_id: this.appId,\\n              language_code: getUserLanguage()\\n              /* eslint-enable camelcase */\\n\\n            };\\n            options = {\\n              method: 'POST',\\n              headers: headers,\\n              body: JSON.stringify(requestBody)\\n            };\\n            fetchPromise = fetch(url, options);\\n            timeoutPromise = new Promise(function (_resolve, reject) {\\n              // Maps async event listener to Promise API.\\n              request.signal.addEventListener(function () {\\n                // Emulates https://heycam.github.io/webidl/#aborterror\\n                var error = new Error('The operation was aborted.');\\n                error.name = 'AbortError';\\n                reject(error);\\n              });\\n            });\\n            _b.label = 2;\\n\\n          case 2:\\n            _b.trys.push([2, 5,, 6]);\\n\\n            return [4\\n            /*yield*/\\n            , Promise.race([fetchPromise, timeoutPromise])];\\n\\n          case 3:\\n            _b.sent();\\n\\n            return [4\\n            /*yield*/\\n            , fetchPromise];\\n\\n          case 4:\\n            response = _b.sent();\\n            return [3\\n            /*break*/\\n            , 6];\\n\\n          case 5:\\n            originalError_1 = _b.sent();\\n            errorCode = \\\"fetch-client-network\\\"\\n            /* FETCH_NETWORK */\\n            ;\\n\\n            if (originalError_1.name === 'AbortError') {\\n              errorCode = \\\"fetch-timeout\\\"\\n              /* FETCH_TIMEOUT */\\n              ;\\n            }\\n\\n            throw ERROR_FACTORY.create(errorCode, {\\n              originalErrorMessage: originalError_1.message\\n            });\\n\\n          case 6:\\n            status = response.status;\\n            responseEtag = response.headers.get('ETag') || undefined;\\n            if (!(response.status === 200)) return [3\\n            /*break*/\\n            , 11];\\n            responseBody = void 0;\\n            _b.label = 7;\\n\\n          case 7:\\n            _b.trys.push([7, 9,, 10]);\\n\\n            return [4\\n            /*yield*/\\n            , response.json()];\\n\\n          case 8:\\n            responseBody = _b.sent();\\n            return [3\\n            /*break*/\\n            , 10];\\n\\n          case 9:\\n            originalError_2 = _b.sent();\\n            throw ERROR_FACTORY.create(\\\"fetch-client-parse\\\"\\n            /* FETCH_PARSE */\\n            , {\\n              originalErrorMessage: originalError_2.message\\n            });\\n\\n          case 10:\\n            config = responseBody['entries'];\\n            state = responseBody['state'];\\n            _b.label = 11;\\n\\n          case 11:\\n            // Normalizes based on legacy state.\\n            if (state === 'INSTANCE_STATE_UNSPECIFIED') {\\n              status = 500;\\n            } else if (state === 'NO_CHANGE') {\\n              status = 304;\\n            } else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\\n              // These cases can be fixed remotely, so normalize to safe value.\\n              config = {};\\n            } // Normalize to exception-based control flow for non-success cases.\\n            // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\\n            // differentiating success states (200 from 304; the state body param is undefined in a\\n            // standard 304).\\n\\n\\n            if (status !== 304 && status !== 200) {\\n              throw ERROR_FACTORY.create(\\\"fetch-status\\\"\\n              /* FETCH_STATUS */\\n              , {\\n                httpStatus: status\\n              });\\n            }\\n\\n            return [2\\n            /*return*/\\n            , {\\n              status: status,\\n              eTag: responseEtag,\\n              config: config\\n            }];\\n        }\\n      });\\n    });\\n  };\\n\\n  return RestClient;\\n}();\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * Shims a minimal AbortSignal.\\r\\n *\\r\\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\\r\\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\\r\\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\\r\\n * swapped out if/when we do.\\r\\n */\\n\\n\\nvar RemoteConfigAbortSignal =\\n/** @class */\\nfunction () {\\n  function RemoteConfigAbortSignal() {\\n    this.listeners = [];\\n  }\\n\\n  RemoteConfigAbortSignal.prototype.addEventListener = function (listener) {\\n    this.listeners.push(listener);\\n  };\\n\\n  RemoteConfigAbortSignal.prototype.abort = function () {\\n    this.listeners.forEach(function (listener) {\\n      return listener();\\n    });\\n  };\\n\\n  return RemoteConfigAbortSignal;\\n}();\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar DEFAULT_VALUE_FOR_BOOLEAN = false;\\nvar DEFAULT_VALUE_FOR_STRING = '';\\nvar DEFAULT_VALUE_FOR_NUMBER = 0;\\nvar BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\\n\\nvar Value =\\n/** @class */\\nfunction () {\\n  function Value(_source, _value) {\\n    if (_value === void 0) {\\n      _value = DEFAULT_VALUE_FOR_STRING;\\n    }\\n\\n    this._source = _source;\\n    this._value = _value;\\n  }\\n\\n  Value.prototype.asString = function () {\\n    return this._value;\\n  };\\n\\n  Value.prototype.asBoolean = function () {\\n    if (this._source === 'static') {\\n      return DEFAULT_VALUE_FOR_BOOLEAN;\\n    }\\n\\n    return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\\n  };\\n\\n  Value.prototype.asNumber = function () {\\n    if (this._source === 'static') {\\n      return DEFAULT_VALUE_FOR_NUMBER;\\n    }\\n\\n    var num = Number(this._value);\\n\\n    if (isNaN(num)) {\\n      num = DEFAULT_VALUE_FOR_NUMBER;\\n    }\\n\\n    return num;\\n  };\\n\\n  Value.prototype.getSource = function () {\\n    return this._source;\\n  };\\n\\n  return Value;\\n}();\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n\\nvar DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\\n\\nvar DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\\n\\n/**\\r\\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\\r\\n *\\r\\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\\r\\n */\\n\\nvar RemoteConfig =\\n/** @class */\\nfunction () {\\n  function RemoteConfig( // Required by FirebaseServiceFactory interface.\\n  app, // JS doesn't support private yet\\n  // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\\n  // underscore prefix.\\n  _client, _storageCache, _storage, _logger) {\\n    this.app = app;\\n    this._client = _client;\\n    this._storageCache = _storageCache;\\n    this._storage = _storage;\\n    this._logger = _logger; // Tracks completion of initialization promise.\\n\\n    this._isInitializationComplete = false;\\n    this.settings = {\\n      fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\\n      minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\\n    };\\n    this.defaultConfig = {};\\n  } // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\\n  // to differentiate 2p and 3p use-cases.\\n\\n\\n  RemoteConfig.prototype.setLogLevel = function (logLevel) {\\n    switch (logLevel) {\\n      case 'debug':\\n        this._logger.logLevel = _logger2.LogLevel.DEBUG;\\n        break;\\n\\n      case 'silent':\\n        this._logger.logLevel = _logger2.LogLevel.SILENT;\\n        break;\\n\\n      default:\\n        this._logger.logLevel = _logger2.LogLevel.ERROR;\\n    }\\n  };\\n\\n  Object.defineProperty(RemoteConfig.prototype, \\\"fetchTimeMillis\\\", {\\n    get: function get() {\\n      return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n  Object.defineProperty(RemoteConfig.prototype, \\\"lastFetchStatus\\\", {\\n    get: function get() {\\n      return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\\n    },\\n    enumerable: false,\\n    configurable: true\\n  });\\n\\n  RemoteConfig.prototype.activate = function () {\\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n      var _a, lastSuccessfulFetchResponse, activeConfigEtag;\\n\\n      return (0, _tslib.__generator)(this, function (_b) {\\n        switch (_b.label) {\\n          case 0:\\n            return [4\\n            /*yield*/\\n            , Promise.all([this._storage.getLastSuccessfulFetchResponse(), this._storage.getActiveConfigEtag()])];\\n\\n          case 1:\\n            _a = _b.sent(), lastSuccessfulFetchResponse = _a[0], activeConfigEtag = _a[1];\\n\\n            if (!lastSuccessfulFetchResponse || !lastSuccessfulFetchResponse.config || !lastSuccessfulFetchResponse.eTag || lastSuccessfulFetchResponse.eTag === activeConfigEtag) {\\n              // Either there is no successful fetched config, or is the same as current active\\n              // config.\\n              return [2\\n              /*return*/\\n              , false];\\n            }\\n\\n            return [4\\n            /*yield*/\\n            , Promise.all([this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config), this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)])];\\n\\n          case 2:\\n            _b.sent();\\n\\n            return [2\\n            /*return*/\\n            , true];\\n        }\\n      });\\n    });\\n  };\\n\\n  RemoteConfig.prototype.ensureInitialized = function () {\\n    var _this = this;\\n\\n    if (!this._initializePromise) {\\n      this._initializePromise = this._storageCache.loadFromStorage().then(function () {\\n        _this._isInitializationComplete = true;\\n      });\\n    }\\n\\n    return this._initializePromise;\\n  };\\n  /**\\r\\n   * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\\r\\n   * {@link Settings.fetchTimeoutInSeconds} or\\r\\n   * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\\r\\n   */\\n\\n\\n  RemoteConfig.prototype.fetch = function () {\\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n      var abortSignal, e_1, lastFetchStatus;\\n\\n      var _this = this;\\n\\n      return (0, _tslib.__generator)(this, function (_a) {\\n        switch (_a.label) {\\n          case 0:\\n            abortSignal = new RemoteConfigAbortSignal();\\n            setTimeout(function () {\\n              return (0, _tslib.__awaiter)(_this, void 0, void 0, function () {\\n                return (0, _tslib.__generator)(this, function (_a) {\\n                  // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\\n                  abortSignal.abort();\\n                  return [2\\n                  /*return*/\\n                  ];\\n                });\\n              });\\n            }, this.settings.fetchTimeoutMillis);\\n            _a.label = 1;\\n\\n          case 1:\\n            _a.trys.push([1, 4,, 6]);\\n\\n            return [4\\n            /*yield*/\\n            , this._client.fetch({\\n              cacheMaxAgeMillis: this.settings.minimumFetchIntervalMillis,\\n              signal: abortSignal\\n            })];\\n\\n          case 2:\\n            _a.sent();\\n\\n            return [4\\n            /*yield*/\\n            , this._storageCache.setLastFetchStatus('success')];\\n\\n          case 3:\\n            _a.sent();\\n\\n            return [3\\n            /*break*/\\n            , 6];\\n\\n          case 4:\\n            e_1 = _a.sent();\\n            lastFetchStatus = hasErrorCode(e_1, \\\"fetch-throttle\\\"\\n            /* FETCH_THROTTLE */\\n            ) ? 'throttle' : 'failure';\\n            return [4\\n            /*yield*/\\n            , this._storageCache.setLastFetchStatus(lastFetchStatus)];\\n\\n          case 5:\\n            _a.sent();\\n\\n            throw e_1;\\n\\n          case 6:\\n            return [2\\n            /*return*/\\n            ];\\n        }\\n      });\\n    });\\n  };\\n\\n  RemoteConfig.prototype.fetchAndActivate = function () {\\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n      return (0, _tslib.__generator)(this, function (_a) {\\n        switch (_a.label) {\\n          case 0:\\n            return [4\\n            /*yield*/\\n            , this.fetch()];\\n\\n          case 1:\\n            _a.sent();\\n\\n            return [2\\n            /*return*/\\n            , this.activate()];\\n        }\\n      });\\n    });\\n  };\\n\\n  RemoteConfig.prototype.getAll = function () {\\n    var _this = this;\\n\\n    return getAllKeys(this._storageCache.getActiveConfig(), this.defaultConfig).reduce(function (allConfigs, key) {\\n      allConfigs[key] = _this.getValue(key);\\n      return allConfigs;\\n    }, {});\\n  };\\n\\n  RemoteConfig.prototype.getBoolean = function (key) {\\n    return this.getValue(key).asBoolean();\\n  };\\n\\n  RemoteConfig.prototype.getNumber = function (key) {\\n    return this.getValue(key).asNumber();\\n  };\\n\\n  RemoteConfig.prototype.getString = function (key) {\\n    return this.getValue(key).asString();\\n  };\\n\\n  RemoteConfig.prototype.getValue = function (key) {\\n    if (!this._isInitializationComplete) {\\n      this._logger.debug(\\\"A value was requested for key \\\\\\\"\\\" + key + \\\"\\\\\\\" before SDK initialization completed.\\\" + ' Await on ensureInitialized if the intent was to get a previously activated value.');\\n    }\\n\\n    var activeConfig = this._storageCache.getActiveConfig();\\n\\n    if (activeConfig && activeConfig[key] !== undefined) {\\n      return new Value('remote', activeConfig[key]);\\n    } else if (this.defaultConfig && this.defaultConfig[key] !== undefined) {\\n      return new Value('default', String(this.defaultConfig[key]));\\n    }\\n\\n    this._logger.debug(\\\"Returning static value for key \\\\\\\"\\\" + key + \\\"\\\\\\\".\\\" + ' Define a default or remote value if this is unintentional.');\\n\\n    return new Value('static');\\n  };\\n\\n  return RemoteConfig;\\n}();\\n/**\\r\\n * Dedupes and returns an array of all the keys of the received objects.\\r\\n */\\n\\n\\nfunction getAllKeys(obj1, obj2) {\\n  if (obj1 === void 0) {\\n    obj1 = {};\\n  }\\n\\n  if (obj2 === void 0) {\\n    obj2 = {};\\n  }\\n\\n  return Object.keys((0, _tslib.__assign)((0, _tslib.__assign)({}, obj1), obj2));\\n}\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\\r\\n */\\n\\n\\nfunction toFirebaseError(event, errorCode) {\\n  var originalError = event.target.error || undefined;\\n  return ERROR_FACTORY.create(errorCode, {\\n    originalErrorMessage: originalError && originalError.message\\n  });\\n}\\n/**\\r\\n * A general-purpose store keyed by app + namespace + {@link\\r\\n * ProjectNamespaceKeyFieldValue}.\\r\\n *\\r\\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\\r\\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\\r\\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\\r\\n *\\r\\n * <p>Visible for testing.\\r\\n */\\n\\n\\nvar APP_NAMESPACE_STORE = 'app_namespace_store';\\nvar DB_NAME = 'firebase_remote_config';\\nvar DB_VERSION = 1; // Visible for testing.\\n\\nfunction openDatabase() {\\n  return new Promise(function (resolve, reject) {\\n    var request = indexedDB.open(DB_NAME, DB_VERSION);\\n\\n    request.onerror = function (event) {\\n      reject(toFirebaseError(event, \\\"storage-open\\\"\\n      /* STORAGE_OPEN */\\n      ));\\n    };\\n\\n    request.onsuccess = function (event) {\\n      resolve(event.target.result);\\n    };\\n\\n    request.onupgradeneeded = function (event) {\\n      var db = event.target.result; // We don't use 'break' in this switch statement, the fall-through\\n      // behavior is what we want, because if there are multiple versions between\\n      // the old version and the current version, we want ALL the migrations\\n      // that correspond to those versions to run, not only the last one.\\n      // eslint-disable-next-line default-case\\n\\n      switch (event.oldVersion) {\\n        case 0:\\n          db.createObjectStore(APP_NAMESPACE_STORE, {\\n            keyPath: 'compositeKey'\\n          });\\n      }\\n    };\\n  });\\n}\\n/**\\r\\n * Abstracts data persistence.\\r\\n */\\n\\n\\nvar Storage =\\n/** @class */\\nfunction () {\\n  /**\\r\\n   * @param appId enables storage segmentation by app (ID + name).\\r\\n   * @param appName enables storage segmentation by app (ID + name).\\r\\n   * @param namespace enables storage segmentation by namespace.\\r\\n   */\\n  function Storage(appId, appName, namespace, openDbPromise) {\\n    if (openDbPromise === void 0) {\\n      openDbPromise = openDatabase();\\n    }\\n\\n    this.appId = appId;\\n    this.appName = appName;\\n    this.namespace = namespace;\\n    this.openDbPromise = openDbPromise;\\n  }\\n\\n  Storage.prototype.getLastFetchStatus = function () {\\n    return this.get('last_fetch_status');\\n  };\\n\\n  Storage.prototype.setLastFetchStatus = function (status) {\\n    return this.set('last_fetch_status', status);\\n  }; // This is comparable to a cache entry timestamp. If we need to expire other data, we could\\n  // consider adding timestamp to all storage records and an optional max age arg to getters.\\n\\n\\n  Storage.prototype.getLastSuccessfulFetchTimestampMillis = function () {\\n    return this.get('last_successful_fetch_timestamp_millis');\\n  };\\n\\n  Storage.prototype.setLastSuccessfulFetchTimestampMillis = function (timestamp) {\\n    return this.set('last_successful_fetch_timestamp_millis', timestamp);\\n  };\\n\\n  Storage.prototype.getLastSuccessfulFetchResponse = function () {\\n    return this.get('last_successful_fetch_response');\\n  };\\n\\n  Storage.prototype.setLastSuccessfulFetchResponse = function (response) {\\n    return this.set('last_successful_fetch_response', response);\\n  };\\n\\n  Storage.prototype.getActiveConfig = function () {\\n    return this.get('active_config');\\n  };\\n\\n  Storage.prototype.setActiveConfig = function (config) {\\n    return this.set('active_config', config);\\n  };\\n\\n  Storage.prototype.getActiveConfigEtag = function () {\\n    return this.get('active_config_etag');\\n  };\\n\\n  Storage.prototype.setActiveConfigEtag = function (etag) {\\n    return this.set('active_config_etag', etag);\\n  };\\n\\n  Storage.prototype.getThrottleMetadata = function () {\\n    return this.get('throttle_metadata');\\n  };\\n\\n  Storage.prototype.setThrottleMetadata = function (metadata) {\\n    return this.set('throttle_metadata', metadata);\\n  };\\n\\n  Storage.prototype.deleteThrottleMetadata = function () {\\n    return this[\\\"delete\\\"]('throttle_metadata');\\n  };\\n\\n  Storage.prototype.get = function (key) {\\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n      var db;\\n\\n      var _this = this;\\n\\n      return (0, _tslib.__generator)(this, function (_a) {\\n        switch (_a.label) {\\n          case 0:\\n            return [4\\n            /*yield*/\\n            , this.openDbPromise];\\n\\n          case 1:\\n            db = _a.sent();\\n            return [2\\n            /*return*/\\n            , new Promise(function (resolve, reject) {\\n              var transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\\n              var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\\n\\n              var compositeKey = _this.createCompositeKey(key);\\n\\n              try {\\n                var request = objectStore.get(compositeKey);\\n\\n                request.onerror = function (event) {\\n                  reject(toFirebaseError(event, \\\"storage-get\\\"\\n                  /* STORAGE_GET */\\n                  ));\\n                };\\n\\n                request.onsuccess = function (event) {\\n                  var result = event.target.result;\\n\\n                  if (result) {\\n                    resolve(result.value);\\n                  } else {\\n                    resolve(undefined);\\n                  }\\n                };\\n              } catch (e) {\\n                reject(ERROR_FACTORY.create(\\\"storage-get\\\"\\n                /* STORAGE_GET */\\n                , {\\n                  originalErrorMessage: e && e.message\\n                }));\\n              }\\n            })];\\n        }\\n      });\\n    });\\n  };\\n\\n  Storage.prototype.set = function (key, value) {\\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n      var db;\\n\\n      var _this = this;\\n\\n      return (0, _tslib.__generator)(this, function (_a) {\\n        switch (_a.label) {\\n          case 0:\\n            return [4\\n            /*yield*/\\n            , this.openDbPromise];\\n\\n          case 1:\\n            db = _a.sent();\\n            return [2\\n            /*return*/\\n            , new Promise(function (resolve, reject) {\\n              var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\\n              var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\\n\\n              var compositeKey = _this.createCompositeKey(key);\\n\\n              try {\\n                var request = objectStore.put({\\n                  compositeKey: compositeKey,\\n                  value: value\\n                });\\n\\n                request.onerror = function (event) {\\n                  reject(toFirebaseError(event, \\\"storage-set\\\"\\n                  /* STORAGE_SET */\\n                  ));\\n                };\\n\\n                request.onsuccess = function () {\\n                  resolve();\\n                };\\n              } catch (e) {\\n                reject(ERROR_FACTORY.create(\\\"storage-set\\\"\\n                /* STORAGE_SET */\\n                , {\\n                  originalErrorMessage: e && e.message\\n                }));\\n              }\\n            })];\\n        }\\n      });\\n    });\\n  };\\n\\n  Storage.prototype[\\\"delete\\\"] = function (key) {\\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n      var db;\\n\\n      var _this = this;\\n\\n      return (0, _tslib.__generator)(this, function (_a) {\\n        switch (_a.label) {\\n          case 0:\\n            return [4\\n            /*yield*/\\n            , this.openDbPromise];\\n\\n          case 1:\\n            db = _a.sent();\\n            return [2\\n            /*return*/\\n            , new Promise(function (resolve, reject) {\\n              var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\\n              var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\\n\\n              var compositeKey = _this.createCompositeKey(key);\\n\\n              try {\\n                var request = objectStore[\\\"delete\\\"](compositeKey);\\n\\n                request.onerror = function (event) {\\n                  reject(toFirebaseError(event, \\\"storage-delete\\\"\\n                  /* STORAGE_DELETE */\\n                  ));\\n                };\\n\\n                request.onsuccess = function () {\\n                  resolve();\\n                };\\n              } catch (e) {\\n                reject(ERROR_FACTORY.create(\\\"storage-delete\\\"\\n                /* STORAGE_DELETE */\\n                , {\\n                  originalErrorMessage: e && e.message\\n                }));\\n              }\\n            })];\\n        }\\n      });\\n    });\\n  }; // Facilitates composite key functionality (which is unsupported in IE).\\n\\n\\n  Storage.prototype.createCompositeKey = function (key) {\\n    return [this.appId, this.appName, this.namespace, key].join();\\n  };\\n\\n  return Storage;\\n}();\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\\r\\n */\\n\\n\\nvar StorageCache =\\n/** @class */\\nfunction () {\\n  function StorageCache(storage) {\\n    this.storage = storage;\\n  }\\n  /**\\r\\n   * Memory-only getters\\r\\n   */\\n\\n\\n  StorageCache.prototype.getLastFetchStatus = function () {\\n    return this.lastFetchStatus;\\n  };\\n\\n  StorageCache.prototype.getLastSuccessfulFetchTimestampMillis = function () {\\n    return this.lastSuccessfulFetchTimestampMillis;\\n  };\\n\\n  StorageCache.prototype.getActiveConfig = function () {\\n    return this.activeConfig;\\n  };\\n  /**\\r\\n   * Read-ahead getter\\r\\n   */\\n\\n\\n  StorageCache.prototype.loadFromStorage = function () {\\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n      var lastFetchStatusPromise, lastSuccessfulFetchTimestampMillisPromise, activeConfigPromise, lastFetchStatus, lastSuccessfulFetchTimestampMillis, activeConfig;\\n      return (0, _tslib.__generator)(this, function (_a) {\\n        switch (_a.label) {\\n          case 0:\\n            lastFetchStatusPromise = this.storage.getLastFetchStatus();\\n            lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\\n            activeConfigPromise = this.storage.getActiveConfig();\\n            return [4\\n            /*yield*/\\n            , lastFetchStatusPromise];\\n\\n          case 1:\\n            lastFetchStatus = _a.sent();\\n\\n            if (lastFetchStatus) {\\n              this.lastFetchStatus = lastFetchStatus;\\n            }\\n\\n            return [4\\n            /*yield*/\\n            , lastSuccessfulFetchTimestampMillisPromise];\\n\\n          case 2:\\n            lastSuccessfulFetchTimestampMillis = _a.sent();\\n\\n            if (lastSuccessfulFetchTimestampMillis) {\\n              this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\\n            }\\n\\n            return [4\\n            /*yield*/\\n            , activeConfigPromise];\\n\\n          case 3:\\n            activeConfig = _a.sent();\\n\\n            if (activeConfig) {\\n              this.activeConfig = activeConfig;\\n            }\\n\\n            return [2\\n            /*return*/\\n            ];\\n        }\\n      });\\n    });\\n  };\\n  /**\\r\\n   * Write-through setters\\r\\n   */\\n\\n\\n  StorageCache.prototype.setLastFetchStatus = function (status) {\\n    this.lastFetchStatus = status;\\n    return this.storage.setLastFetchStatus(status);\\n  };\\n\\n  StorageCache.prototype.setLastSuccessfulFetchTimestampMillis = function (timestampMillis) {\\n    this.lastSuccessfulFetchTimestampMillis = timestampMillis;\\n    return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\\n  };\\n\\n  StorageCache.prototype.setActiveConfig = function (activeConfig) {\\n    this.activeConfig = activeConfig;\\n    return this.storage.setActiveConfig(activeConfig);\\n  };\\n\\n  return StorageCache;\\n}();\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\n/**\\r\\n * Supports waiting on a backoff by:\\r\\n *\\r\\n * <ul>\\r\\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\\r\\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\\r\\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\\r\\n *       request appear the same.</li>\\r\\n * </ul>\\r\\n *\\r\\n * <p>Visible for testing.\\r\\n */\\n\\n\\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\\n  return new Promise(function (resolve, reject) {\\n    // Derives backoff from given end time, normalizing negative numbers to zero.\\n    var backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\\n    var timeout = setTimeout(resolve, backoffMillis); // Adds listener, rather than sets onabort, because signal is a shared object.\\n\\n    signal.addEventListener(function () {\\n      clearTimeout(timeout); // If the request completes before this timeout, the rejection has no effect.\\n\\n      reject(ERROR_FACTORY.create(\\\"fetch-throttle\\\"\\n      /* FETCH_THROTTLE */\\n      , {\\n        throttleEndTimeMillis: throttleEndTimeMillis\\n      }));\\n    });\\n  });\\n}\\n/**\\r\\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\\r\\n */\\n\\n\\nfunction isRetriableError(e) {\\n  if (!(e instanceof _util.FirebaseError) || !e.customData) {\\n    return false;\\n  } // Uses string index defined by ErrorData, which FirebaseError implements.\\n\\n\\n  var httpStatus = Number(e.customData['httpStatus']);\\n  return httpStatus === 429 || httpStatus === 500 || httpStatus === 503 || httpStatus === 504;\\n}\\n/**\\r\\n * Decorates a Client with retry logic.\\r\\n *\\r\\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\\r\\n * responses (because the SDK has no use for error responses).\\r\\n */\\n\\n\\nvar RetryingClient =\\n/** @class */\\nfunction () {\\n  function RetryingClient(client, storage) {\\n    this.client = client;\\n    this.storage = storage;\\n  }\\n\\n  RetryingClient.prototype.fetch = function (request) {\\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n      var throttleMetadata;\\n      return (0, _tslib.__generator)(this, function (_a) {\\n        switch (_a.label) {\\n          case 0:\\n            return [4\\n            /*yield*/\\n            , this.storage.getThrottleMetadata()];\\n\\n          case 1:\\n            throttleMetadata = _a.sent() || {\\n              backoffCount: 0,\\n              throttleEndTimeMillis: Date.now()\\n            };\\n            return [2\\n            /*return*/\\n            , this.attemptFetch(request, throttleMetadata)];\\n        }\\n      });\\n    });\\n  };\\n  /**\\r\\n   * A recursive helper for attempting a fetch request repeatedly.\\r\\n   *\\r\\n   * @throws any non-retriable errors.\\r\\n   */\\n\\n\\n  RetryingClient.prototype.attemptFetch = function (request, _a) {\\n    var throttleEndTimeMillis = _a.throttleEndTimeMillis,\\n        backoffCount = _a.backoffCount;\\n    return (0, _tslib.__awaiter)(this, void 0, void 0, function () {\\n      var response, e_1, throttleMetadata;\\n      return (0, _tslib.__generator)(this, function (_b) {\\n        switch (_b.label) {\\n          case 0:\\n            // Starts with a (potentially zero) timeout to support resumption from stored state.\\n            // Ensures the throttle end time is honored if the last attempt timed out.\\n            // Note the SDK will never make a request if the fetch timeout expires at this point.\\n            return [4\\n            /*yield*/\\n            , setAbortableTimeout(request.signal, throttleEndTimeMillis)];\\n\\n          case 1:\\n            // Starts with a (potentially zero) timeout to support resumption from stored state.\\n            // Ensures the throttle end time is honored if the last attempt timed out.\\n            // Note the SDK will never make a request if the fetch timeout expires at this point.\\n            _b.sent();\\n\\n            _b.label = 2;\\n\\n          case 2:\\n            _b.trys.push([2, 5,, 7]);\\n\\n            return [4\\n            /*yield*/\\n            , this.client.fetch(request)];\\n\\n          case 3:\\n            response = _b.sent(); // Note the SDK only clears throttle state if response is success or non-retriable.\\n\\n            return [4\\n            /*yield*/\\n            , this.storage.deleteThrottleMetadata()];\\n\\n          case 4:\\n            // Note the SDK only clears throttle state if response is success or non-retriable.\\n            _b.sent();\\n\\n            return [2\\n            /*return*/\\n            , response];\\n\\n          case 5:\\n            e_1 = _b.sent();\\n\\n            if (!isRetriableError(e_1)) {\\n              throw e_1;\\n            }\\n\\n            throttleMetadata = {\\n              throttleEndTimeMillis: Date.now() + (0, _util.calculateBackoffMillis)(backoffCount),\\n              backoffCount: backoffCount + 1\\n            }; // Persists state.\\n\\n            return [4\\n            /*yield*/\\n            , this.storage.setThrottleMetadata(throttleMetadata)];\\n\\n          case 6:\\n            // Persists state.\\n            _b.sent();\\n\\n            return [2\\n            /*return*/\\n            , this.attemptFetch(request, throttleMetadata)];\\n\\n          case 7:\\n            return [2\\n            /*return*/\\n            ];\\n        }\\n      });\\n    });\\n  };\\n\\n  return RetryingClient;\\n}();\\n\\nvar name = \\\"@firebase/remote-config\\\";\\nvar version = \\\"0.1.42\\\";\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\n\\nfunction registerRemoteConfig(firebaseInstance) {\\n  firebaseInstance.INTERNAL.registerComponent(new _component.Component('remoteConfig', remoteConfigFactory, \\\"PUBLIC\\\"\\n  /* PUBLIC */\\n  ).setMultipleInstances(true));\\n  firebaseInstance.registerVersion(name, version);\\n\\n  function remoteConfigFactory(container, _a) {\\n    var namespace = _a.instanceIdentifier;\\n    /* Dependencies */\\n    // getImmediate for FirebaseApp will always succeed\\n\\n    var app = container.getProvider('app').getImmediate(); // The following call will always succeed because rc has `import '@firebase/installations'`\\n\\n    var installations = container.getProvider('installations').getImmediate(); // Guards against the SDK being used in non-browser environments.\\n\\n    if (typeof window === 'undefined') {\\n      throw ERROR_FACTORY.create(\\\"registration-window\\\"\\n      /* REGISTRATION_WINDOW */\\n      );\\n    } // Normalizes optional inputs.\\n\\n\\n    var _b = app.options,\\n        projectId = _b.projectId,\\n        apiKey = _b.apiKey,\\n        appId = _b.appId;\\n\\n    if (!projectId) {\\n      throw ERROR_FACTORY.create(\\\"registration-project-id\\\"\\n      /* REGISTRATION_PROJECT_ID */\\n      );\\n    }\\n\\n    if (!apiKey) {\\n      throw ERROR_FACTORY.create(\\\"registration-api-key\\\"\\n      /* REGISTRATION_API_KEY */\\n      );\\n    }\\n\\n    if (!appId) {\\n      throw ERROR_FACTORY.create(\\\"registration-app-id\\\"\\n      /* REGISTRATION_APP_ID */\\n      );\\n    }\\n\\n    namespace = namespace || 'firebase';\\n    var storage = new Storage(appId, app.name, namespace);\\n    var storageCache = new StorageCache(storage);\\n    var logger = new _logger2.Logger(name); // Sets ERROR as the default log level.\\n    // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\\n\\n    logger.logLevel = _logger2.LogLevel.ERROR;\\n    var restClient = new RestClient(installations, // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\\n    firebaseInstance.SDK_VERSION, namespace, projectId, apiKey, appId);\\n    var retryingClient = new RetryingClient(restClient, storage);\\n    var cachingClient = new CachingClient(retryingClient, storage, storageCache, logger);\\n    var remoteConfigInstance = new RemoteConfig(app, cachingClient, storageCache, storage, logger); // Starts warming cache.\\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\\n\\n    remoteConfigInstance.ensureInitialized();\\n    return remoteConfigInstance;\\n  }\\n}\\n\\nregisterRemoteConfig(_app[\\\"default\\\"]);\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"getUserLanguage\",\"navigatorLanguage\",\"navigator\",\"languages\",\"language\",\"getAllKeys\",\"obj1\",\"obj2\",\"Object\",\"keys\",\"_tslib\",\"__assign\",\"toFirebaseError\",\"event\",\"errorCode\",\"originalError\",\"target\",\"error\",\"undefined\",\"ERROR_FACTORY\",\"create\",\"originalErrorMessage\",\"message\",\"openDatabase\",\"Promise\",\"resolve\",\"reject\",\"request\",\"indexedDB\",\"open\",\"DB_NAME\",\"DB_VERSION\",\"onerror\",\"request.onerror\",\"onsuccess\",\"request.onsuccess\",\"result\",\"onupgradeneeded\",\"request.onupgradeneeded\",\"db\",\"oldVersion\",\"createObjectStore\",\"APP_NAMESPACE_STORE\",\"keyPath\",\"setAbortableTimeout\",\"signal\",\"throttleEndTimeMillis\",\"backoffMillis\",\"Math\",\"max\",\"Date\",\"now\",\"timeout\",\"setTimeout\",\"addEventListener\",\"clearTimeout\",\"registerRemoteConfig\",\"firebaseInstance\",\"INTERNAL\",\"registerComponent\",\"setMultipleInstances\",\"_component\",\"Component\",\"remoteConfigFactory\",\"container\",\"_a\",\"namespace\",\"instanceIdentifier\",\"app\",\"getProvider\",\"getImmediate\",\"installations\",\"window\",\"_b\",\"options\",\"projectId\",\"apiKey\",\"appId\",\"storage\",\"Storage\",\"name\",\"storageCache\",\"StorageCache\",\"logger\",\"_logger2\",\"Logger\",\"logLevel\",\"LogLevel\",\"ERROR\",\"restClient\",\"RestClient\",\"SDK_VERSION\",\"retryingClient\",\"RetryingClient\",\"cachingClient\",\"CachingClient\",\"remoteConfigInstance\",\"RemoteConfig\",\"ensureInitialized\",\"registerVersion\",\"version\",\"defineProperty\",\"value\",\"_app\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"_util\",\"client\",\"prototype\",\"isCachedDataFresh\",\"CachingClient.prototype.isCachedDataFresh\",\"cacheMaxAgeMillis\",\"lastSuccessfulFetchTimestampMillis\",\"debug\",\"cacheAgeMillis\",\"fetch\",\"CachingClient.prototype.fetch\",\"__awaiter\",\"lastSuccessfulFetchResponse\",\"response\",\"storageOperations\",\"__generator\",\"label\",\"all\",\"getLastSuccessfulFetchTimestampMillis\",\"getLastSuccessfulFetchResponse\",\"sent\",\"eTag\",\"setLastSuccessfulFetchTimestampMillis\",\"status\",\"push\",\"setLastSuccessfulFetchResponse\",\"ERROR_DESCRIPTION_MAP\",\"ErrorFactory\",\"firebaseInstallations\",\"sdkVersion\",\"RestClient.prototype.fetch\",\"installationId\",\"installationToken\",\"urlBase\",\"url\",\"headers\",\"requestBody\",\"fetchPromise\",\"timeoutPromise\",\"originalError_1\",\"responseEtag\",\"config\",\"state\",\"responseBody\",\"originalError_2\",\"getId\",\"getToken\",\"FIREBASE_REMOTE_CONFIG_URL_BASE\",\"sdk_version\",\"app_instance_id\",\"app_instance_id_token\",\"app_id\",\"language_code\",\"method\",\"body\",\"JSON\",\"stringify\",\"_resolve\",\"Error\",\"trys\",\"race\",\"get\",\"json\",\"httpStatus\",\"RemoteConfigAbortSignal\",\"listeners\",\"RemoteConfigAbortSignal.prototype.addEventListener\",\"listener\",\"abort\",\"RemoteConfigAbortSignal.prototype.abort\",\"forEach\",\"BOOLEAN_TRUTHY_VALUES\",\"Value\",\"_source\",\"_value\",\"DEFAULT_VALUE_FOR_STRING\",\"asString\",\"Value.prototype.asString\",\"asBoolean\",\"Value.prototype.asBoolean\",\"DEFAULT_VALUE_FOR_BOOLEAN\",\"indexOf\",\"toLowerCase\",\"asNumber\",\"Value.prototype.asNumber\",\"DEFAULT_VALUE_FOR_NUMBER\",\"num\",\"Number\",\"isNaN\",\"getSource\",\"Value.prototype.getSource\",\"_client\",\"_storageCache\",\"_storage\",\"_logger\",\"_isInitializationComplete\",\"settings\",\"fetchTimeoutMillis\",\"DEFAULT_FETCH_TIMEOUT_MILLIS\",\"minimumFetchIntervalMillis\",\"DEFAULT_CACHE_MAX_AGE_MILLIS\",\"defaultConfig\",\"setLogLevel\",\"RemoteConfig.prototype.setLogLevel\",\"DEBUG\",\"SILENT\",\"enumerable\",\"configurable\",\"getLastFetchStatus\",\"activate\",\"RemoteConfig.prototype.activate\",\"activeConfigEtag\",\"getActiveConfigEtag\",\"setActiveConfig\",\"setActiveConfigEtag\",\"RemoteConfig.prototype.ensureInitialized\",\"_this\",\"_initializePromise\",\"loadFromStorage\",\"then\",\"RemoteConfig.prototype.fetch\",\"abortSignal\",\"e_1\",\"lastFetchStatus\",\"setLastFetchStatus\",\"FirebaseError\",\"code\",\"fetchAndActivate\",\"RemoteConfig.prototype.fetchAndActivate\",\"getAll\",\"RemoteConfig.prototype.getAll\",\"getActiveConfig\",\"reduce\",\"allConfigs\",\"key\",\"getValue\",\"getBoolean\",\"RemoteConfig.prototype.getBoolean\",\"getNumber\",\"RemoteConfig.prototype.getNumber\",\"getString\",\"RemoteConfig.prototype.getString\",\"RemoteConfig.prototype.getValue\",\"activeConfig\",\"String\",\"appName\",\"openDbPromise\",\"Storage.prototype.getLastFetchStatus\",\"Storage.prototype.setLastFetchStatus\",\"set\",\"Storage.prototype.getLastSuccessfulFetchTimestampMillis\",\"Storage.prototype.setLastSuccessfulFetchTimestampMillis\",\"timestamp\",\"Storage.prototype.getLastSuccessfulFetchResponse\",\"Storage.prototype.setLastSuccessfulFetchResponse\",\"Storage.prototype.getActiveConfig\",\"Storage.prototype.setActiveConfig\",\"Storage.prototype.getActiveConfigEtag\",\"Storage.prototype.setActiveConfigEtag\",\"etag\",\"getThrottleMetadata\",\"Storage.prototype.getThrottleMetadata\",\"setThrottleMetadata\",\"Storage.prototype.setThrottleMetadata\",\"metadata\",\"deleteThrottleMetadata\",\"Storage.prototype.deleteThrottleMetadata\",\"Storage.prototype.get\",\"objectStore\",\"transaction\",\"compositeKey\",\"createCompositeKey\",\"e\",\"Storage.prototype.set\",\"put\",\"Storage.prototype.createCompositeKey\",\"join\",\"StorageCache.prototype.getLastFetchStatus\",\"StorageCache.prototype.getLastSuccessfulFetchTimestampMillis\",\"StorageCache.prototype.getActiveConfig\",\"StorageCache.prototype.loadFromStorage\",\"lastFetchStatusPromise\",\"lastSuccessfulFetchTimestampMillisPromise\",\"activeConfigPromise\",\"StorageCache.prototype.setLastFetchStatus\",\"StorageCache.prototype.setLastSuccessfulFetchTimestampMillis\",\"timestampMillis\",\"StorageCache.prototype.setActiveConfig\",\"RetryingClient.prototype.fetch\",\"throttleMetadata\",\"backoffCount\",\"attemptFetch\",\"RetryingClient.prototype.attemptFetch\",\"customData\",\"calculateBackoffMillis\"]\n}\n"]