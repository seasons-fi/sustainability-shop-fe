["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@firebase/storage/dist/index.cjs.js"],"~:js","shadow$provide.module$node_modules$$firebase$storage$dist$index_cjs=function(global,require,module,exports){function unknown(){return new FirebaseStorageError(Code.UNKNOWN,\"An unknown error occurred, please check the error payload for server response.\")}function canceled(){return new FirebaseStorageError(Code.CANCELED,\"User canceled the upload/download.\")}function cannotSliceBlob(){return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB,\"Cannot slice blob for upload. Please retry the upload.\")}function invalidArgument(index,\nfnName,message){return new FirebaseStorageError(Code.INVALID_ARGUMENT,\"Invalid argument in `\"+fnName+\"` at index \"+index+\": \"+message)}function appDeleted(){return new FirebaseStorageError(Code.APP_DELETED,\"The Firebase app was deleted.\")}function invalidFormat(format,message){return new FirebaseStorageError(Code.INVALID_FORMAT,\"String does not match format '\"+format+\"': \"+message)}function internalError(message){throw new FirebaseStorageError(Code.INTERNAL_ERROR,\"Internal error: \"+message);}function formatValidator(stringFormat){switch(stringFormat){case StringFormat.RAW:case StringFormat.BASE64:case StringFormat.BASE64URL:case StringFormat.DATA_URL:break;\ndefault:throw\"Expected one of the event types: [\"+StringFormat.RAW+\", \"+StringFormat.BASE64+\", \"+StringFormat.BASE64URL+\", \"+StringFormat.DATA_URL+\"].\";}}function dataFromString(format,stringData){switch(format){case StringFormat.RAW:return new StringData(utf8Bytes_(stringData));case StringFormat.BASE64:case StringFormat.BASE64URL:return new StringData(base64Bytes_(format,stringData));case StringFormat.DATA_URL:format=new DataURLParts(stringData);if(format.base64)var JSCompiler_inline_result=base64Bytes_(StringFormat.BASE64,\nformat.rest);else{try{JSCompiler_inline_result=decodeURIComponent(format.rest)}catch(e){throw invalidFormat(StringFormat.DATA_URL,\"Malformed data URL.\");}JSCompiler_inline_result=utf8Bytes_(JSCompiler_inline_result)}stringData=(new DataURLParts(stringData)).contentType;return new StringData(JSCompiler_inline_result,stringData)}throw unknown();}function utf8Bytes_(value){for(var b=[],i=0;i<value.length;i++){var c=value.charCodeAt(i);if(127>=c)b.push(c);else if(2047>=c)b.push(192|c>>6,128|c&63);else if(55296===\n(c&64512))if(i<value.length-1&&56320===(value.charCodeAt(i+1)&64512)){var lo=value.charCodeAt(++i);c=65536|(c&1023)<<10|lo&1023;b.push(240|c>>18,128|c>>12&63,128|c>>6&63,128|c&63)}else b.push(239,191,189);else 56320===(c&64512)?b.push(239,191,189):b.push(224|c>>12,128|c>>6&63,128|c&63)}return new Uint8Array(b)}function base64Bytes_(format,value){switch(format){case StringFormat.BASE64:var hasMinus=-1!==value.indexOf(\"-\"),hasUnder=-1!==value.indexOf(\"_\");if(hasMinus||hasUnder)throw invalidFormat(format,\n\"Invalid character '\"+(hasMinus?\"-\":\"_\")+\"' found: is it base64url encoded?\");break;case StringFormat.BASE64URL:hasMinus=-1!==value.indexOf(\"+\");hasUnder=-1!==value.indexOf(\"/\");if(hasMinus||hasUnder)throw invalidFormat(format,\"Invalid character '\"+(hasMinus?\"+\":\"/\")+\"' found: is it base64 encoded?\");value=value.replace(/-/g,\"+\").replace(/_/g,\"/\")}try{var bytes=atob(value)}catch(e){throw invalidFormat(format,\"Invalid character found\");}format=new Uint8Array(bytes.length);for(value=0;value<bytes.length;value++)format[value]=\nbytes.charCodeAt(value);return format}function taskStateFromInternalTaskState(state){switch(state){case InternalTaskState.RUNNING:case InternalTaskState.PAUSING:case InternalTaskState.CANCELING:return TaskState.RUNNING;case InternalTaskState.PAUSED:return TaskState.PAUSED;case InternalTaskState.SUCCESS:return TaskState.SUCCESS;case InternalTaskState.CANCELED:return TaskState.CANCELED;case InternalTaskState.ERROR:return TaskState.ERROR;default:return TaskState.ERROR}}function isJustDef(p){return void 0!==\np}function isObject(p){return\"object\"===typeof p}function isString(p){return\"string\"===typeof p||p instanceof String}function isNumber(p){return\"number\"===typeof p||p instanceof Number}function isNativeBlob(p){return isNativeBlobDefined()&&p instanceof Blob}function isNativeBlobDefined(){return\"undefined\"!==typeof Blob}function getBlob(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];_i=\"undefined\"!==typeof BlobBuilder?BlobBuilder:\"undefined\"!==typeof WebKitBlobBuilder?WebKitBlobBuilder:\nvoid 0;if(void 0!==_i){_i=new _i;for(var i=0;i<args.length;i++)_i.append(args[i]);return _i.getBlob()}if(isNativeBlobDefined())return new Blob(args);throw Error(\"This browser doesn't seem to support creating Blobs\");}function jsonObjectOrNull(s){try{var obj=JSON.parse(s)}catch(e){return null}s=obj;return isObject(s)&&!Array.isArray(s)?obj:null}function child(path,childPath){childPath=childPath.split(\"/\").filter(function(component){return 0<component.length}).join(\"/\");return 0===path.length?childPath:\npath+\"/\"+childPath}function lastComponent(path){var index=path.lastIndexOf(\"/\",path.length-2);return-1===index?path:path.slice(index+1)}function makeUrl(urlPart){return\"https://firebasestorage.googleapis.com/v0\"+urlPart}function makeQueryString(params){var encode=encodeURIComponent,queryPart=\"?\",key;for(key in params)if(params.hasOwnProperty(key)){var nextPart=encode(key)+\"\\x3d\"+encode(params[key]);queryPart=queryPart+nextPart+\"\\x26\"}return queryPart=queryPart.slice(0,-1)}function noXform_(metadata,\nvalue){return value}function getMappings(){if(mappings_)return mappings_;var mappings=[];mappings.push(new Mapping(\"bucket\"));mappings.push(new Mapping(\"generation\"));mappings.push(new Mapping(\"metageneration\"));mappings.push(new Mapping(\"name\",\"fullPath\",!0));var nameMapping=new Mapping(\"name\");nameMapping.xform=function(_metadata,fullPath){_metadata=!isString(fullPath)||2>fullPath.length?fullPath:lastComponent(fullPath);return _metadata};mappings.push(nameMapping);nameMapping=new Mapping(\"size\");\nnameMapping.xform=function(_metadata,size){return null!=size?Number(size):size};mappings.push(nameMapping);mappings.push(new Mapping(\"timeCreated\"));mappings.push(new Mapping(\"updated\"));mappings.push(new Mapping(\"md5Hash\",null,!0));mappings.push(new Mapping(\"cacheControl\",null,!0));mappings.push(new Mapping(\"contentDisposition\",null,!0));mappings.push(new Mapping(\"contentEncoding\",null,!0));mappings.push(new Mapping(\"contentLanguage\",null,!0));mappings.push(new Mapping(\"contentType\",null,!0));mappings.push(new Mapping(\"metadata\",\n\"customMetadata\",!0));return mappings_=mappings}function addRef(metadata,service){Object.defineProperty(metadata,\"ref\",{get:function(){var loc=new Location$jscomp$0(metadata.bucket,metadata.fullPath);return service.makeStorageReference(loc)}})}function fromResourceString(service,resourceString,mappings){resourceString=jsonObjectOrNull(resourceString);if(null===resourceString)return null;for(var metadata={type:\"file\"},len=mappings.length,i=0;i<len;i++){var mapping=mappings[i];metadata[mapping.local]=\nmapping.xform(metadata,resourceString[mapping.server])}addRef(metadata,service);return metadata}function downloadUrlFromResourceString(metadata,resourceString){resourceString=jsonObjectOrNull(resourceString);if(null===resourceString||!isString(resourceString.downloadTokens))return null;resourceString=resourceString.downloadTokens;if(0===resourceString.length)return null;var encode=encodeURIComponent;return resourceString.split(\",\").map(function(token){var path=metadata.fullPath;path=\"/b/\"+encode(metadata.bucket)+\n\"/o/\"+encode(path);path=makeUrl(path);token=makeQueryString({alt:\"media\",token});return path+token})[0]}function toResourceString(metadata,mappings){for(var resource={},len=mappings.length,i=0;i<len;i++){var mapping=mappings[i];mapping.writable&&(resource[mapping.server]=metadata[mapping.local])}return JSON.stringify(resource)}function metadataValidator(p){if(!isObject(p)||!p)throw\"Expected Metadata object.\";for(var key in p)if(p.hasOwnProperty(key)){var val=p[key];if(\"customMetadata\"===key){if(!isObject(val))throw\"Expected object for 'customMetadata' mapping.\";\n}else if(isObject(val)&&null!==val)throw\"Mapping for '\"+key+\"' cannot be an object.\";}}function listOptionsValidator(p$jscomp$0){if(!isObject(p$jscomp$0)||!p$jscomp$0)throw\"Expected ListOptions object.\";for(var key in p$jscomp$0)if(\"maxResults\"===key){var p=p$jscomp$0.maxResults;if(!isNumber(p)||!Number.isInteger(p)||0>=p$jscomp$0.maxResults)throw\"Expected maxResults to be a positive number.\";if(1E3<p$jscomp$0.maxResults)throw\"Expected maxResults to be less than or equal to 1000.\";}else if(\"pageToken\"===\nkey){if(p$jscomp$0.pageToken&&!isString(p$jscomp$0.pageToken))throw\"Expected pageToken to be string.\";}else throw\"Unknown option: \"+key;}function handlerCheck(cndn){if(!cndn)throw unknown();}function metadataHandler(service,mappings){return function(xhr,text){xhr=fromResourceString(service,text,mappings);handlerCheck(null!==xhr);return xhr}}function listHandler(service,bucket){return function(xhr,text){text=jsonObjectOrNull(text);if(null===text)xhr=null;else{xhr={prefixes:[],items:[],nextPageToken:text.nextPageToken};\nif(text.prefixes)for(var _i=0,_a=text.prefixes;_i<_a.length;_i++){var pathWithoutTrailingSlash=_a[_i].replace(/\\/$/,\"\");pathWithoutTrailingSlash=service.makeStorageReference(new Location$jscomp$0(bucket,pathWithoutTrailingSlash));xhr.prefixes.push(pathWithoutTrailingSlash)}if(text.items)for(_i=0,text=text.items;_i<text.length;_i++)pathWithoutTrailingSlash=service.makeStorageReference(new Location$jscomp$0(bucket,text[_i].name)),xhr.items.push(pathWithoutTrailingSlash)}handlerCheck(null!==xhr);return xhr}}\nfunction downloadUrlHandler(service,mappings){return function(xhr,text){xhr=fromResourceString(service,text,mappings);handlerCheck(null!==xhr);return downloadUrlFromResourceString(xhr,text)}}function sharedErrorHandler(location){return function(xhr,err){xhr=401===xhr.getStatus()?new FirebaseStorageError(Code.UNAUTHENTICATED,\"User is not authenticated, please authenticate using Firebase Authentication and try again.\"):402===xhr.getStatus()?new FirebaseStorageError(Code.QUOTA_EXCEEDED,\"Quota for bucket '\"+\nlocation.bucket+\"' exceeded, please view quota on https://firebase.google.com/pricing/.\"):403===xhr.getStatus()?new FirebaseStorageError(Code.UNAUTHORIZED,\"User does not have permission to access '\"+location.path+\"'.\"):err;xhr.setServerResponseProp(err.serverResponseProp());return xhr}}function objectErrorHandler(location){var shared=sharedErrorHandler(location);return function(xhr,err){var newErr=shared(xhr,err);404===xhr.getStatus()&&(newErr=new FirebaseStorageError(Code.OBJECT_NOT_FOUND,\"Object '\"+\nlocation.path+\"' does not exist.\"));newErr.setServerResponseProp(err.serverResponseProp());return newErr}}function getMetadata(service,location,mappings){var urlPart=location.fullServerUrl();urlPart=makeUrl(urlPart);var timeout=service.maxOperationRetryTime;service=new RequestInfo(urlPart,\"GET\",metadataHandler(service,mappings),timeout);service.errorHandler=objectErrorHandler(location);return service}function getDownloadUrl(service,location,mappings){var urlPart=location.fullServerUrl();urlPart=makeUrl(urlPart);\nvar timeout=service.maxOperationRetryTime;service=new RequestInfo(urlPart,\"GET\",downloadUrlHandler(service,mappings),timeout);service.errorHandler=objectErrorHandler(location);return service}function deleteObject(service,location){var urlPart=location.fullServerUrl();urlPart=makeUrl(urlPart);service=new RequestInfo(urlPart,\"DELETE\",function(_xhr,_text){},service.maxOperationRetryTime);service.successCodes=[200,204];service.errorHandler=objectErrorHandler(location);return service}function metadataForUpload_(location,\nblob,metadata){metadata=Object.assign({},metadata);metadata.fullPath=location.path;metadata.size=blob.size();metadata.contentType||(metadata.contentType=blob&&blob.type()||\"application/octet-stream\");return metadata}function multipartUpload(service,location,mappings,blob,metadata){var urlPart=location.bucketOnlyServerUrl(),headers={\"X-Goog-Upload-Protocol\":\"multipart\"};var boundary=\"\";for(var i=0;2>i;i++)boundary+=Math.random().toString().slice(2);headers[\"Content-Type\"]=\"multipart/related; boundary\\x3d\"+\nboundary;metadata=metadataForUpload_(location,blob,metadata);i=toResourceString(metadata,mappings);blob=FbsBlob.getBlob(\"--\"+boundary+\"\\r\\nContent-Type: application/json; charset\\x3dutf-8\\r\\n\\r\\n\"+i+\"\\r\\n--\"+boundary+\"\\r\\nContent-Type: \"+metadata.contentType+\"\\r\\n\\r\\n\",blob,\"\\r\\n--\"+boundary+\"--\");if(null===blob)throw cannotSliceBlob();metadata={name:metadata.fullPath};urlPart=makeUrl(urlPart);boundary=service.maxUploadRetryTime;service=new RequestInfo(urlPart,\"POST\",metadataHandler(service,mappings),\nboundary);service.urlParams=metadata;service.headers=headers;service.body=blob.uploadData();service.errorHandler=sharedErrorHandler(location);return service}function checkResumeHeader_(xhr,allowed){var status=null;try{status=xhr.getResponseHeader(\"X-Goog-Upload-Status\")}catch(e){handlerCheck(!1)}xhr=allowed||[\"active\"];handlerCheck(!!status&&-1!==xhr.indexOf(status));return status}function createResumableUpload(service,location,mappings,blob,metadata){var urlPart=location.bucketOnlyServerUrl(),metadataForUpload=\nmetadataForUpload_(location,blob,metadata);metadata={name:metadataForUpload.fullPath};urlPart=makeUrl(urlPart);blob={\"X-Goog-Upload-Protocol\":\"resumable\",\"X-Goog-Upload-Command\":\"start\",\"X-Goog-Upload-Header-Content-Length\":blob.size(),\"X-Goog-Upload-Header-Content-Type\":metadataForUpload.contentType,\"Content-Type\":\"application/json; charset\\x3dutf-8\"};mappings=toResourceString(metadataForUpload,mappings);service=new RequestInfo(urlPart,\"POST\",function(xhr){checkResumeHeader_(xhr);try{var url=xhr.getResponseHeader(\"X-Goog-Upload-URL\")}catch(e){handlerCheck(!1)}handlerCheck(isString(url));\nreturn url},service.maxUploadRetryTime);service.urlParams=metadata;service.headers=blob;service.body=mappings;service.errorHandler=sharedErrorHandler(location);return service}function getResumableUploadStatus(service,location,url,blob){service=new RequestInfo(url,\"POST\",function(xhr){var status=checkResumeHeader_(xhr,[\"active\",\"final\"]),sizeString=null;try{sizeString=xhr.getResponseHeader(\"X-Goog-Upload-Size-Received\")}catch(e){handlerCheck(!1)}sizeString||handlerCheck(!1);xhr=Number(sizeString);\nhandlerCheck(!isNaN(xhr));return new ResumableUploadStatus(xhr,blob.size(),\"final\"===status)},service.maxUploadRetryTime);service.headers={\"X-Goog-Upload-Command\":\"query\"};service.errorHandler=sharedErrorHandler(location);return service}function continueResumableUpload(location,service,url,blob,chunkSize,mappings,status,progressCallback){var status_=new ResumableUploadStatus(0,0);status?(status_.current=status.current,status_.total=status.total):(status_.current=0,status_.total=blob.size());if(blob.size()!==\nstatus_.total)throw new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE,\"Server recorded incorrect upload file size, please retry the upload.\");var bytesToUpload=status=status_.total-status_.current;0<chunkSize&&(bytesToUpload=Math.min(bytesToUpload,chunkSize));var startByte=status_.current;chunkSize={\"X-Goog-Upload-Command\":bytesToUpload===status?\"upload, finalize\":\"upload\",\"X-Goog-Upload-Offset\":status_.current};status=blob.slice(startByte,startByte+bytesToUpload);if(null===status)throw cannotSliceBlob();\nurl=new RequestInfo(url,\"POST\",function(xhr,text){var uploadStatus=checkResumeHeader_(xhr,[\"active\",\"final\"]),newCurrent=status_.current+bytesToUpload,size=blob.size();xhr=\"final\"===uploadStatus?metadataHandler(service,mappings)(xhr,text):null;return new ResumableUploadStatus(newCurrent,size,\"final\"===uploadStatus,xhr)},service.maxUploadRetryTime);url.headers=chunkSize;url.body=status.uploadData();url.progressCallback=progressCallback||null;url.errorHandler=sharedErrorHandler(location);return url}\nfunction validate(name,specs,passed){for(var minArgs=specs.length,maxArgs=specs.length,i=0;i<specs.length;i++)if(specs[i].optional){minArgs=i;break}if(!(minArgs<=passed.length&&passed.length<=maxArgs))throw minArgs===maxArgs?(specs=minArgs,minArgs=1===minArgs?\"argument\":\"arguments\"):(specs=\"between \"+minArgs+\" and \"+maxArgs,minArgs=\"arguments\"),new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT,\"Invalid argument count in `\"+name+\"`: Expected \"+specs+\" \"+minArgs+\", received \"+passed.length+\".\");\nfor(i=0;i<passed.length;i++)try{specs[i].validator(passed[i])}catch(e){if(e instanceof Error)throw invalidArgument(i,name,e.message);throw invalidArgument(i,name,e);}}function and_(v1,v2){return function(p){v1(p);v2(p)}}function stringSpec(validator,optional){function stringValidator(p){if(!isString(p))throw\"Expected string.\";}validator=validator?and_(stringValidator,validator):stringValidator;return new ArgSpec(validator,optional)}function uploadDataSpec(){return new ArgSpec(function(p){if(!(p instanceof\nUint8Array||p instanceof ArrayBuffer||isNativeBlobDefined()&&p instanceof Blob))throw\"Expected Blob or File.\";})}function nonNegativeNumberSpec(){return new ArgSpec(function(p){if(!(isNumber(p)&&0<=p))throw\"Expected a number 0 or greater.\";})}function looseObjectSpec(validator,optional){return new ArgSpec(function(p){if(!(null===p||null!=p&&p instanceof Object))throw\"Expected an Object.\";void 0!==validator&&null!==validator&&validator(p)},optional)}function nullFunctionSpec(optional){return new ArgSpec(function(p){if(null!==\np&&\"function\"!==typeof p)throw\"Expected a Function.\";},optional)}function async(f){return function(){for(var argsToForward=[],_i=0;_i<arguments.length;_i++)argsToForward[_i]=arguments[_i];Promise.resolve().then(function(){return f.apply(void 0,argsToForward)})}}function start(f,callback,timeout){function triggerCallback(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];triggeredCallback||(triggeredCallback=!0,callback.apply(null,args))}function callWithDelay(millis){timeoutId=\nsetTimeout(function(){timeoutId=null;f(handler,2===cancelState)},millis)}function handler(success){for(var args=[],_i=1;_i<arguments.length;_i++)args[_i-1]=arguments[_i];triggeredCallback||(success?triggerCallback.call.apply(triggerCallback,tslib.__spreadArrays([null,success],args)):2===cancelState||hitTimeout?triggerCallback.call.apply(triggerCallback,tslib.__spreadArrays([null,success],args)):(64>waitSeconds&&(waitSeconds*=2),1===cancelState?(cancelState=2,args=0):args=1E3*(waitSeconds+Math.random()),\ncallWithDelay(args)))}function stop(wasTimeout){stopped||(stopped=!0,triggeredCallback||(null!==timeoutId?(wasTimeout||(cancelState=2),clearTimeout(timeoutId),callWithDelay(0)):wasTimeout||(cancelState=1)))}var waitSeconds=1,timeoutId=null,hitTimeout=!1,cancelState=0,triggeredCallback=!1,stopped=!1;callWithDelay(0);setTimeout(function(){hitTimeout=!0;stop(!0)},timeout);return stop}function makeRequest(requestInfo,appId,authToken,pool){var queryPart=makeQueryString(requestInfo.urlParams);queryPart=\nrequestInfo.url+queryPart;var headers=Object.assign({},requestInfo.headers);appId&&(headers[\"X-Firebase-GMPID\"]=appId);null!==authToken&&0<authToken.length&&(headers.Authorization=\"Firebase \"+authToken);headers[\"X-Firebase-Storage-Version\"]=\"webjs/\"+(\"undefined\"!==typeof firebase__default[\"default\"]?firebase__default[\"default\"].SDK_VERSION:\"AppManager\");return new NetworkRequest(queryPart,requestInfo.method,headers,requestInfo.body,requestInfo.successCodes,requestInfo.additionalRetryCodes,requestInfo.handler,\nrequestInfo.errorHandler,requestInfo.timeout,requestInfo.progressCallback,pool)}function factory(container,url){var app=container.getProvider(\"app\").getImmediate();container=container.getProvider(\"auth-internal\");return new StorageService(app,container,new XhrIoPool,url)}function registerStorage(instance){var namespaceExports={TaskState,TaskEvent,StringFormat,Storage:StorageService,Reference};instance.INTERNAL.registerComponent((new component$jscomp$0.Component(\"storage\",factory,\"PUBLIC\")).setServiceProps(namespaceExports).setMultipleInstances(!0));\ninstance.registerVersion(\"@firebase/storage\",\"0.3.43\")}Object.defineProperty(exports,\"__esModule\",{value:!0});global=require(\"module$node_modules$$firebase$app$dist$index_cjs\");var tslib=require(\"module$node_modules$tslib$tslib\"),component$jscomp$0=require(\"module$node_modules$$firebase$component$dist$index_cjs\"),firebase__default=global&&\"object\"===typeof global&&\"default\"in global?global:{\"default\":global},FirebaseStorageError=function(){function FirebaseStorageError(code,message){this.code_=\"storage/\"+\ncode;this.message_=\"Firebase Storage: \"+message;this.serverResponse_=null;this.name_=\"FirebaseError\"}FirebaseStorageError.prototype.codeProp=function(){return this.code};FirebaseStorageError.prototype.codeEquals=function(code){return\"storage/\"+code===this.codeProp()};FirebaseStorageError.prototype.serverResponseProp=function(){return this.serverResponse_};FirebaseStorageError.prototype.setServerResponseProp=function(serverResponse){this.serverResponse_=serverResponse};Object.defineProperty(FirebaseStorageError.prototype,\n\"name\",{get:function(){return this.name_},enumerable:!1,configurable:!0});Object.defineProperty(FirebaseStorageError.prototype,\"code\",{get:function(){return this.code_},enumerable:!1,configurable:!0});Object.defineProperty(FirebaseStorageError.prototype,\"message\",{get:function(){return this.serverResponse_?this.message_+\"\\n\"+this.serverResponse_:this.message_},enumerable:!1,configurable:!0});Object.defineProperty(FirebaseStorageError.prototype,\"serverResponse\",{get:function(){return this.serverResponse_},\nenumerable:!1,configurable:!0});return FirebaseStorageError}(),Code={UNKNOWN:\"unknown\",OBJECT_NOT_FOUND:\"object-not-found\",BUCKET_NOT_FOUND:\"bucket-not-found\",PROJECT_NOT_FOUND:\"project-not-found\",QUOTA_EXCEEDED:\"quota-exceeded\",UNAUTHENTICATED:\"unauthenticated\",UNAUTHORIZED:\"unauthorized\",RETRY_LIMIT_EXCEEDED:\"retry-limit-exceeded\",INVALID_CHECKSUM:\"invalid-checksum\",CANCELED:\"canceled\",INVALID_EVENT_NAME:\"invalid-event-name\",INVALID_URL:\"invalid-url\",INVALID_DEFAULT_BUCKET:\"invalid-default-bucket\",\nNO_DEFAULT_BUCKET:\"no-default-bucket\",CANNOT_SLICE_BLOB:\"cannot-slice-blob\",SERVER_FILE_WRONG_SIZE:\"server-file-wrong-size\",NO_DOWNLOAD_URL:\"no-download-url\",INVALID_ARGUMENT:\"invalid-argument\",INVALID_ARGUMENT_COUNT:\"invalid-argument-count\",APP_DELETED:\"app-deleted\",INVALID_ROOT_OPERATION:\"invalid-root-operation\",INVALID_FORMAT:\"invalid-format\",INTERNAL_ERROR:\"internal-error\"},StringFormat={RAW:\"raw\",BASE64:\"base64\",BASE64URL:\"base64url\",DATA_URL:\"data_url\"},StringData=function(){return function(data,\ncontentType){this.data=data;this.contentType=contentType||null}}(),DataURLParts=function(){return function(dataURL){this.base64=!1;this.contentType=null;var matches=dataURL.match(/^data:([^,]+)?,/);if(null===matches)throw invalidFormat(StringFormat.DATA_URL,\"Must be formatted 'data:[\\x3cmediatype\\x3e][;base64],\\x3cdata\\x3e\");matches=matches[1]||null;if(null!=matches){var JSCompiler_inline_result=7<=matches.length?\";base64\"===matches.substring(matches.length-7):!1;this.contentType=(this.base64=JSCompiler_inline_result)?\nmatches.substring(0,matches.length-7):matches}this.rest=dataURL.substring(dataURL.indexOf(\",\")+1)}}(),TaskEvent={STATE_CHANGED:\"state_changed\"},InternalTaskState={RUNNING:\"running\",PAUSING:\"pausing\",PAUSED:\"paused\",SUCCESS:\"success\",CANCELING:\"canceling\",CANCELED:\"canceled\",ERROR:\"error\"},TaskState={RUNNING:\"running\",PAUSED:\"paused\",SUCCESS:\"success\",CANCELED:\"canceled\",ERROR:\"error\"},ErrorCode;(function(ErrorCode){ErrorCode[ErrorCode.NO_ERROR=0]=\"NO_ERROR\";ErrorCode[ErrorCode.NETWORK_ERROR=1]=\"NETWORK_ERROR\";\nErrorCode[ErrorCode.ABORT=2]=\"ABORT\"})(ErrorCode||(ErrorCode={}));var NetworkXhrIo=function(){function NetworkXhrIo(){var _this=this;this.sent_=!1;this.xhr_=new XMLHttpRequest;this.errorCode_=ErrorCode.NO_ERROR;this.sendPromise_=new Promise(function(resolve){_this.xhr_.addEventListener(\"abort\",function(){_this.errorCode_=ErrorCode.ABORT;resolve(_this)});_this.xhr_.addEventListener(\"error\",function(){_this.errorCode_=ErrorCode.NETWORK_ERROR;resolve(_this)});_this.xhr_.addEventListener(\"load\",function(){resolve(_this)})})}\nNetworkXhrIo.prototype.send=function(url,method,body,headers){if(this.sent_)throw internalError(\"cannot .send() more than once\");this.sent_=!0;this.xhr_.open(method,url,!0);if(null!=headers)for(var key in headers)headers.hasOwnProperty(key)&&this.xhr_.setRequestHeader(key,headers[key].toString());null!=body?this.xhr_.send(body):this.xhr_.send();return this.sendPromise_};NetworkXhrIo.prototype.getErrorCode=function(){if(!this.sent_)throw internalError(\"cannot .getErrorCode() before sending\");return this.errorCode_};\nNetworkXhrIo.prototype.getStatus=function(){if(!this.sent_)throw internalError(\"cannot .getStatus() before sending\");try{return this.xhr_.status}catch(e){return-1}};NetworkXhrIo.prototype.getResponseText=function(){if(!this.sent_)throw internalError(\"cannot .getResponseText() before sending\");return this.xhr_.responseText};NetworkXhrIo.prototype.abort=function(){this.xhr_.abort()};NetworkXhrIo.prototype.getResponseHeader=function(header){return this.xhr_.getResponseHeader(header)};NetworkXhrIo.prototype.addUploadProgressListener=\nfunction(listener){null!=this.xhr_.upload&&this.xhr_.upload.addEventListener(\"progress\",listener)};NetworkXhrIo.prototype.removeUploadProgressListener=function(listener){null!=this.xhr_.upload&&this.xhr_.upload.removeEventListener(\"progress\",listener)};return NetworkXhrIo}(),XhrIoPool=function(){function XhrIoPool(){}XhrIoPool.prototype.createXhrIo=function(){return new NetworkXhrIo};return XhrIoPool}(),FbsBlob=function(){function FbsBlob(data,elideCopy){var size=0,blobType=\"\";isNativeBlob(data)?\n(this.data_=data,size=data.size,blobType=data.type):data instanceof ArrayBuffer?(elideCopy?this.data_=new Uint8Array(data):(this.data_=new Uint8Array(data.byteLength),this.data_.set(new Uint8Array(data))),size=this.data_.length):data instanceof Uint8Array&&(elideCopy?this.data_=data:(this.data_=new Uint8Array(data.length),this.data_.set(data)),size=data.length);this.size_=size;this.type_=blobType}FbsBlob.prototype.size=function(){return this.size_};FbsBlob.prototype.type=function(){return this.type_};\nFbsBlob.prototype.slice=function(startByte,endByte){if(isNativeBlob(this.data_)){var blob=this.data_;startByte=blob.webkitSlice?blob.webkitSlice(startByte,endByte):blob.mozSlice?blob.mozSlice(startByte,endByte):blob.slice?blob.slice(startByte,endByte):null;return null===startByte?null:new FbsBlob(startByte)}startByte=new Uint8Array(this.data_.buffer,startByte,endByte-startByte);return new FbsBlob(startByte,!0)};FbsBlob.getBlob=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];\nif(isNativeBlobDefined())return args=args.map(function(val){return val instanceof FbsBlob?val.data_:val}),new FbsBlob(getBlob.apply(null,args));args=args.map(function(val){return isString(val)?dataFromString(StringFormat.RAW,val).data:val.data_});var finalLength_1=0;args.forEach(function(array){finalLength_1+=array.byteLength});var merged_1=new Uint8Array(finalLength_1),index_1=0;args.forEach(function(array){for(var i=0;i<array.length;i++)merged_1[index_1++]=array[i]});return new FbsBlob(merged_1,\n!0)};FbsBlob.prototype.uploadData=function(){return this.data_};return FbsBlob}(),Location$jscomp$0=function(){function Location(bucket,path){this.bucket=bucket;this.path_=path}Object.defineProperty(Location.prototype,\"path\",{get:function(){return this.path_},enumerable:!1,configurable:!0});Object.defineProperty(Location.prototype,\"isRoot\",{get:function(){return 0===this.path.length},enumerable:!1,configurable:!0});Location.prototype.fullServerUrl=function(){var encode=encodeURIComponent;return\"/b/\"+\nencode(this.bucket)+\"/o/\"+encode(this.path)};Location.prototype.bucketOnlyServerUrl=function(){return\"/b/\"+encodeURIComponent(this.bucket)+\"/o\"};Location.makeFromBucketSpec=function(bucketString){try{var bucketLocation=Location.makeFromUrl(bucketString)}catch(e){return new Location(bucketString,\"\")}if(\"\"===bucketLocation.path)return bucketLocation;throw new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET,\"Invalid default bucket '\"+bucketString+\"'.\");};Location.makeFromUrl=function(url){function httpModify(loc){loc.path_=\ndecodeURIComponent(loc.path)}for(var location=null,firebaseStorageHost=\"firebasestorage.googleapis.com\".replace(/[.]/g,\"\\\\.\"),groups=[{regex:/^gs:\\/\\/([A-Za-z0-9.\\-_]+)(\\/(.*))?$/i,indices:{bucket:1,path:3},postModify:function(loc){\"/\"===loc.path.charAt(loc.path.length-1)&&(loc.path_=loc.path_.slice(0,-1))}},{regex:new RegExp(\"^https?://\"+firebaseStorageHost+\"/v[A-Za-z0-9_]+/b/([A-Za-z0-9.\\\\-_]+)/o(/([^?#]*).*)?$\",\"i\"),indices:{bucket:1,path:3},postModify:httpModify},{regex:/^https?:\\/\\/(?:storage.googleapis.com|storage.cloud.google.com)\\/([A-Za-z0-9.\\-_]+)\\/([^?#]*)/i,\nindices:{bucket:1,path:2},postModify:httpModify}],i=0;i<groups.length;i++){firebaseStorageHost=groups[i];var captures=firebaseStorageHost.regex.exec(url);if(captures){location=captures[firebaseStorageHost.indices.bucket];(captures=captures[firebaseStorageHost.indices.path])||(captures=\"\");location=new Location(location,captures);firebaseStorageHost.postModify(location);break}}if(null==location)throw new FirebaseStorageError(Code.INVALID_URL,\"Invalid URL '\"+url+\"'.\");return location};return Location}(),\nMapping=function(){return function(server,local,writable,xform){this.server=server;this.local=local||server;this.writable=!!writable;this.xform=xform||noXform_}}(),mappings_=null,RequestInfo=function(){return function(url,method,handler,timeout){this.url=url;this.method=method;this.handler=handler;this.timeout=timeout;this.urlParams={};this.headers={};this.progressCallback=this.errorHandler=this.body=null;this.successCodes=[200];this.additionalRetryCodes=[]}}(),ResumableUploadStatus=function(){return function(current,\ntotal,finalized,metadata){this.current=current;this.total=total;this.finalized=!!finalized;this.metadata=metadata||null}}(),Observer=function(){return function(nextOrObserver,error,complete){\"function\"===typeof nextOrObserver||null!=error||null!=complete?(this.next=nextOrObserver,this.error=error||null,this.complete=complete||null):(this.next=nextOrObserver.next||null,this.error=nextOrObserver.error||null,this.complete=nextOrObserver.complete||null)}}(),UploadTaskSnapshot=function(){return function(bytesTransferred,\ntotalBytes,state,metadata,task,ref){this.bytesTransferred=bytesTransferred;this.totalBytes=totalBytes;this.state=state;this.metadata=metadata;this.task=task;this.ref=ref}}(),ArgSpec=function(){return function(validator,optional){var self=this;this.validator=function(p){self.optional&&!isJustDef(p)||validator(p)};this.optional=!!optional}}(),UploadTask=function(){function UploadTask(ref,service,location,mappings,blob,metadata){var _this=this;void 0===metadata&&(metadata=null);this.transferred_=0;this.needToFetchMetadata_=\nthis.needToFetchStatus_=!1;this.observers_=[];this.request_=this.uploadUrl_=this.error_=null;this.chunkMultiplier_=1;this.reject_=this.resolve_=null;this.ref_=ref;this.service_=service;this.location_=location;this.blob_=blob;this.metadata_=metadata;this.mappings_=mappings;this.resumable_=this.shouldDoResumable_(this.blob_);this.state_=InternalTaskState.RUNNING;this.errorHandler_=function(error){_this.request_=null;_this.chunkMultiplier_=1;error.codeEquals(Code.CANCELED)?(_this.needToFetchStatus_=\n!0,_this.completeTransitions_()):(_this.error_=error,_this.transition_(InternalTaskState.ERROR))};this.metadataErrorHandler_=function(error){_this.request_=null;error.codeEquals(Code.CANCELED)?_this.completeTransitions_():(_this.error_=error,_this.transition_(InternalTaskState.ERROR))};this.promise_=new Promise(function(resolve,reject){_this.resolve_=resolve;_this.reject_=reject;_this.start_()});this.promise_.then(null,function(){})}UploadTask.prototype.makeProgressCallback_=function(){var _this=\nthis,sizeBefore=this.transferred_;return function(loaded){return _this.updateProgress_(sizeBefore+loaded)}};UploadTask.prototype.shouldDoResumable_=function(blob){return 262144<blob.size()};UploadTask.prototype.start_=function(){if(this.state_===InternalTaskState.RUNNING&&null===this.request_)if(this.resumable_)null===this.uploadUrl_?this.createResumable_():this.needToFetchStatus_?this.fetchStatus_():this.needToFetchMetadata_?this.fetchMetadata_():this.continueUpload_();else this.oneShotUpload_()};\nUploadTask.prototype.resolveToken_=function(callback){var _this=this;this.service_.getAuthToken().then(function(authToken){switch(_this.state_){case InternalTaskState.RUNNING:callback(authToken);break;case InternalTaskState.CANCELING:_this.transition_(InternalTaskState.CANCELED);break;case InternalTaskState.PAUSING:_this.transition_(InternalTaskState.PAUSED)}})};UploadTask.prototype.createResumable_=function(){var _this=this;this.resolveToken_(function(authToken){var requestInfo=createResumableUpload(_this.service_,\n_this.location_,_this.mappings_,_this.blob_,_this.metadata_);authToken=_this.service_.makeRequest(requestInfo,authToken);_this.request_=authToken;authToken.getPromise().then(function(url){_this.request_=null;_this.uploadUrl_=url;_this.needToFetchStatus_=!1;_this.completeTransitions_()},_this.errorHandler_)})};UploadTask.prototype.fetchStatus_=function(){var _this=this,url=this.uploadUrl_;this.resolveToken_(function(authToken){var requestInfo=getResumableUploadStatus(_this.service_,_this.location_,\nurl,_this.blob_);authToken=_this.service_.makeRequest(requestInfo,authToken);_this.request_=authToken;authToken.getPromise().then(function(status){_this.request_=null;_this.updateProgress_(status.current);_this.needToFetchStatus_=!1;status.finalized&&(_this.needToFetchMetadata_=!0);_this.completeTransitions_()},_this.errorHandler_)})};UploadTask.prototype.continueUpload_=function(){var _this=this,chunkSize=262144*this.chunkMultiplier_,status=new ResumableUploadStatus(this.transferred_,this.blob_.size()),\nurl=this.uploadUrl_;this.resolveToken_(function(authToken){try{var requestInfo=continueResumableUpload(_this.location_,_this.service_,url,_this.blob_,chunkSize,_this.mappings_,status,_this.makeProgressCallback_())}catch(e){_this.error_=e;_this.transition_(InternalTaskState.ERROR);return}authToken=_this.service_.makeRequest(requestInfo,authToken);_this.request_=authToken;authToken.getPromise().then(function(newStatus){_this.increaseMultiplier_();_this.request_=null;_this.updateProgress_(newStatus.current);\nnewStatus.finalized?(_this.metadata_=newStatus.metadata,_this.transition_(InternalTaskState.SUCCESS)):_this.completeTransitions_()},_this.errorHandler_)})};UploadTask.prototype.increaseMultiplier_=function(){33554432>262144*this.chunkMultiplier_&&(this.chunkMultiplier_*=2)};UploadTask.prototype.fetchMetadata_=function(){var _this=this;this.resolveToken_(function(authToken){var requestInfo=getMetadata(_this.service_,_this.location_,_this.mappings_);authToken=_this.service_.makeRequest(requestInfo,\nauthToken);_this.request_=authToken;authToken.getPromise().then(function(metadata){_this.request_=null;_this.metadata_=metadata;_this.transition_(InternalTaskState.SUCCESS)},_this.metadataErrorHandler_)})};UploadTask.prototype.oneShotUpload_=function(){var _this=this;this.resolveToken_(function(authToken){var requestInfo=multipartUpload(_this.service_,_this.location_,_this.mappings_,_this.blob_,_this.metadata_);authToken=_this.service_.makeRequest(requestInfo,authToken);_this.request_=authToken;authToken.getPromise().then(function(metadata){_this.request_=\nnull;_this.metadata_=metadata;_this.updateProgress_(_this.blob_.size());_this.transition_(InternalTaskState.SUCCESS)},_this.errorHandler_)})};UploadTask.prototype.updateProgress_=function(transferred){var old=this.transferred_;this.transferred_=transferred;this.transferred_!==old&&this.notifyObservers_()};UploadTask.prototype.transition_=function(state){if(this.state_!==state)switch(state){case InternalTaskState.CANCELING:this.state_=state;null!==this.request_&&this.request_.cancel();break;case InternalTaskState.PAUSING:this.state_=\nstate;null!==this.request_&&this.request_.cancel();break;case InternalTaskState.RUNNING:var wasPaused=this.state_===InternalTaskState.PAUSED;this.state_=state;wasPaused&&(this.notifyObservers_(),this.start_());break;case InternalTaskState.PAUSED:this.state_=state;this.notifyObservers_();break;case InternalTaskState.CANCELED:this.error_=canceled();this.state_=state;this.notifyObservers_();break;case InternalTaskState.ERROR:this.state_=state;this.notifyObservers_();break;case InternalTaskState.SUCCESS:this.state_=\nstate,this.notifyObservers_()}};UploadTask.prototype.completeTransitions_=function(){switch(this.state_){case InternalTaskState.PAUSING:this.transition_(InternalTaskState.PAUSED);break;case InternalTaskState.CANCELING:this.transition_(InternalTaskState.CANCELED);break;case InternalTaskState.RUNNING:this.start_()}};Object.defineProperty(UploadTask.prototype,\"snapshot\",{get:function(){var externalState=taskStateFromInternalTaskState(this.state_);return new UploadTaskSnapshot(this.transferred_,this.blob_.size(),\nexternalState,this.metadata_,this,this.ref_)},enumerable:!1,configurable:!0});UploadTask.prototype.on=function(type,nextOrObserver$jscomp$0,error$jscomp$0,completed){function nextOrObserverValidator(p){try{nextValidator(p);return}catch(e){}try{if(observerValidator(p),!(isJustDef(p.next)||isJustDef(p.error)||isJustDef(p.complete)))throw\"\";}catch(e){throw\"Expected a function or an Object with one of `next`, `error`, `complete` properties.\";}}function makeBinder(specs){return function(nextOrObserver,\nerror,complete){null!==specs&&validate(\"on\",specs,arguments);var observer=new Observer(nextOrObserver,error,completed);self.addObserver_(observer);return function(){self.removeObserver_(observer)}}}var nextValidator=nullFunctionSpec(!0).validator,observerValidator=looseObjectSpec(null,!0).validator,specs$jscomp$0=[stringSpec(function(){if(type!==TaskEvent.STATE_CHANGED)throw\"Expected one of the event types: [\"+TaskEvent.STATE_CHANGED+\"].\";}),looseObjectSpec(nextOrObserverValidator,!0),nullFunctionSpec(!0),\nnullFunctionSpec(!0)];validate(\"on\",specs$jscomp$0,arguments);var self=this;specs$jscomp$0=[looseObjectSpec(function(p){if(null===p)throw\"Expected a function or an Object with one of `next`, `error`, `complete` properties.\";nextOrObserverValidator(p)}),nullFunctionSpec(!0),nullFunctionSpec(!0)];return isJustDef(nextOrObserver$jscomp$0)||isJustDef(error$jscomp$0)||isJustDef(completed)?makeBinder(null)(nextOrObserver$jscomp$0,error$jscomp$0,completed):makeBinder(specs$jscomp$0)};UploadTask.prototype.then=\nfunction(onFulfilled,onRejected){return this.promise_.then(onFulfilled,onRejected)};UploadTask.prototype.catch=function(onRejected){return this.then(null,onRejected)};UploadTask.prototype.addObserver_=function(observer){this.observers_.push(observer);this.notifyObserver_(observer)};UploadTask.prototype.removeObserver_=function(observer){observer=this.observers_.indexOf(observer);-1!==observer&&this.observers_.splice(observer,1)};UploadTask.prototype.notifyObservers_=function(){var _this=this;this.finishPromise_();\nthis.observers_.slice().forEach(function(observer){_this.notifyObserver_(observer)})};UploadTask.prototype.finishPromise_=function(){if(null!==this.resolve_){var triggered=!0;switch(taskStateFromInternalTaskState(this.state_)){case TaskState.SUCCESS:async(this.resolve_.bind(null,this.snapshot))();break;case TaskState.CANCELED:case TaskState.ERROR:async(this.reject_.bind(null,this.error_))();break;default:triggered=!1}triggered&&(this.reject_=this.resolve_=null)}};UploadTask.prototype.notifyObserver_=\nfunction(observer){switch(taskStateFromInternalTaskState(this.state_)){case TaskState.RUNNING:case TaskState.PAUSED:observer.next&&async(observer.next.bind(observer,this.snapshot))();break;case TaskState.SUCCESS:observer.complete&&async(observer.complete.bind(observer))();break;case TaskState.CANCELED:case TaskState.ERROR:observer.error&&async(observer.error.bind(observer,this.error_))();break;default:observer.error&&async(observer.error.bind(observer,this.error_))()}};UploadTask.prototype.resume=\nfunction(){validate(\"resume\",[],arguments);var valid=this.state_===InternalTaskState.PAUSED||this.state_===InternalTaskState.PAUSING;valid&&this.transition_(InternalTaskState.RUNNING);return valid};UploadTask.prototype.pause=function(){validate(\"pause\",[],arguments);var valid=this.state_===InternalTaskState.RUNNING;valid&&this.transition_(InternalTaskState.PAUSING);return valid};UploadTask.prototype.cancel=function(){validate(\"cancel\",[],arguments);var valid=this.state_===InternalTaskState.RUNNING||\nthis.state_===InternalTaskState.PAUSING;valid&&this.transition_(InternalTaskState.CANCELING);return valid};return UploadTask}(),Reference=function(){function Reference(service,location){this.service=service;this.location=location instanceof Location$jscomp$0?location:Location$jscomp$0.makeFromUrl(location)}Reference.prototype.toString=function(){validate(\"toString\",[],arguments);return\"gs://\"+this.location.bucket+\"/\"+this.location.path};Reference.prototype.newRef=function(service,location){return new Reference(service,\nlocation)};Reference.prototype.mappings=function(){return getMappings()};Reference.prototype.child=function(childPath){validate(\"child\",[stringSpec()],arguments);var newPath=child(this.location.path,childPath);newPath=new Location$jscomp$0(this.location.bucket,newPath);return this.newRef(this.service,newPath)};Object.defineProperty(Reference.prototype,\"parent\",{get:function(){var newPath=this.location.path;if(0===newPath.length)newPath=null;else{var index=newPath.lastIndexOf(\"/\");newPath=-1===index?\n\"\":newPath.slice(0,index)}if(null===newPath)return null;newPath=new Location$jscomp$0(this.location.bucket,newPath);return this.newRef(this.service,newPath)},enumerable:!1,configurable:!0});Object.defineProperty(Reference.prototype,\"root\",{get:function(){var location=new Location$jscomp$0(this.location.bucket,\"\");return this.newRef(this.service,location)},enumerable:!1,configurable:!0});Object.defineProperty(Reference.prototype,\"bucket\",{get:function(){return this.location.bucket},enumerable:!1,configurable:!0});\nObject.defineProperty(Reference.prototype,\"fullPath\",{get:function(){return this.location.path},enumerable:!1,configurable:!0});Object.defineProperty(Reference.prototype,\"name\",{get:function(){return lastComponent(this.location.path)},enumerable:!1,configurable:!0});Object.defineProperty(Reference.prototype,\"storage\",{get:function(){return this.service},enumerable:!1,configurable:!0});Reference.prototype.put=function(data,metadata){void 0===metadata&&(metadata=null);validate(\"put\",[uploadDataSpec(),\nnew ArgSpec(metadataValidator,!0)],arguments);this.throwIfRoot_(\"put\");return new UploadTask(this,this.service,this.location,this.mappings(),new FbsBlob(data),metadata)};Reference.prototype.putString=function(value,format,metadata){void 0===format&&(format=StringFormat.RAW);validate(\"putString\",[stringSpec(),stringSpec(formatValidator,!0),new ArgSpec(metadataValidator,!0)],arguments);this.throwIfRoot_(\"putString\");var data=dataFromString(format,value),metadataClone=Object.assign({},metadata);null==\nmetadataClone.contentType&&null!=data.contentType&&(metadataClone.contentType=data.contentType);return new UploadTask(this,this.service,this.location,this.mappings(),new FbsBlob(data.data,!0),metadataClone)};Reference.prototype.delete=function(){var _this=this;validate(\"delete\",[],arguments);this.throwIfRoot_(\"delete\");return this.service.getAuthToken().then(function(authToken){var requestInfo=deleteObject(_this.service,_this.location);return _this.service.makeRequest(requestInfo,authToken).getPromise()})};\nReference.prototype.listAll=function(){validate(\"listAll\",[],arguments);var accumulator={prefixes:[],items:[]};return this.listAllHelper(accumulator).then(function(){return accumulator})};Reference.prototype.listAllHelper=function(accumulator,pageToken){return tslib.__awaiter(this,void 0,void 0,function(){var opt,nextPage,_a,_b;return tslib.__generator(this,function(_c){switch(_c.label){case 0:return opt={pageToken},[4,this.list(opt)];case 1:return nextPage=_c.sent(),(_a=accumulator.prefixes).push.apply(_a,\nnextPage.prefixes),(_b=accumulator.items).push.apply(_b,nextPage.items),null==nextPage.nextPageToken?[3,3]:[4,this.listAllHelper(accumulator,nextPage.nextPageToken)];case 2:_c.sent(),_c.label=3;case 3:return[2]}})})};Reference.prototype.list=function(options){validate(\"list\",[new ArgSpec(listOptionsValidator,!0)],arguments);var self=this;return this.service.getAuthToken().then(function(authToken){var op=options||{},service=self.service,location=self.location,pageToken=op.pageToken,maxResults=op.maxResults;\nop={};op.prefix=location.isRoot?\"\":location.path+\"/\";op.delimiter=\"/\";pageToken&&(op.pageToken=pageToken);maxResults&&(op.maxResults=maxResults);pageToken=location.bucketOnlyServerUrl();pageToken=makeUrl(pageToken);maxResults=service.maxOperationRetryTime;service=new RequestInfo(pageToken,\"GET\",listHandler(service,location.bucket),maxResults);service.urlParams=op;service.errorHandler=sharedErrorHandler(location);return self.service.makeRequest(service,authToken).getPromise()})};Reference.prototype.getMetadata=\nfunction(){var _this=this;validate(\"getMetadata\",[],arguments);this.throwIfRoot_(\"getMetadata\");return this.service.getAuthToken().then(function(authToken){var requestInfo=getMetadata(_this.service,_this.location,_this.mappings());return _this.service.makeRequest(requestInfo,authToken).getPromise()})};Reference.prototype.updateMetadata=function(metadata$jscomp$0){var _this=this;validate(\"updateMetadata\",[new ArgSpec(metadataValidator,void 0)],arguments);this.throwIfRoot_(\"updateMetadata\");return this.service.getAuthToken().then(function(authToken){var service=\n_this.service,location=_this.location,metadata=metadata$jscomp$0,mappings=_this.mappings(),urlPart=location.fullServerUrl();urlPart=makeUrl(urlPart);metadata=toResourceString(metadata,mappings);var timeout=service.maxOperationRetryTime;service=new RequestInfo(urlPart,\"PATCH\",metadataHandler(service,mappings),timeout);service.headers={\"Content-Type\":\"application/json; charset\\x3dutf-8\"};service.body=metadata;service.errorHandler=objectErrorHandler(location);return _this.service.makeRequest(service,\nauthToken).getPromise()})};Reference.prototype.getDownloadURL=function(){var _this=this;validate(\"getDownloadURL\",[],arguments);this.throwIfRoot_(\"getDownloadURL\");return this.service.getAuthToken().then(function(authToken){var requestInfo=getDownloadUrl(_this.service,_this.location,_this.mappings());return _this.service.makeRequest(requestInfo,authToken).getPromise().then(function(url){if(null===url)throw new FirebaseStorageError(Code.NO_DOWNLOAD_URL,\"The given file does not have any download URLs.\");\nreturn url})})};Reference.prototype.throwIfRoot_=function(name){if(\"\"===this.location.path)throw new FirebaseStorageError(Code.INVALID_ROOT_OPERATION,\"The operation '\"+name+\"' cannot be performed on a root reference, create a non-root reference using child, such as .child('file.png').\");};return Reference}(),FailRequest=function(){function FailRequest(error){this.promise_=Promise.reject(error)}FailRequest.prototype.getPromise=function(){return this.promise_};FailRequest.prototype.cancel=function(_appDelete){};\nreturn FailRequest}(),NetworkRequest=function(){function NetworkRequest(url,method,headers,body,successCodes,additionalRetryCodes,callback,errorCallback,timeout,progressCallback,pool){var _this=this;this.backoffId_=this.pendingXhr_=null;this.appDelete_=this.canceled_=!1;this.url_=url;this.method_=method;this.headers_=headers;this.body_=body;this.successCodes_=successCodes.slice();this.additionalRetryCodes_=additionalRetryCodes.slice();this.callback_=callback;this.errorCallback_=errorCallback;this.progressCallback_=\nprogressCallback;this.timeout_=timeout;this.pool_=pool;this.promise_=new Promise(function(resolve,reject){_this.resolve_=resolve;_this.reject_=reject;_this.start_()})}NetworkRequest.prototype.start_=function(){function doTheRequest(backoffCallback,canceled){function progressListener(progressEvent){var loaded=progressEvent.loaded;progressEvent=progressEvent.lengthComputable?progressEvent.total:-1;null!==self.progressCallback_&&self.progressCallback_(loaded,progressEvent)}canceled?backoffCallback(!1,\nnew RequestEndStatus(!1,null,!0)):(canceled=self.pool_.createXhrIo(),self.pendingXhr_=canceled,null!==self.progressCallback_&&canceled.addUploadProgressListener(progressListener),canceled.send(self.url_,self.method_,self.body_,self.headers_).then(function(xhr){null!==self.progressCallback_&&xhr.removeUploadProgressListener(progressListener);self.pendingXhr_=null;var hitServer=xhr.getErrorCode()===ErrorCode.NO_ERROR,status=xhr.getStatus();!hitServer||self.isRetryStatusCode_(status)?(xhr=xhr.getErrorCode()===\nErrorCode.ABORT,backoffCallback(!1,new RequestEndStatus(!1,null,xhr))):(hitServer=-1!==self.successCodes_.indexOf(status),backoffCallback(!0,new RequestEndStatus(hitServer,xhr)))}))}function backoffDone(requestWentThrough,status){var resolve=self.resolve_;requestWentThrough=self.reject_;var xhr=status.xhr;if(status.wasSuccessCode)try{var result=self.callback_(xhr,xhr.getResponseText());isJustDef(result)?resolve(result):resolve()}catch(e){requestWentThrough(e)}else null!==xhr?(status=unknown(),status.setServerResponseProp(xhr.getResponseText()),\nself.errorCallback_?requestWentThrough(self.errorCallback_(xhr,status)):requestWentThrough(status)):(status=status.canceled?self.appDelete_?appDeleted():canceled():new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED,\"Max retry time for operation exceeded, please try again.\"),requestWentThrough(status))}var self=this;this.canceled_?backoffDone(!1,new RequestEndStatus(!1,null,!0)):this.backoffId_=start(doTheRequest,backoffDone,this.timeout_)};NetworkRequest.prototype.getPromise=function(){return this.promise_};\nNetworkRequest.prototype.cancel=function(appDelete){this.canceled_=!0;this.appDelete_=appDelete||!1;null!==this.backoffId_&&(0,this.backoffId_)(!1);null!==this.pendingXhr_&&this.pendingXhr_.abort()};NetworkRequest.prototype.isRetryStatusCode_=function(status){var isFiveHundredCode=500<=status&&600>status,isExtraRetryCode=-1!==[408,429].indexOf(status);status=-1!==this.additionalRetryCodes_.indexOf(status);return isFiveHundredCode||isExtraRetryCode||status};return NetworkRequest}(),RequestEndStatus=\nfunction(){return function(wasSuccessCode,xhr,canceled){this.wasSuccessCode=wasSuccessCode;this.xhr=xhr;this.canceled=!!canceled}}(),StorageService=function(){function StorageService(app,authProvider,pool,url){var _a;this.appId_=this.bucket_=null;this.deleted_=!1;this.app_=app;this.authProvider_=authProvider;this.maxOperationRetryTime_=12E4;this.maxUploadRetryTime_=6E5;this.requests_=new Set;this.pool_=pool;this.bucket_=null!=url?Location$jscomp$0.makeFromBucketSpec(url):StorageService.extractBucket_(null===\n(_a=this.app_)||void 0===_a?void 0:_a.options);this.internals_=new ServiceInternals(this)}StorageService.extractBucket_=function(config){config=null===config||void 0===config?void 0:config.storageBucket;return null==config?null:Location$jscomp$0.makeFromBucketSpec(config)};StorageService.prototype.getAuthToken=function(){return tslib.__awaiter(this,void 0,void 0,function(){var auth,tokenData;return tslib.__generator(this,function(_a){switch(_a.label){case 0:return(auth=this.authProvider_.getImmediate({optional:!0}))?\n[4,auth.getToken()]:[3,2];case 1:tokenData=_a.sent();if(null!==tokenData)return[2,tokenData.accessToken];_a.label=2;case 2:return[2,null]}})})};StorageService.prototype.deleteApp=function(){this.deleted_=!0;this.app_=null;this.requests_.forEach(function(request){return request.cancel()});this.requests_.clear()};StorageService.prototype.makeStorageReference=function(loc){return new Reference(this,loc)};StorageService.prototype.makeRequest=function(requestInfo,authToken){var _this=this;if(this.deleted_)return new FailRequest(appDeleted());\nvar request_1=makeRequest(requestInfo,this.appId_,authToken,this.pool_);this.requests_.add(request_1);request_1.getPromise().then(function(){return _this.requests_.delete(request_1)},function(){return _this.requests_.delete(request_1)});return request_1};StorageService.prototype.ref=function(path$jscomp$0){validate(\"ref\",[stringSpec(function(path){if(\"string\"!==typeof path)throw\"Path is not a string.\";if(/^[A-Za-z]+:\\/\\//.test(path))throw\"Expected child path but got a URL, use refFromURL instead.\";\n},!0)],arguments);if(null==this.bucket_)throw Error(\"No Storage Bucket defined in Firebase Options.\");var ref=new Reference(this,this.bucket_);return null!=path$jscomp$0?ref.child(path$jscomp$0):ref};StorageService.prototype.refFromURL=function(url){validate(\"refFromURL\",[stringSpec(function(p){if(\"string\"!==typeof p)throw\"Path is not a string.\";if(!/^[A-Za-z]+:\\/\\//.test(p))throw\"Expected full URL but got a child path, use ref instead.\";try{Location$jscomp$0.makeFromUrl(p)}catch(e){throw\"Expected valid full URL but got an invalid one.\";\n}},!1)],arguments);return new Reference(this,url)};Object.defineProperty(StorageService.prototype,\"maxUploadRetryTime\",{get:function(){return this.maxUploadRetryTime_},enumerable:!1,configurable:!0});StorageService.prototype.setMaxUploadRetryTime=function(time){validate(\"setMaxUploadRetryTime\",[nonNegativeNumberSpec()],arguments);this.maxUploadRetryTime_=time};Object.defineProperty(StorageService.prototype,\"maxOperationRetryTime\",{get:function(){return this.maxOperationRetryTime_},enumerable:!1,configurable:!0});\nStorageService.prototype.setMaxOperationRetryTime=function(time){validate(\"setMaxOperationRetryTime\",[nonNegativeNumberSpec()],arguments);this.maxOperationRetryTime_=time};Object.defineProperty(StorageService.prototype,\"app\",{get:function(){return this.app_},enumerable:!1,configurable:!0});Object.defineProperty(StorageService.prototype,\"INTERNAL\",{get:function(){return this.internals_},enumerable:!1,configurable:!0});return StorageService}(),ServiceInternals=function(){function ServiceInternals(service){this.service_=\nservice}ServiceInternals.prototype.delete=function(){this.service_.deleteApp();return Promise.resolve()};return ServiceInternals}();registerStorage(firebase__default[\"default\"]);exports.registerStorage=registerStorage}","~:source","shadow$provide[\"module$node_modules$$firebase$storage$dist$index_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar firebase = require('@firebase/app');\nvar tslib = require('tslib');\nvar component = require('@firebase/component');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FirebaseStorageError = /** @class */ (function () {\r\n    function FirebaseStorageError(code, message) {\r\n        this.code_ = prependCode(code);\r\n        this.message_ = 'Firebase Storage: ' + message;\r\n        this.serverResponse_ = null;\r\n        this.name_ = 'FirebaseError';\r\n    }\r\n    FirebaseStorageError.prototype.codeProp = function () {\r\n        return this.code;\r\n    };\r\n    FirebaseStorageError.prototype.codeEquals = function (code) {\r\n        return prependCode(code) === this.codeProp();\r\n    };\r\n    FirebaseStorageError.prototype.serverResponseProp = function () {\r\n        return this.serverResponse_;\r\n    };\r\n    FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\r\n        this.serverResponse_ = serverResponse;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\r\n        get: function () {\r\n            return this.name_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\r\n        get: function () {\r\n            return this.code_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\r\n        get: function () {\r\n            if (this.serverResponse_) {\r\n                return this.message_ + '\\n' + this.serverResponse_;\r\n            }\r\n            else {\r\n                return this.message_;\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        get: function () {\r\n            return this.serverResponse_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}());\r\nvar Code = {\r\n    // Shared between all platforms\r\n    UNKNOWN: 'unknown',\r\n    OBJECT_NOT_FOUND: 'object-not-found',\r\n    BUCKET_NOT_FOUND: 'bucket-not-found',\r\n    PROJECT_NOT_FOUND: 'project-not-found',\r\n    QUOTA_EXCEEDED: 'quota-exceeded',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    UNAUTHORIZED: 'unauthorized',\r\n    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\r\n    INVALID_CHECKSUM: 'invalid-checksum',\r\n    CANCELED: 'canceled',\r\n    // JS specific\r\n    INVALID_EVENT_NAME: 'invalid-event-name',\r\n    INVALID_URL: 'invalid-url',\r\n    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\r\n    NO_DEFAULT_BUCKET: 'no-default-bucket',\r\n    CANNOT_SLICE_BLOB: 'cannot-slice-blob',\r\n    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\r\n    NO_DOWNLOAD_URL: 'no-download-url',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\r\n    APP_DELETED: 'app-deleted',\r\n    INVALID_ROOT_OPERATION: 'invalid-root-operation',\r\n    INVALID_FORMAT: 'invalid-format',\r\n    INTERNAL_ERROR: 'internal-error'\r\n};\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new FirebaseStorageError(Code.UNKNOWN, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\r\n}\r\nfunction unauthorized(path) {\r\n    return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(index, fnName, message) {\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\r\n}\r\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\r\n    var countPart;\r\n    var plural;\r\n    if (argMin === argMax) {\r\n        countPart = argMin;\r\n        plural = argMin === 1 ? 'argument' : 'arguments';\r\n    }\r\n    else {\r\n        countPart = 'between ' + argMin + ' and ' + argMax;\r\n        plural = 'arguments';\r\n    }\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' +\r\n        fnName +\r\n        '`: Expected ' +\r\n        countPart +\r\n        ' ' +\r\n        plural +\r\n        ', received ' +\r\n        real +\r\n        '.');\r\n}\r\nfunction appDeleted() {\r\n    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StringFormat = {\r\n    RAW: 'raw',\r\n    BASE64: 'base64',\r\n    BASE64URL: 'base64url',\r\n    DATA_URL: 'data_url'\r\n};\r\nfunction formatValidator(stringFormat) {\r\n    switch (stringFormat) {\r\n        case StringFormat.RAW:\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n        case StringFormat.DATA_URL:\r\n            return;\r\n        default:\r\n            throw ('Expected one of the event types: [' +\r\n                StringFormat.RAW +\r\n                ', ' +\r\n                StringFormat.BASE64 +\r\n                ', ' +\r\n                StringFormat.BASE64URL +\r\n                ', ' +\r\n                StringFormat.DATA_URL +\r\n                '].');\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    var b = [];\r\n    for (var i = 0; i < value.length; i++) {\r\n        var c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = value.indexOf('-') !== -1;\r\n            var hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = value.indexOf('+') !== -1;\r\n            var hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        // do nothing\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = atob(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TaskEvent = {\r\n    /** Triggered whenever the task changes or progress is updated. */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\nvar InternalTaskState = {\r\n    RUNNING: 'running',\r\n    PAUSING: 'pausing',\r\n    PAUSED: 'paused',\r\n    SUCCESS: 'success',\r\n    CANCELING: 'canceling',\r\n    CANCELED: 'canceled',\r\n    ERROR: 'error'\r\n};\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case InternalTaskState.RUNNING:\r\n        case InternalTaskState.PAUSING:\r\n        case InternalTaskState.CANCELING:\r\n            return TaskState.RUNNING;\r\n        case InternalTaskState.PAUSED:\r\n            return TaskState.PAUSED;\r\n        case InternalTaskState.SUCCESS:\r\n            return TaskState.SUCCESS;\r\n        case InternalTaskState.CANCELED:\r\n            return TaskState.CANCELED;\r\n        case InternalTaskState.ERROR:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\r\nfunction isDef(p) {\r\n    return p != null;\r\n}\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isObject(p) {\r\n    return typeof p === 'object';\r\n}\r\nfunction isNonNullObject(p) {\r\n    return isObject(p) && p !== null;\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return isObject(p) && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isInteger(p) {\r\n    return isNumber(p) && Number.isInteger(p);\r\n}\r\nfunction isNumber(p) {\r\n    return typeof p === 'number' || p instanceof Number;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @enum{number}\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\r\nvar NetworkXhrIo = /** @class */ (function () {\r\n    function NetworkXhrIo() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(function (resolve) {\r\n            _this.xhr_.addEventListener('abort', function () {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('error', function () {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('load', function () {\r\n                resolve(_this);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.send = function (url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (isDef(headers)) {\r\n            for (var key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (isDef(body)) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return NetworkXhrIo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar XhrIoPool = /** @class */ (function () {\r\n    function XhrIoPool() {\r\n    }\r\n    XhrIoPool.prototype.createXhrIo = function () {\r\n        return new NetworkXhrIo();\r\n    };\r\n    return XhrIoPool;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw Error(\"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Location.prototype, \"isRoot\", {\r\n        get: function () {\r\n            return this.path.length === 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\r\n        var firebaseStoragePath = '(/([^?#]*).*)?$';\r\n        var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\r\n        var firebaseStorageIndices = { bucket: 1, path: 3 };\r\n        var cloudStorageHost = '(?:storage.googleapis.com|storage.cloud.google.com)';\r\n        var cloudStoragePath = '([^?#]*)';\r\n        var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\r\n        var cloudStorageIndices = { bucket: 1, path: 2 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            {\r\n                regex: firebaseStorageRegExp,\r\n                indices: firebaseStorageIndices,\r\n                postModify: httpModify\r\n            },\r\n            {\r\n                regex: cloudStorageRegExp,\r\n                indices: cloudStorageIndices,\r\n                postModify: httpModify\r\n            }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) { return component.length > 0; })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart) {\r\n    return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    for (var key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\r\n            var nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (isDef(size)) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, service) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return service.makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(service, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, service);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(service, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(service, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    var tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    var encode = encodeURIComponent;\r\n    var tokensList = tokens.split(',');\r\n    var urls = tokensList.map(function (token) {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        var base = makeUrl(urlPart);\r\n        var queryString = makeQueryString({\r\n            alt: 'media',\r\n            token: token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\r\nfunction metadataValidator(p) {\r\n    if (!isObject(p) || !p) {\r\n        throw 'Expected Metadata object.';\r\n    }\r\n    for (var key in p) {\r\n        if (p.hasOwnProperty(key)) {\r\n            var val = p[key];\r\n            if (key === 'customMetadata') {\r\n                if (!isObject(val)) {\r\n                    throw 'Expected object for \\'customMetadata\\' mapping.';\r\n                }\r\n            }\r\n            else {\r\n                if (isNonNullObject(val)) {\r\n                    throw \"Mapping for '\" + key + \"' cannot be an object.\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_RESULTS_KEY = 'maxResults';\r\nvar MAX_MAX_RESULTS = 1000;\r\nvar PAGE_TOKEN_KEY = 'pageToken';\r\nvar PREFIXES_KEY = 'prefixes';\r\nvar ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(service, bucket, resource) {\r\n    var listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            var reference = service.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\r\n            var item = _c[_b];\r\n            var reference = service.makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(service, bucket, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromBackendResponse(service, bucket, resource);\r\n}\r\nfunction listOptionsValidator(p) {\r\n    if (!isObject(p) || !p) {\r\n        throw 'Expected ListOptions object.';\r\n    }\r\n    for (var key in p) {\r\n        if (key === MAX_RESULTS_KEY) {\r\n            if (!isInteger(p[MAX_RESULTS_KEY]) ||\r\n                p[MAX_RESULTS_KEY] <= 0) {\r\n                throw 'Expected maxResults to be a positive number.';\r\n            }\r\n            if (p[MAX_RESULTS_KEY] > 1000) {\r\n                throw \"Expected maxResults to be less than or equal to \" + MAX_MAX_RESULTS + \".\";\r\n            }\r\n        }\r\n        else if (key === PAGE_TOKEN_KEY) {\r\n            if (p[PAGE_TOKEN_KEY] && !isString(p[PAGE_TOKEN_KEY])) {\r\n                throw 'Expected pageToken to be string.';\r\n            }\r\n        }\r\n        else {\r\n            throw 'Unknown option: ' + key;\r\n        }\r\n    }\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(service, bucket) {\r\n    function handler(xhr, text) {\r\n        var listResult = fromResponseString(service, bucket, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            newErr = unauthenticated();\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list(service, location, delimiter, pageToken, maxResults) {\r\n    var urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata(service, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject(service, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'DELETE';\r\n    var timeout = service.maxOperationRetryTime;\r\n    function handler(_xhr, _text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    var metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\nfunction multipartUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str = str + Math.random().toString().slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata_ = metadataForUpload_(location, blob, metadata);\r\n    var metadataString = toResourceString(metadata_, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata_['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    var status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    var urlParams = { name: metadataForUpload['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadataForUpload, mappings);\r\n    var timeout = service.maxUploadRetryTime;\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(service, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        var size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar resumableUploadChunkSize = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status_.total - status_.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status_.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': status_.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status_.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(service, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, error, complete) {\r\n        var asFunctions = isFunction(nextOrObserver) ||\r\n            isDef(error) ||\r\n            isDef(complete);\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error || null;\r\n            this.complete = complete || null;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next || null;\r\n            this.error = observer.error || null;\r\n            this.complete = observer.complete || null;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\nvar UploadTaskSnapshot = /** @class */ (function () {\r\n    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\r\n        this.bytesTransferred = bytesTransferred;\r\n        this.totalBytes = totalBytes;\r\n        this.state = state;\r\n        this.metadata = metadata;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    return UploadTaskSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\r\nfunction validate(name, specs, passed) {\r\n    var minArgs = specs.length;\r\n    var maxArgs = specs.length;\r\n    for (var i = 0; i < specs.length; i++) {\r\n        if (specs[i].optional) {\r\n            minArgs = i;\r\n            break;\r\n        }\r\n    }\r\n    var validLength = minArgs <= passed.length && passed.length <= maxArgs;\r\n    if (!validLength) {\r\n        throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\r\n    }\r\n    for (var i = 0; i < passed.length; i++) {\r\n        try {\r\n            specs[i].validator(passed[i]);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof Error) {\r\n                throw invalidArgument(i, name, e.message);\r\n            }\r\n            else {\r\n                throw invalidArgument(i, name, e);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar ArgSpec = /** @class */ (function () {\r\n    function ArgSpec(validator, optional) {\r\n        var self = this;\r\n        this.validator = function (p) {\r\n            if (self.optional && !isJustDef(p)) {\r\n                return;\r\n            }\r\n            validator(p);\r\n        };\r\n        this.optional = !!optional;\r\n    }\r\n    return ArgSpec;\r\n}());\r\nfunction and_(v1, v2) {\r\n    return function (p) {\r\n        v1(p);\r\n        v2(p);\r\n    };\r\n}\r\nfunction stringSpec(validator, optional) {\r\n    function stringValidator(p) {\r\n        if (!isString(p)) {\r\n            throw 'Expected string.';\r\n        }\r\n    }\r\n    var chainedValidator;\r\n    if (validator) {\r\n        chainedValidator = and_(stringValidator, validator);\r\n    }\r\n    else {\r\n        chainedValidator = stringValidator;\r\n    }\r\n    return new ArgSpec(chainedValidator, optional);\r\n}\r\nfunction uploadDataSpec() {\r\n    function validator(p) {\r\n        var valid = p instanceof Uint8Array ||\r\n            p instanceof ArrayBuffer ||\r\n            (isNativeBlobDefined() && p instanceof Blob);\r\n        if (!valid) {\r\n            throw 'Expected Blob or File.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction metadataSpec(optional) {\r\n    return new ArgSpec(metadataValidator, optional);\r\n}\r\nfunction listOptionSpec(optional) {\r\n    return new ArgSpec(listOptionsValidator, optional);\r\n}\r\nfunction nonNegativeNumberSpec() {\r\n    function validator(p) {\r\n        var valid = isNumber(p) && p >= 0;\r\n        if (!valid) {\r\n            throw 'Expected a number 0 or greater.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction looseObjectSpec(validator, optional) {\r\n    function isLooseObjectValidator(p) {\r\n        var isLooseObject = p === null || (isDef(p) && p instanceof Object);\r\n        if (!isLooseObject) {\r\n            throw 'Expected an Object.';\r\n        }\r\n        if (validator !== undefined && validator !== null) {\r\n            validator(p);\r\n        }\r\n    }\r\n    return new ArgSpec(isLooseObjectValidator, optional);\r\n}\r\nfunction nullFunctionSpec(optional) {\r\n    function validator(p) {\r\n        var valid = p === null || isFunction(p);\r\n        if (!valid) {\r\n            throw 'Expected a Function.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator, optional);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(function () { return f.apply(void 0, argsToForward); });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob The blob to upload.\r\n     */\r\n    function UploadTask(ref, service, location, mappings, blob, metadata) {\r\n        var _this = this;\r\n        if (metadata === void 0) { metadata = null; }\r\n        this.transferred_ = 0;\r\n        this.needToFetchStatus_ = false;\r\n        this.needToFetchMetadata_ = false;\r\n        this.observers_ = [];\r\n        this.error_ = null;\r\n        this.uploadUrl_ = null;\r\n        this.request_ = null;\r\n        this.chunkMultiplier_ = 1;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.ref_ = ref;\r\n        this.service_ = service;\r\n        this.location_ = location;\r\n        this.blob_ = blob;\r\n        this.metadata_ = metadata;\r\n        this.mappings_ = mappings;\r\n        this.resumable_ = this.shouldDoResumable_(this.blob_);\r\n        this.state_ = InternalTaskState.RUNNING;\r\n        this.errorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            _this.chunkMultiplier_ = 1;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.needToFetchStatus_ = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.metadataErrorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this.promise_.then(null, function () { });\r\n    }\r\n    UploadTask.prototype.makeProgressCallback_ = function () {\r\n        var _this = this;\r\n        var sizeBefore = this.transferred_;\r\n        return function (loaded) { return _this.updateProgress_(sizeBefore + loaded); };\r\n    };\r\n    UploadTask.prototype.shouldDoResumable_ = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype.start_ = function () {\r\n        if (this.state_ !== InternalTaskState.RUNNING) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this.request_ !== null) {\r\n            return;\r\n        }\r\n        if (this.resumable_) {\r\n            if (this.uploadUrl_ === null) {\r\n                this.createResumable_();\r\n            }\r\n            else {\r\n                if (this.needToFetchStatus_) {\r\n                    this.fetchStatus_();\r\n                }\r\n                else {\r\n                    if (this.needToFetchMetadata_) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this.fetchMetadata_();\r\n                    }\r\n                    else {\r\n                        this.continueUpload_();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.oneShotUpload_();\r\n        }\r\n    };\r\n    UploadTask.prototype.resolveToken_ = function (callback) {\r\n        var _this = this;\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.service_.getAuthToken().then(function (authToken) {\r\n            switch (_this.state_) {\r\n                case InternalTaskState.RUNNING:\r\n                    callback(authToken);\r\n                    break;\r\n                case InternalTaskState.CANCELING:\r\n                    _this.transition_(InternalTaskState.CANCELED);\r\n                    break;\r\n                case InternalTaskState.PAUSING:\r\n                    _this.transition_(InternalTaskState.PAUSED);\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype.createResumable_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = createResumableUpload(_this.service_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var createRequest = _this.service_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this.request_ = null;\r\n                _this.uploadUrl_ = url;\r\n                _this.needToFetchStatus_ = false;\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.fetchStatus_ = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getResumableUploadStatus(_this.service_, _this.location_, url, _this.blob_);\r\n            var statusRequest = _this.service_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this.request_ = null;\r\n                _this.updateProgress_(status.current);\r\n                _this.needToFetchStatus_ = false;\r\n                if (status.finalized) {\r\n                    _this.needToFetchMetadata_ = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.continueUpload_ = function () {\r\n        var _this = this;\r\n        var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        var status = new ResumableUploadStatus(this.transferred_, this.blob_.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this.location_, _this.service_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\r\n            }\r\n            catch (e) {\r\n                _this.error_ = e;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n                return;\r\n            }\r\n            var uploadRequest = _this.service_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = uploadRequest;\r\n            uploadRequest\r\n                .getPromise()\r\n                .then(function (newStatus) {\r\n                _this.increaseMultiplier_();\r\n                _this.request_ = null;\r\n                _this.updateProgress_(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this.metadata_ = newStatus.metadata;\r\n                    _this.transition_(InternalTaskState.SUCCESS);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.increaseMultiplier_ = function () {\r\n        var currentSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this.chunkMultiplier_ *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype.fetchMetadata_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getMetadata(_this.service_, _this.location_, _this.mappings_);\r\n            var metadataRequest = _this.service_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.metadataErrorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.oneShotUpload_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = multipartUpload(_this.service_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var multipartRequest = _this.service_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.updateProgress_(_this.blob_.size());\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.updateProgress_ = function (transferred) {\r\n        var old = this.transferred_;\r\n        this.transferred_ = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this.transferred_ !== old) {\r\n            this.notifyObservers_();\r\n        }\r\n    };\r\n    UploadTask.prototype.transition_ = function (state) {\r\n        if (this.state_ === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case InternalTaskState.CANCELING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this.state_ === InternalTaskState.PAUSED;\r\n                this.state_ = state;\r\n                if (wasPaused) {\r\n                    this.notifyObservers_();\r\n                    this.start_();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.CANCELED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.error_ = canceled();\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.ERROR:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.SUCCESS:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this.state_) {\r\n            case InternalTaskState.PAUSING:\r\n                this.transition_(InternalTaskState.PAUSED);\r\n                break;\r\n            case InternalTaskState.CANCELING:\r\n                this.transition_(InternalTaskState.CANCELED);\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                this.start_();\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this.state_);\r\n            return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type The type of event to listen for.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        function typeValidator() {\r\n            if (type !== TaskEvent.STATE_CHANGED) {\r\n                throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\r\n            }\r\n        }\r\n        var nextOrObserverMessage = 'Expected a function or an Object with one of ' +\r\n            '`next`, `error`, `complete` properties.';\r\n        var nextValidator = nullFunctionSpec(true).validator;\r\n        var observerValidator = looseObjectSpec(null, true).validator;\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        function nextOrObserverValidator(p) {\r\n            try {\r\n                nextValidator(p);\r\n                return;\r\n            }\r\n            catch (e) { }\r\n            try {\r\n                observerValidator(p);\r\n                var anyDefined = isJustDef(p['next']) ||\r\n                    isJustDef(p['error']) ||\r\n                    isJustDef(p['complete']);\r\n                if (!anyDefined) {\r\n                    throw '';\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n        }\r\n        var specs = [\r\n            stringSpec(typeValidator),\r\n            looseObjectSpec(nextOrObserverValidator, true),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        validate('on', specs, arguments);\r\n        var self = this;\r\n        function makeBinder(specs) {\r\n            function binder(nextOrObserver, error, complete) {\r\n                if (specs !== null) {\r\n                    validate('on', specs, arguments);\r\n                }\r\n                var observer = new Observer(nextOrObserver, error, completed);\r\n                self.addObserver_(observer);\r\n                return function () {\r\n                    self.removeObserver_(observer);\r\n                };\r\n            }\r\n            return binder;\r\n        }\r\n        function binderNextOrObserverValidator(p) {\r\n            if (p === null) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n            nextOrObserverValidator(p);\r\n        }\r\n        var binderSpecs = [\r\n            looseObjectSpec(binderNextOrObserverValidator),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        var typeOnly = !(isJustDef(nextOrObserver) ||\r\n            isJustDef(error) ||\r\n            isJustDef(completed));\r\n        if (typeOnly) {\r\n            return makeBinder(binderSpecs);\r\n        }\r\n        else {\r\n            return makeBinder(null)(nextOrObserver, error, completed);\r\n        }\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this.promise_.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype.addObserver_ = function (observer) {\r\n        this.observers_.push(observer);\r\n        this.notifyObserver_(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype.removeObserver_ = function (observer) {\r\n        var i = this.observers_.indexOf(observer);\r\n        if (i !== -1) {\r\n            this.observers_.splice(i, 1);\r\n        }\r\n    };\r\n    UploadTask.prototype.notifyObservers_ = function () {\r\n        var _this = this;\r\n        this.finishPromise_();\r\n        var observers = this.observers_.slice();\r\n        observers.forEach(function (observer) {\r\n            _this.notifyObserver_(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype.finishPromise_ = function () {\r\n        if (this.resolve_ !== null) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this.state_)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this.resolve_.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this.reject_;\r\n                    async(toCall.bind(null, this.error_))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this.resolve_ = null;\r\n                this.reject_ = null;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype.notifyObserver_ = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this.state_);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        validate('resume', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.PAUSED ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.RUNNING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        validate('pause', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.PAUSING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        validate('cancel', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.CANCELING);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(service, location) {\r\n        this.service = service;\r\n        if (location instanceof Location) {\r\n            this.location = location;\r\n        }\r\n        else {\r\n            this.location = Location.makeFromUrl(location);\r\n        }\r\n    }\r\n    /**\r\n     * @return The URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        validate('toString', [], arguments);\r\n        return 'gs://' + this.location.bucket + '/' + this.location.path;\r\n    };\r\n    Reference.prototype.newRef = function (service, location) {\r\n        return new Reference(service, location);\r\n    };\r\n    Reference.prototype.mappings = function () {\r\n        return getMappings();\r\n    };\r\n    /**\r\n     * @return A reference to the object obtained by\r\n     *     appending childPath, removing any duplicate, beginning, or trailing\r\n     *     slashes.\r\n     */\r\n    Reference.prototype.child = function (childPath) {\r\n        validate('child', [stringSpec()], arguments);\r\n        var newPath = child(this.location.path, childPath);\r\n        var location = new Location(this.location.bucket, newPath);\r\n        return this.newRef(this.service, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        /**\r\n         * @return A reference to the parent of the\r\n         *     current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var newPath = parent(this.location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this.location.bucket, newPath);\r\n            return this.newRef(this.service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * @return An reference to the root of this\r\n         *     object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this.location.bucket, '');\r\n            return this.newRef(this.service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this.location.bucket;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this.location.path;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        get: function () {\r\n            return lastComponent(this.location.path);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        get: function () {\r\n            return this.service;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data The blob to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.put = function (data, metadata) {\r\n        if (metadata === void 0) { metadata = null; }\r\n        validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\r\n        this.throwIfRoot_('put');\r\n        return new UploadTask(this, this.service, this.location, this.mappings(), new FbsBlob(data), metadata);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param value The string to upload.\r\n     * @param format The format of the string to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.putString = function (value, format, metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);\r\n        this.throwIfRoot_('putString');\r\n        var data = dataFromString(format, value);\r\n        var metadataClone = Object.assign({}, metadata);\r\n        if (!isDef(metadataClone['contentType']) &&\r\n            isDef(data.contentType)) {\r\n            metadataClone['contentType'] = data.contentType;\r\n        }\r\n        return new UploadTask(this, this.service, this.location, this.mappings(), new FbsBlob(data.data, true), metadataClone);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @return A promise that resolves if the deletion succeeds.\r\n     */\r\n    Reference.prototype.delete = function () {\r\n        var _this = this;\r\n        validate('delete', [], arguments);\r\n        this.throwIfRoot_('delete');\r\n        return this.service.getAuthToken().then(function (authToken) {\r\n            var requestInfo = deleteObject(_this.service, _this.location);\r\n            return _this.service.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * List all items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * This is a helper method for calling list() repeatedly until there are\r\n     * no more results. The default pagination size is 1000.\r\n     *\r\n     * Note: The results may not be consistent if objects are changed while this\r\n     * operation is running.\r\n     *\r\n     * Warning: listAll may potentially consume too many resources if there are\r\n     * too many results.\r\n     *\r\n     * @return A Promise that resolves with all the items and prefixes under\r\n     *      the current storage reference. `prefixes` contains references to\r\n     *      sub-directories and `items` contains references to objects in this\r\n     *      folder. `nextPageToken` is never returned.\r\n     */\r\n    Reference.prototype.listAll = function () {\r\n        validate('listAll', [], arguments);\r\n        var accumulator = {\r\n            prefixes: [],\r\n            items: []\r\n        };\r\n        return this.listAllHelper(accumulator).then(function () { return accumulator; });\r\n    };\r\n    Reference.prototype.listAllHelper = function (accumulator, pageToken) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var opt, nextPage;\r\n            var _a, _b;\r\n            return tslib.__generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        opt = {\r\n                            // maxResults is 1000 by default.\r\n                            pageToken: pageToken\r\n                        };\r\n                        return [4 /*yield*/, this.list(opt)];\r\n                    case 1:\r\n                        nextPage = _c.sent();\r\n                        (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\r\n                        (_b = accumulator.items).push.apply(_b, nextPage.items);\r\n                        if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this.listAllHelper(accumulator, nextPage.nextPageToken)];\r\n                    case 2:\r\n                        _c.sent();\r\n                        _c.label = 3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * List items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * List API is only available for Firebase Rules Version 2.\r\n     *\r\n     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n     * delimited folder structure.\r\n     * Refer to GCS's List API if you want to learn more.\r\n     *\r\n     * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n     * support objects whose paths end with \"/\" or contain two consecutive\r\n     * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n     * list() may fail if there are too many unsupported objects in the bucket.\r\n     *\r\n     * @param options See ListOptions for details.\r\n     * @return A Promise that resolves with the items and prefixes.\r\n     *      `prefixes` contains references to sub-folders and `items`\r\n     *      contains references to objects in this folder. `nextPageToken`\r\n     *      can be used to get the rest of the results.\r\n     */\r\n    Reference.prototype.list = function (options) {\r\n        validate('list', [listOptionSpec(true)], arguments);\r\n        var self = this;\r\n        return this.service.getAuthToken().then(function (authToken) {\r\n            var op = options || {};\r\n            var requestInfo = list(self.service, self.location, \r\n            /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n            return self.service.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     *     A promise that resolves with the metadata for this object. If this\r\n     *     object doesn't exist or metadata cannot be retreived, the promise is\r\n     *     rejected.\r\n     */\r\n    Reference.prototype.getMetadata = function () {\r\n        var _this = this;\r\n        validate('getMetadata', [], arguments);\r\n        this.throwIfRoot_('getMetadata');\r\n        return this.service.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getMetadata(_this.service, _this.location, _this.mappings());\r\n            return _this.service.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata The new metadata for the object.\r\n     *     Only values that have been explicitly set will be changed. Explicitly\r\n     *     setting a value to null will remove the metadata.\r\n     * @return A promise that resolves\r\n     *     with the new metadata for this object.\r\n     *     @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    Reference.prototype.updateMetadata = function (metadata) {\r\n        var _this = this;\r\n        validate('updateMetadata', [metadataSpec()], arguments);\r\n        this.throwIfRoot_('updateMetadata');\r\n        return this.service.getAuthToken().then(function (authToken) {\r\n            var requestInfo = updateMetadata(_this.service, _this.location, metadata, _this.mappings());\r\n            return _this.service.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * @return A promise that resolves with the download\r\n     *     URL for this object.\r\n     */\r\n    Reference.prototype.getDownloadURL = function () {\r\n        var _this = this;\r\n        validate('getDownloadURL', [], arguments);\r\n        this.throwIfRoot_('getDownloadURL');\r\n        return this.service.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getDownloadUrl(_this.service, _this.location, _this.mappings());\r\n            return _this.service\r\n                .makeRequest(requestInfo, authToken)\r\n                .getPromise()\r\n                .then(function (url) {\r\n                if (url === null) {\r\n                    throw noDownloadURL();\r\n                }\r\n                return url;\r\n            });\r\n        });\r\n    };\r\n    Reference.prototype.throwIfRoot_ = function (name) {\r\n        if (this.location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (_appDelete) {\r\n    };\r\n    return FailRequest;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ncallback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\r\n    // the no-explicit-any rule when ESlint releases it.\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    function triggerCallback() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\r\n    // the no-explicit-any rule when ESlint releases it.\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    function handler(success) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.call.apply(triggerCallback, tslib.__spreadArrays([null, success], args));\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.call.apply(triggerCallback, tslib.__spreadArrays([null, success], args));\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n * @template T\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        var _this = this;\r\n        this.pendingXhr_ = null;\r\n        this.backoffId_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled) {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var xhr = self.pool_.createXhrIo();\r\n            self.pendingXhr_ = xhr;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                xhr.addUploadProgressListener(progressListener);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            xhr\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function (xhr) {\r\n                if (self.progressCallback_ !== null) {\r\n                    xhr.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingXhr_ = null;\r\n                xhr = xhr;\r\n                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = xhr.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = self.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve = self.resolve_;\r\n            var reject = self.reject_;\r\n            var xhr = status.xhr;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(xhr, xhr.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (xhr !== null) {\r\n                    var err = unknown();\r\n                    err.setServerResponseProp(xhr.getResponseText());\r\n                    if (self.errorCallback_) {\r\n                        reject(self.errorCallback_(xhr, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_ ? appDeleted() : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingXhr_ !== null) {\r\n            this.pendingXhr_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n        var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, xhr, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.xhr = xhr;\r\n        this.canceled = !!canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers) {\r\n    var version = typeof firebase__default['default'] !== 'undefined' ? firebase__default['default'].SDK_VERSION : 'AppManager';\r\n    headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\r\n}\r\nfunction addGmpidHeader_(headers, appId) {\r\n    if (appId) {\r\n        headers['X-Firebase-GMPID'] = appId;\r\n    }\r\n}\r\n/**\r\n * @template T\r\n */\r\nfunction makeRequest(requestInfo, appId, authToken, pool) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = Object.assign({}, requestInfo.headers);\r\n    addGmpidHeader_(headers, appId);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\r\nvar StorageService = /** @class */ (function () {\r\n    function StorageService(app, authProvider, pool, url) {\r\n        var _a;\r\n        this.bucket_ = null;\r\n        this.appId_ = null;\r\n        this.deleted_ = false;\r\n        this.app_ = app;\r\n        this.authProvider_ = authProvider;\r\n        this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this.requests_ = new Set();\r\n        this.pool_ = pool;\r\n        if (url != null) {\r\n            this.bucket_ = Location.makeFromBucketSpec(url);\r\n        }\r\n        else {\r\n            this.bucket_ = StorageService.extractBucket_((_a = this.app_) === null || _a === void 0 ? void 0 : _a.options);\r\n        }\r\n        this.internals_ = new ServiceInternals(this);\r\n    }\r\n    StorageService.extractBucket_ = function (config) {\r\n        var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\r\n        if (bucketString == null) {\r\n            return null;\r\n        }\r\n        return Location.makeFromBucketSpec(bucketString);\r\n    };\r\n    StorageService.prototype.getAuthToken = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var auth, tokenData;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        auth = this.authProvider_.getImmediate({ optional: true });\r\n                        if (!auth) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, auth.getToken()];\r\n                    case 1:\r\n                        tokenData = _a.sent();\r\n                        if (tokenData !== null) {\r\n                            return [2 /*return*/, tokenData.accessToken];\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    StorageService.prototype.deleteApp = function () {\r\n        this.deleted_ = true;\r\n        this.app_ = null;\r\n        this.requests_.forEach(function (request) { return request.cancel(); });\r\n        this.requests_.clear();\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n     * at the given Location.\r\n     * @param loc The Location.\r\n     * @return A firebaseStorage.Reference.\r\n     */\r\n    StorageService.prototype.makeStorageReference = function (loc) {\r\n        return new Reference(this, loc);\r\n    };\r\n    StorageService.prototype.makeRequest = function (requestInfo, authToken) {\r\n        var _this = this;\r\n        if (!this.deleted_) {\r\n            var request_1 = makeRequest(requestInfo, this.appId_, authToken, this.pool_);\r\n            this.requests_.add(request_1);\r\n            // Request removes itself from set when complete.\r\n            request_1.getPromise().then(function () { return _this.requests_.delete(request_1); }, function () { return _this.requests_.delete(request_1); });\r\n            return request_1;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    StorageService.prototype.ref = function (path) {\r\n        function validator(path) {\r\n            if (typeof path !== 'string') {\r\n                throw 'Path is not a string.';\r\n            }\r\n            if (/^[A-Za-z]+:\\/\\//.test(path)) {\r\n                throw 'Expected child path but got a URL, use refFromURL instead.';\r\n            }\r\n        }\r\n        validate('ref', [stringSpec(validator, true)], arguments);\r\n        if (this.bucket_ == null) {\r\n            throw new Error('No Storage Bucket defined in Firebase Options.');\r\n        }\r\n        var ref = new Reference(this, this.bucket_);\r\n        if (path != null) {\r\n            return ref.child(path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    StorageService.prototype.refFromURL = function (url) {\r\n        function validator(p) {\r\n            if (typeof p !== 'string') {\r\n                throw 'Path is not a string.';\r\n            }\r\n            if (!/^[A-Za-z]+:\\/\\//.test(p)) {\r\n                throw 'Expected full URL but got a child path, use ref instead.';\r\n            }\r\n            try {\r\n                Location.makeFromUrl(p);\r\n            }\r\n            catch (e) {\r\n                throw 'Expected valid full URL but got an invalid one.';\r\n            }\r\n        }\r\n        validate('refFromURL', [stringSpec(validator, false)], arguments);\r\n        return new Reference(this, url);\r\n    };\r\n    Object.defineProperty(StorageService.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this.maxUploadRetryTime_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    StorageService.prototype.setMaxUploadRetryTime = function (time) {\r\n        validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.maxUploadRetryTime_ = time;\r\n    };\r\n    Object.defineProperty(StorageService.prototype, \"maxOperationRetryTime\", {\r\n        get: function () {\r\n            return this.maxOperationRetryTime_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    StorageService.prototype.setMaxOperationRetryTime = function (time) {\r\n        validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.maxOperationRetryTime_ = time;\r\n    };\r\n    Object.defineProperty(StorageService.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StorageService.prototype, \"INTERNAL\", {\r\n        get: function () {\r\n            return this.internals_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return StorageService;\r\n}());\r\n/**\r\n * @struct\r\n */\r\nvar ServiceInternals = /** @class */ (function () {\r\n    function ServiceInternals(service) {\r\n        this.service_ = service;\r\n    }\r\n    /**\r\n     * Called when the associated app is deleted.\r\n     */\r\n    ServiceInternals.prototype.delete = function () {\r\n        this.service_.deleteApp();\r\n        return Promise.resolve();\r\n    };\r\n    return ServiceInternals;\r\n}());\n\nvar name = \"@firebase/storage\";\nvar version = \"0.3.43\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(container, url) {\r\n    // Dependencies\r\n    var app = container.getProvider('app').getImmediate();\r\n    var authProvider = container.getProvider('auth-internal');\r\n    return new StorageService(app, authProvider, new XhrIoPool(), url);\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: StorageService,\r\n        Reference: Reference\r\n    };\r\n    instance.INTERNAL.registerComponent(new component.Component(STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterStorage(firebase__default['default']);\n\nexports.registerStorage = registerStorage;\n//# sourceMappingURL=index.cjs.js.map\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$tslib$tslib","~$shadow.js","~$module$node_modules$$firebase$component$dist$index_cjs","~$module$node_modules$$firebase$app$dist$index_cjs"]],"~:properties",["^5",["serverResponse_","removeObserver_","total","state_","BASE64","needToFetchStatus_","updateProgress_","metadataErrorHandler_","TaskState","progressCallback","SUCCESS","message","setServerResponseProp","registerStorage","deleted_","resumable_","finalized","pageToken","codeProp","SERVER_FILE_WRONG_SIZE","CANCELED","Storage","UNKNOWN","updateMetadata","maxUploadRetryTime","ref_","xhr_","handler","BUCKET_NOT_FOUND","mappings","list","url","bucket_","next","token","optional","body","appDelete_","prefixes","makeProgressCallback_","INVALID_CHECKSUM","server","RETRY_LIMIT_EXCEEDED","cancel","PAUSING","internals_","path_","NO_DOWNLOAD_URL","CANNOT_SLICE_BLOB","delete","getStatus","successCodes_","callback_","addObserver_","put","getResponseText","TaskEvent","child","send","backoffId_","increaseMultiplier_","APP_DELETED","label","method","maxOperationRetryTime_","bucket","size_","INVALID_ROOT_OPERATION","uploadUrl_","parent","INVALID_URL","service_","__esModule","storage","complete","getResponseHeader","path","INVALID_ARGUMENT","regex","location_","error","successCodes","type_","fetchMetadata_","totalBytes","xform","UNAUTHORIZED","toString","method_","fullPath","snapshot","root","catch","authProvider_","observers_","maxOperationRetryTime","rest","base64","makeFromUrl","refFromURL","createXhrIo","notifyObserver_","code_","getBlob","codeEquals","body_","putString","DATA_URL","getDownloadURL","ERROR","serverResponseProp","name","listAllHelper","configurable","additionalRetryCodes_","value","items","resolveToken_","listAll","location","message_","enumerable","INVALID_ARGUMENT_COUNT","fetchStatus_","makeRequest","progressCallback_","STATE_CHANGED","continueUpload_","INTERNAL_ERROR","UNAUTHENTICATED","throwIfRoot_","timeout","pause","sent_","alt","error_","pool_","name_","finishPromise_","url_","writable","transferred_","on","addUploadProgressListener","current","removeUploadProgressListener","headers_","INVALID_EVENT_NAME","PROJECT_NOT_FOUND","maxUploadRetryTime_","mappings_","metadata","deleteApp","createResumable_","task","pendingXhr_","BASE64URL","fullServerUrl","setMaxOperationRetryTime","makeStorageReference","isRetryStatusCode_","promise_","errorHandler","type","StringFormat","shouldDoResumable_","NO_DEFAULT_BUCKET","app_","app","INTERNAL","reject_","getErrorCode","additionalRetryCodes","notifyObservers_","nextPageToken","errorHandler_","INVALID_FORMAT","extractBucket_","needToFetchMetadata_","state","xhr","errorCode_","ref","validator","OBJECT_NOT_FOUND","metadata_","bucketOnlyServerUrl","slice","completeTransitions_","RAW","CANCELING","data_","timeout_","uploadData","contentType","bytesTransferred","resolve_","appId_","setMaxUploadRetryTime","serverResponse","local","abort","getMetadata","then","QUOTA_EXCEEDED","postModify","size","service","sendPromise_","canceled_","start_","requests_","urlParams","chunkMultiplier_","errorCallback_","oneShotUpload_","transition_","getAuthToken","PAUSED","wasSuccessCode","data","get","Reference","code","isRoot","blob_","getPromise","RUNNING","request_","newRef","makeFromBucketSpec","indices","resume","canceled","headers","INVALID_DEFAULT_BUCKET"]],"~:compiled-at",1627829695418,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$firebase$storage$dist$index_cjs.js\",\n\"lineCount\":105,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@firebase/storage/dist/index.cjs.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$firebase$storage$dist$index_cjs\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nObject.defineProperty(exports, '__esModule', { value: true });\\n\\nvar firebase = require('@firebase/app');\\nvar tslib = require('tslib');\\nvar component = require('@firebase/component');\\n\\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\\n\\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * @fileoverview Constants used in the Firebase Storage library.\\r\\n */\\r\\n/**\\r\\n * Domain name for firebase storage.\\r\\n */\\r\\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\\r\\n/**\\r\\n * The key in Firebase config json for the storage bucket.\\r\\n */\\r\\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\\r\\n/**\\r\\n * 2 minutes\\r\\n *\\r\\n * The timeout for all operations except upload.\\r\\n */\\r\\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\\r\\n/**\\r\\n * 10 minutes\\r\\n *\\r\\n * The timeout for upload.\\r\\n */\\r\\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar FirebaseStorageError = /** @class */ (function () {\\r\\n    function FirebaseStorageError(code, message) {\\r\\n        this.code_ = prependCode(code);\\r\\n        this.message_ = 'Firebase Storage: ' + message;\\r\\n        this.serverResponse_ = null;\\r\\n        this.name_ = 'FirebaseError';\\r\\n    }\\r\\n    FirebaseStorageError.prototype.codeProp = function () {\\r\\n        return this.code;\\r\\n    };\\r\\n    FirebaseStorageError.prototype.codeEquals = function (code) {\\r\\n        return prependCode(code) === this.codeProp();\\r\\n    };\\r\\n    FirebaseStorageError.prototype.serverResponseProp = function () {\\r\\n        return this.serverResponse_;\\r\\n    };\\r\\n    FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\\r\\n        this.serverResponse_ = serverResponse;\\r\\n    };\\r\\n    Object.defineProperty(FirebaseStorageError.prototype, \\\"name\\\", {\\r\\n        get: function () {\\r\\n            return this.name_;\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(FirebaseStorageError.prototype, \\\"code\\\", {\\r\\n        get: function () {\\r\\n            return this.code_;\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(FirebaseStorageError.prototype, \\\"message\\\", {\\r\\n        get: function () {\\r\\n            if (this.serverResponse_) {\\r\\n                return this.message_ + '\\\\n' + this.serverResponse_;\\r\\n            }\\r\\n            else {\\r\\n                return this.message_;\\r\\n            }\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(FirebaseStorageError.prototype, \\\"serverResponse\\\", {\\r\\n        get: function () {\\r\\n            return this.serverResponse_;\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    return FirebaseStorageError;\\r\\n}());\\r\\nvar Code = {\\r\\n    // Shared between all platforms\\r\\n    UNKNOWN: 'unknown',\\r\\n    OBJECT_NOT_FOUND: 'object-not-found',\\r\\n    BUCKET_NOT_FOUND: 'bucket-not-found',\\r\\n    PROJECT_NOT_FOUND: 'project-not-found',\\r\\n    QUOTA_EXCEEDED: 'quota-exceeded',\\r\\n    UNAUTHENTICATED: 'unauthenticated',\\r\\n    UNAUTHORIZED: 'unauthorized',\\r\\n    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\\r\\n    INVALID_CHECKSUM: 'invalid-checksum',\\r\\n    CANCELED: 'canceled',\\r\\n    // JS specific\\r\\n    INVALID_EVENT_NAME: 'invalid-event-name',\\r\\n    INVALID_URL: 'invalid-url',\\r\\n    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\\r\\n    NO_DEFAULT_BUCKET: 'no-default-bucket',\\r\\n    CANNOT_SLICE_BLOB: 'cannot-slice-blob',\\r\\n    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\\r\\n    NO_DOWNLOAD_URL: 'no-download-url',\\r\\n    INVALID_ARGUMENT: 'invalid-argument',\\r\\n    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\\r\\n    APP_DELETED: 'app-deleted',\\r\\n    INVALID_ROOT_OPERATION: 'invalid-root-operation',\\r\\n    INVALID_FORMAT: 'invalid-format',\\r\\n    INTERNAL_ERROR: 'internal-error'\\r\\n};\\r\\nfunction prependCode(code) {\\r\\n    return 'storage/' + code;\\r\\n}\\r\\nfunction unknown() {\\r\\n    var message = 'An unknown error occurred, please check the error payload for ' +\\r\\n        'server response.';\\r\\n    return new FirebaseStorageError(Code.UNKNOWN, message);\\r\\n}\\r\\nfunction objectNotFound(path) {\\r\\n    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \\\"Object '\\\" + path + \\\"' does not exist.\\\");\\r\\n}\\r\\nfunction quotaExceeded(bucket) {\\r\\n    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \\\"Quota for bucket '\\\" +\\r\\n        bucket +\\r\\n        \\\"' exceeded, please view quota on \\\" +\\r\\n        'https://firebase.google.com/pricing/.');\\r\\n}\\r\\nfunction unauthenticated() {\\r\\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\\r\\n        'Authentication and try again.';\\r\\n    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\\r\\n}\\r\\nfunction unauthorized(path) {\\r\\n    return new FirebaseStorageError(Code.UNAUTHORIZED, \\\"User does not have permission to access '\\\" + path + \\\"'.\\\");\\r\\n}\\r\\nfunction retryLimitExceeded() {\\r\\n    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\\r\\n}\\r\\nfunction canceled() {\\r\\n    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\\r\\n}\\r\\nfunction invalidUrl(url) {\\r\\n    return new FirebaseStorageError(Code.INVALID_URL, \\\"Invalid URL '\\\" + url + \\\"'.\\\");\\r\\n}\\r\\nfunction invalidDefaultBucket(bucket) {\\r\\n    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \\\"Invalid default bucket '\\\" + bucket + \\\"'.\\\");\\r\\n}\\r\\nfunction cannotSliceBlob() {\\r\\n    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\\r\\n}\\r\\nfunction serverFileWrongSize() {\\r\\n    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\\r\\n}\\r\\nfunction noDownloadURL() {\\r\\n    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\\r\\n}\\r\\nfunction invalidArgument(index, fnName, message) {\\r\\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\\r\\n}\\r\\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\\r\\n    var countPart;\\r\\n    var plural;\\r\\n    if (argMin === argMax) {\\r\\n        countPart = argMin;\\r\\n        plural = argMin === 1 ? 'argument' : 'arguments';\\r\\n    }\\r\\n    else {\\r\\n        countPart = 'between ' + argMin + ' and ' + argMax;\\r\\n        plural = 'arguments';\\r\\n    }\\r\\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' +\\r\\n        fnName +\\r\\n        '`: Expected ' +\\r\\n        countPart +\\r\\n        ' ' +\\r\\n        plural +\\r\\n        ', received ' +\\r\\n        real +\\r\\n        '.');\\r\\n}\\r\\nfunction appDeleted() {\\r\\n    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\\r\\n}\\r\\n/**\\r\\n * @param name The name of the operation that was invalid.\\r\\n */\\r\\nfunction invalidRootOperation(name) {\\r\\n    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \\\"The operation '\\\" +\\r\\n        name +\\r\\n        \\\"' cannot be performed on a root reference, create a non-root \\\" +\\r\\n        \\\"reference using child, such as .child('file.png').\\\");\\r\\n}\\r\\n/**\\r\\n * @param format The format that was not valid.\\r\\n * @param message A message describing the format violation.\\r\\n */\\r\\nfunction invalidFormat(format, message) {\\r\\n    return new FirebaseStorageError(Code.INVALID_FORMAT, \\\"String does not match format '\\\" + format + \\\"': \\\" + message);\\r\\n}\\r\\n/**\\r\\n * @param message A message describing the internal error.\\r\\n */\\r\\nfunction internalError(message) {\\r\\n    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar StringFormat = {\\r\\n    RAW: 'raw',\\r\\n    BASE64: 'base64',\\r\\n    BASE64URL: 'base64url',\\r\\n    DATA_URL: 'data_url'\\r\\n};\\r\\nfunction formatValidator(stringFormat) {\\r\\n    switch (stringFormat) {\\r\\n        case StringFormat.RAW:\\r\\n        case StringFormat.BASE64:\\r\\n        case StringFormat.BASE64URL:\\r\\n        case StringFormat.DATA_URL:\\r\\n            return;\\r\\n        default:\\r\\n            throw ('Expected one of the event types: [' +\\r\\n                StringFormat.RAW +\\r\\n                ', ' +\\r\\n                StringFormat.BASE64 +\\r\\n                ', ' +\\r\\n                StringFormat.BASE64URL +\\r\\n                ', ' +\\r\\n                StringFormat.DATA_URL +\\r\\n                '].');\\r\\n    }\\r\\n}\\r\\n/**\\r\\n * @struct\\r\\n */\\r\\nvar StringData = /** @class */ (function () {\\r\\n    function StringData(data, contentType) {\\r\\n        this.data = data;\\r\\n        this.contentType = contentType || null;\\r\\n    }\\r\\n    return StringData;\\r\\n}());\\r\\nfunction dataFromString(format, stringData) {\\r\\n    switch (format) {\\r\\n        case StringFormat.RAW:\\r\\n            return new StringData(utf8Bytes_(stringData));\\r\\n        case StringFormat.BASE64:\\r\\n        case StringFormat.BASE64URL:\\r\\n            return new StringData(base64Bytes_(format, stringData));\\r\\n        case StringFormat.DATA_URL:\\r\\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\\r\\n        // do nothing\\r\\n    }\\r\\n    // assert(false);\\r\\n    throw unknown();\\r\\n}\\r\\nfunction utf8Bytes_(value) {\\r\\n    var b = [];\\r\\n    for (var i = 0; i < value.length; i++) {\\r\\n        var c = value.charCodeAt(i);\\r\\n        if (c <= 127) {\\r\\n            b.push(c);\\r\\n        }\\r\\n        else {\\r\\n            if (c <= 2047) {\\r\\n                b.push(192 | (c >> 6), 128 | (c & 63));\\r\\n            }\\r\\n            else {\\r\\n                if ((c & 64512) === 55296) {\\r\\n                    // The start of a surrogate pair.\\r\\n                    var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\\r\\n                    if (!valid) {\\r\\n                        // The second surrogate wasn't there.\\r\\n                        b.push(239, 191, 189);\\r\\n                    }\\r\\n                    else {\\r\\n                        var hi = c;\\r\\n                        var lo = value.charCodeAt(++i);\\r\\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\\r\\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\\r\\n                    }\\r\\n                }\\r\\n                else {\\r\\n                    if ((c & 64512) === 56320) {\\r\\n                        // Invalid low surrogate.\\r\\n                        b.push(239, 191, 189);\\r\\n                    }\\r\\n                    else {\\r\\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    return new Uint8Array(b);\\r\\n}\\r\\nfunction percentEncodedBytes_(value) {\\r\\n    var decoded;\\r\\n    try {\\r\\n        decoded = decodeURIComponent(value);\\r\\n    }\\r\\n    catch (e) {\\r\\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\\r\\n    }\\r\\n    return utf8Bytes_(decoded);\\r\\n}\\r\\nfunction base64Bytes_(format, value) {\\r\\n    switch (format) {\\r\\n        case StringFormat.BASE64: {\\r\\n            var hasMinus = value.indexOf('-') !== -1;\\r\\n            var hasUnder = value.indexOf('_') !== -1;\\r\\n            if (hasMinus || hasUnder) {\\r\\n                var invalidChar = hasMinus ? '-' : '_';\\r\\n                throw invalidFormat(format, \\\"Invalid character '\\\" +\\r\\n                    invalidChar +\\r\\n                    \\\"' found: is it base64url encoded?\\\");\\r\\n            }\\r\\n            break;\\r\\n        }\\r\\n        case StringFormat.BASE64URL: {\\r\\n            var hasPlus = value.indexOf('+') !== -1;\\r\\n            var hasSlash = value.indexOf('/') !== -1;\\r\\n            if (hasPlus || hasSlash) {\\r\\n                var invalidChar = hasPlus ? '+' : '/';\\r\\n                throw invalidFormat(format, \\\"Invalid character '\\\" + invalidChar + \\\"' found: is it base64 encoded?\\\");\\r\\n            }\\r\\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\\r\\n            break;\\r\\n        }\\r\\n        // do nothing\\r\\n    }\\r\\n    var bytes;\\r\\n    try {\\r\\n        bytes = atob(value);\\r\\n    }\\r\\n    catch (e) {\\r\\n        throw invalidFormat(format, 'Invalid character found');\\r\\n    }\\r\\n    var array = new Uint8Array(bytes.length);\\r\\n    for (var i = 0; i < bytes.length; i++) {\\r\\n        array[i] = bytes.charCodeAt(i);\\r\\n    }\\r\\n    return array;\\r\\n}\\r\\n/**\\r\\n * @struct\\r\\n */\\r\\nvar DataURLParts = /** @class */ (function () {\\r\\n    function DataURLParts(dataURL) {\\r\\n        this.base64 = false;\\r\\n        this.contentType = null;\\r\\n        var matches = dataURL.match(/^data:([^,]+)?,/);\\r\\n        if (matches === null) {\\r\\n            throw invalidFormat(StringFormat.DATA_URL, \\\"Must be formatted 'data:[<mediatype>][;base64],<data>\\\");\\r\\n        }\\r\\n        var middle = matches[1] || null;\\r\\n        if (middle != null) {\\r\\n            this.base64 = endsWith(middle, ';base64');\\r\\n            this.contentType = this.base64\\r\\n                ? middle.substring(0, middle.length - ';base64'.length)\\r\\n                : middle;\\r\\n        }\\r\\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\\r\\n    }\\r\\n    return DataURLParts;\\r\\n}());\\r\\nfunction dataURLBytes_(dataUrl) {\\r\\n    var parts = new DataURLParts(dataUrl);\\r\\n    if (parts.base64) {\\r\\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\\r\\n    }\\r\\n    else {\\r\\n        return percentEncodedBytes_(parts.rest);\\r\\n    }\\r\\n}\\r\\nfunction dataURLContentType_(dataUrl) {\\r\\n    var parts = new DataURLParts(dataUrl);\\r\\n    return parts.contentType;\\r\\n}\\r\\nfunction endsWith(s, end) {\\r\\n    var longEnough = s.length >= end.length;\\r\\n    if (!longEnough) {\\r\\n        return false;\\r\\n    }\\r\\n    return s.substring(s.length - end.length) === end;\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar TaskEvent = {\\r\\n    /** Triggered whenever the task changes or progress is updated. */\\r\\n    STATE_CHANGED: 'state_changed'\\r\\n};\\r\\nvar InternalTaskState = {\\r\\n    RUNNING: 'running',\\r\\n    PAUSING: 'pausing',\\r\\n    PAUSED: 'paused',\\r\\n    SUCCESS: 'success',\\r\\n    CANCELING: 'canceling',\\r\\n    CANCELED: 'canceled',\\r\\n    ERROR: 'error'\\r\\n};\\r\\nvar TaskState = {\\r\\n    /** The task is currently transferring data. */\\r\\n    RUNNING: 'running',\\r\\n    /** The task was paused by the user. */\\r\\n    PAUSED: 'paused',\\r\\n    /** The task completed successfully. */\\r\\n    SUCCESS: 'success',\\r\\n    /** The task was canceled. */\\r\\n    CANCELED: 'canceled',\\r\\n    /** The task failed with an error. */\\r\\n    ERROR: 'error'\\r\\n};\\r\\nfunction taskStateFromInternalTaskState(state) {\\r\\n    switch (state) {\\r\\n        case InternalTaskState.RUNNING:\\r\\n        case InternalTaskState.PAUSING:\\r\\n        case InternalTaskState.CANCELING:\\r\\n            return TaskState.RUNNING;\\r\\n        case InternalTaskState.PAUSED:\\r\\n            return TaskState.PAUSED;\\r\\n        case InternalTaskState.SUCCESS:\\r\\n            return TaskState.SUCCESS;\\r\\n        case InternalTaskState.CANCELED:\\r\\n            return TaskState.CANCELED;\\r\\n        case InternalTaskState.ERROR:\\r\\n            return TaskState.ERROR;\\r\\n        default:\\r\\n            // TODO(andysoto): assert(false);\\r\\n            return TaskState.ERROR;\\r\\n    }\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * @return False if the object is undefined or null, true otherwise.\\r\\n */\\r\\nfunction isDef(p) {\\r\\n    return p != null;\\r\\n}\\r\\nfunction isJustDef(p) {\\r\\n    return p !== void 0;\\r\\n}\\r\\n// eslint-disable-next-line @typescript-eslint/ban-types\\r\\nfunction isFunction(p) {\\r\\n    return typeof p === 'function';\\r\\n}\\r\\nfunction isObject(p) {\\r\\n    return typeof p === 'object';\\r\\n}\\r\\nfunction isNonNullObject(p) {\\r\\n    return isObject(p) && p !== null;\\r\\n}\\r\\nfunction isNonArrayObject(p) {\\r\\n    return isObject(p) && !Array.isArray(p);\\r\\n}\\r\\nfunction isString(p) {\\r\\n    return typeof p === 'string' || p instanceof String;\\r\\n}\\r\\nfunction isInteger(p) {\\r\\n    return isNumber(p) && Number.isInteger(p);\\r\\n}\\r\\nfunction isNumber(p) {\\r\\n    return typeof p === 'number' || p instanceof Number;\\r\\n}\\r\\nfunction isNativeBlob(p) {\\r\\n    return isNativeBlobDefined() && p instanceof Blob;\\r\\n}\\r\\nfunction isNativeBlobDefined() {\\r\\n    return typeof Blob !== 'undefined';\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * @enum{number}\\r\\n */\\r\\nvar ErrorCode;\\r\\n(function (ErrorCode) {\\r\\n    ErrorCode[ErrorCode[\\\"NO_ERROR\\\"] = 0] = \\\"NO_ERROR\\\";\\r\\n    ErrorCode[ErrorCode[\\\"NETWORK_ERROR\\\"] = 1] = \\\"NETWORK_ERROR\\\";\\r\\n    ErrorCode[ErrorCode[\\\"ABORT\\\"] = 2] = \\\"ABORT\\\";\\r\\n})(ErrorCode || (ErrorCode = {}));\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\\r\\n * doesn't work in React Native on Android.\\r\\n */\\r\\nvar NetworkXhrIo = /** @class */ (function () {\\r\\n    function NetworkXhrIo() {\\r\\n        var _this = this;\\r\\n        this.sent_ = false;\\r\\n        this.xhr_ = new XMLHttpRequest();\\r\\n        this.errorCode_ = ErrorCode.NO_ERROR;\\r\\n        this.sendPromise_ = new Promise(function (resolve) {\\r\\n            _this.xhr_.addEventListener('abort', function () {\\r\\n                _this.errorCode_ = ErrorCode.ABORT;\\r\\n                resolve(_this);\\r\\n            });\\r\\n            _this.xhr_.addEventListener('error', function () {\\r\\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\\r\\n                resolve(_this);\\r\\n            });\\r\\n            _this.xhr_.addEventListener('load', function () {\\r\\n                resolve(_this);\\r\\n            });\\r\\n        });\\r\\n    }\\r\\n    /**\\r\\n     * @override\\r\\n     */\\r\\n    NetworkXhrIo.prototype.send = function (url, method, body, headers) {\\r\\n        if (this.sent_) {\\r\\n            throw internalError('cannot .send() more than once');\\r\\n        }\\r\\n        this.sent_ = true;\\r\\n        this.xhr_.open(method, url, true);\\r\\n        if (isDef(headers)) {\\r\\n            for (var key in headers) {\\r\\n                if (headers.hasOwnProperty(key)) {\\r\\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        if (isDef(body)) {\\r\\n            this.xhr_.send(body);\\r\\n        }\\r\\n        else {\\r\\n            this.xhr_.send();\\r\\n        }\\r\\n        return this.sendPromise_;\\r\\n    };\\r\\n    /**\\r\\n     * @override\\r\\n     */\\r\\n    NetworkXhrIo.prototype.getErrorCode = function () {\\r\\n        if (!this.sent_) {\\r\\n            throw internalError('cannot .getErrorCode() before sending');\\r\\n        }\\r\\n        return this.errorCode_;\\r\\n    };\\r\\n    /**\\r\\n     * @override\\r\\n     */\\r\\n    NetworkXhrIo.prototype.getStatus = function () {\\r\\n        if (!this.sent_) {\\r\\n            throw internalError('cannot .getStatus() before sending');\\r\\n        }\\r\\n        try {\\r\\n            return this.xhr_.status;\\r\\n        }\\r\\n        catch (e) {\\r\\n            return -1;\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * @override\\r\\n     */\\r\\n    NetworkXhrIo.prototype.getResponseText = function () {\\r\\n        if (!this.sent_) {\\r\\n            throw internalError('cannot .getResponseText() before sending');\\r\\n        }\\r\\n        return this.xhr_.responseText;\\r\\n    };\\r\\n    /**\\r\\n     * Aborts the request.\\r\\n     * @override\\r\\n     */\\r\\n    NetworkXhrIo.prototype.abort = function () {\\r\\n        this.xhr_.abort();\\r\\n    };\\r\\n    /**\\r\\n     * @override\\r\\n     */\\r\\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\\r\\n        return this.xhr_.getResponseHeader(header);\\r\\n    };\\r\\n    /**\\r\\n     * @override\\r\\n     */\\r\\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\\r\\n        if (isDef(this.xhr_.upload)) {\\r\\n            this.xhr_.upload.addEventListener('progress', listener);\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * @override\\r\\n     */\\r\\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\\r\\n        if (isDef(this.xhr_.upload)) {\\r\\n            this.xhr_.upload.removeEventListener('progress', listener);\\r\\n        }\\r\\n    };\\r\\n    return NetworkXhrIo;\\r\\n}());\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * Factory-like class for creating XhrIo instances.\\r\\n */\\r\\nvar XhrIoPool = /** @class */ (function () {\\r\\n    function XhrIoPool() {\\r\\n    }\\r\\n    XhrIoPool.prototype.createXhrIo = function () {\\r\\n        return new NetworkXhrIo();\\r\\n    };\\r\\n    return XhrIoPool;\\r\\n}());\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nfunction getBlobBuilder() {\\r\\n    if (typeof BlobBuilder !== 'undefined') {\\r\\n        return BlobBuilder;\\r\\n    }\\r\\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\\r\\n        return WebKitBlobBuilder;\\r\\n    }\\r\\n    else {\\r\\n        return undefined;\\r\\n    }\\r\\n}\\r\\n/**\\r\\n * Concatenates one or more values together and converts them to a Blob.\\r\\n *\\r\\n * @param args The values that will make up the resulting blob.\\r\\n * @return The blob.\\r\\n */\\r\\nfunction getBlob() {\\r\\n    var args = [];\\r\\n    for (var _i = 0; _i < arguments.length; _i++) {\\r\\n        args[_i] = arguments[_i];\\r\\n    }\\r\\n    var BlobBuilder = getBlobBuilder();\\r\\n    if (BlobBuilder !== undefined) {\\r\\n        var bb = new BlobBuilder();\\r\\n        for (var i = 0; i < args.length; i++) {\\r\\n            bb.append(args[i]);\\r\\n        }\\r\\n        return bb.getBlob();\\r\\n    }\\r\\n    else {\\r\\n        if (isNativeBlobDefined()) {\\r\\n            return new Blob(args);\\r\\n        }\\r\\n        else {\\r\\n            throw Error(\\\"This browser doesn't seem to support creating Blobs\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\n/**\\r\\n * Slices the blob. The returned blob contains data from the start byte\\r\\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\\r\\n *\\r\\n * @param blob The blob to be sliced.\\r\\n * @param start Index of the starting byte.\\r\\n * @param end Index of the ending byte.\\r\\n * @return The blob slice or null if not supported.\\r\\n */\\r\\nfunction sliceBlob(blob, start, end) {\\r\\n    if (blob.webkitSlice) {\\r\\n        return blob.webkitSlice(start, end);\\r\\n    }\\r\\n    else if (blob.mozSlice) {\\r\\n        return blob.mozSlice(start, end);\\r\\n    }\\r\\n    else if (blob.slice) {\\r\\n        return blob.slice(start, end);\\r\\n    }\\r\\n    return null;\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * @param opt_elideCopy If true, doesn't copy mutable input data\\r\\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\\r\\n *     modified after this blob's construction.\\r\\n */\\r\\nvar FbsBlob = /** @class */ (function () {\\r\\n    function FbsBlob(data, elideCopy) {\\r\\n        var size = 0;\\r\\n        var blobType = '';\\r\\n        if (isNativeBlob(data)) {\\r\\n            this.data_ = data;\\r\\n            size = data.size;\\r\\n            blobType = data.type;\\r\\n        }\\r\\n        else if (data instanceof ArrayBuffer) {\\r\\n            if (elideCopy) {\\r\\n                this.data_ = new Uint8Array(data);\\r\\n            }\\r\\n            else {\\r\\n                this.data_ = new Uint8Array(data.byteLength);\\r\\n                this.data_.set(new Uint8Array(data));\\r\\n            }\\r\\n            size = this.data_.length;\\r\\n        }\\r\\n        else if (data instanceof Uint8Array) {\\r\\n            if (elideCopy) {\\r\\n                this.data_ = data;\\r\\n            }\\r\\n            else {\\r\\n                this.data_ = new Uint8Array(data.length);\\r\\n                this.data_.set(data);\\r\\n            }\\r\\n            size = data.length;\\r\\n        }\\r\\n        this.size_ = size;\\r\\n        this.type_ = blobType;\\r\\n    }\\r\\n    FbsBlob.prototype.size = function () {\\r\\n        return this.size_;\\r\\n    };\\r\\n    FbsBlob.prototype.type = function () {\\r\\n        return this.type_;\\r\\n    };\\r\\n    FbsBlob.prototype.slice = function (startByte, endByte) {\\r\\n        if (isNativeBlob(this.data_)) {\\r\\n            var realBlob = this.data_;\\r\\n            var sliced = sliceBlob(realBlob, startByte, endByte);\\r\\n            if (sliced === null) {\\r\\n                return null;\\r\\n            }\\r\\n            return new FbsBlob(sliced);\\r\\n        }\\r\\n        else {\\r\\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\\r\\n            return new FbsBlob(slice, true);\\r\\n        }\\r\\n    };\\r\\n    FbsBlob.getBlob = function () {\\r\\n        var args = [];\\r\\n        for (var _i = 0; _i < arguments.length; _i++) {\\r\\n            args[_i] = arguments[_i];\\r\\n        }\\r\\n        if (isNativeBlobDefined()) {\\r\\n            var blobby = args.map(function (val) {\\r\\n                if (val instanceof FbsBlob) {\\r\\n                    return val.data_;\\r\\n                }\\r\\n                else {\\r\\n                    return val;\\r\\n                }\\r\\n            });\\r\\n            return new FbsBlob(getBlob.apply(null, blobby));\\r\\n        }\\r\\n        else {\\r\\n            var uint8Arrays = args.map(function (val) {\\r\\n                if (isString(val)) {\\r\\n                    return dataFromString(StringFormat.RAW, val).data;\\r\\n                }\\r\\n                else {\\r\\n                    // Blobs don't exist, so this has to be a Uint8Array.\\r\\n                    return val.data_;\\r\\n                }\\r\\n            });\\r\\n            var finalLength_1 = 0;\\r\\n            uint8Arrays.forEach(function (array) {\\r\\n                finalLength_1 += array.byteLength;\\r\\n            });\\r\\n            var merged_1 = new Uint8Array(finalLength_1);\\r\\n            var index_1 = 0;\\r\\n            uint8Arrays.forEach(function (array) {\\r\\n                for (var i = 0; i < array.length; i++) {\\r\\n                    merged_1[index_1++] = array[i];\\r\\n                }\\r\\n            });\\r\\n            return new FbsBlob(merged_1, true);\\r\\n        }\\r\\n    };\\r\\n    FbsBlob.prototype.uploadData = function () {\\r\\n        return this.data_;\\r\\n    };\\r\\n    return FbsBlob;\\r\\n}());\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * @struct\\r\\n */\\r\\nvar Location = /** @class */ (function () {\\r\\n    function Location(bucket, path) {\\r\\n        this.bucket = bucket;\\r\\n        this.path_ = path;\\r\\n    }\\r\\n    Object.defineProperty(Location.prototype, \\\"path\\\", {\\r\\n        get: function () {\\r\\n            return this.path_;\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(Location.prototype, \\\"isRoot\\\", {\\r\\n        get: function () {\\r\\n            return this.path.length === 0;\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    Location.prototype.fullServerUrl = function () {\\r\\n        var encode = encodeURIComponent;\\r\\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\\r\\n    };\\r\\n    Location.prototype.bucketOnlyServerUrl = function () {\\r\\n        var encode = encodeURIComponent;\\r\\n        return '/b/' + encode(this.bucket) + '/o';\\r\\n    };\\r\\n    Location.makeFromBucketSpec = function (bucketString) {\\r\\n        var bucketLocation;\\r\\n        try {\\r\\n            bucketLocation = Location.makeFromUrl(bucketString);\\r\\n        }\\r\\n        catch (e) {\\r\\n            // Not valid URL, use as-is. This lets you put bare bucket names in\\r\\n            // config.\\r\\n            return new Location(bucketString, '');\\r\\n        }\\r\\n        if (bucketLocation.path === '') {\\r\\n            return bucketLocation;\\r\\n        }\\r\\n        else {\\r\\n            throw invalidDefaultBucket(bucketString);\\r\\n        }\\r\\n    };\\r\\n    Location.makeFromUrl = function (url) {\\r\\n        var location = null;\\r\\n        var bucketDomain = '([A-Za-z0-9.\\\\\\\\-_]+)';\\r\\n        function gsModify(loc) {\\r\\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\\r\\n                loc.path_ = loc.path_.slice(0, -1);\\r\\n            }\\r\\n        }\\r\\n        var gsPath = '(/(.*))?$';\\r\\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\\r\\n        var gsIndices = { bucket: 1, path: 3 };\\r\\n        function httpModify(loc) {\\r\\n            loc.path_ = decodeURIComponent(loc.path);\\r\\n        }\\r\\n        var version = 'v[A-Za-z0-9_]+';\\r\\n        var firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\\\\\.');\\r\\n        var firebaseStoragePath = '(/([^?#]*).*)?$';\\r\\n        var firebaseStorageRegExp = new RegExp(\\\"^https?://\\\" + firebaseStorageHost + \\\"/\\\" + version + \\\"/b/\\\" + bucketDomain + \\\"/o\\\" + firebaseStoragePath, 'i');\\r\\n        var firebaseStorageIndices = { bucket: 1, path: 3 };\\r\\n        var cloudStorageHost = '(?:storage.googleapis.com|storage.cloud.google.com)';\\r\\n        var cloudStoragePath = '([^?#]*)';\\r\\n        var cloudStorageRegExp = new RegExp(\\\"^https?://\\\" + cloudStorageHost + \\\"/\\\" + bucketDomain + \\\"/\\\" + cloudStoragePath, 'i');\\r\\n        var cloudStorageIndices = { bucket: 1, path: 2 };\\r\\n        var groups = [\\r\\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\\r\\n            {\\r\\n                regex: firebaseStorageRegExp,\\r\\n                indices: firebaseStorageIndices,\\r\\n                postModify: httpModify\\r\\n            },\\r\\n            {\\r\\n                regex: cloudStorageRegExp,\\r\\n                indices: cloudStorageIndices,\\r\\n                postModify: httpModify\\r\\n            }\\r\\n        ];\\r\\n        for (var i = 0; i < groups.length; i++) {\\r\\n            var group = groups[i];\\r\\n            var captures = group.regex.exec(url);\\r\\n            if (captures) {\\r\\n                var bucketValue = captures[group.indices.bucket];\\r\\n                var pathValue = captures[group.indices.path];\\r\\n                if (!pathValue) {\\r\\n                    pathValue = '';\\r\\n                }\\r\\n                location = new Location(bucketValue, pathValue);\\r\\n                group.postModify(location);\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        if (location == null) {\\r\\n            throw invalidUrl(url);\\r\\n        }\\r\\n        return location;\\r\\n    };\\r\\n    return Location;\\r\\n}());\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * Returns the Object resulting from parsing the given JSON, or null if the\\r\\n * given string does not represent a JSON object.\\r\\n */\\r\\nfunction jsonObjectOrNull(s) {\\r\\n    var obj;\\r\\n    try {\\r\\n        obj = JSON.parse(s);\\r\\n    }\\r\\n    catch (e) {\\r\\n        return null;\\r\\n    }\\r\\n    if (isNonArrayObject(obj)) {\\r\\n        return obj;\\r\\n    }\\r\\n    else {\\r\\n        return null;\\r\\n    }\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * @fileoverview Contains helper methods for manipulating paths.\\r\\n */\\r\\n/**\\r\\n * @return Null if the path is already at the root.\\r\\n */\\r\\nfunction parent(path) {\\r\\n    if (path.length === 0) {\\r\\n        return null;\\r\\n    }\\r\\n    var index = path.lastIndexOf('/');\\r\\n    if (index === -1) {\\r\\n        return '';\\r\\n    }\\r\\n    var newPath = path.slice(0, index);\\r\\n    return newPath;\\r\\n}\\r\\nfunction child(path, childPath) {\\r\\n    var canonicalChildPath = childPath\\r\\n        .split('/')\\r\\n        .filter(function (component) { return component.length > 0; })\\r\\n        .join('/');\\r\\n    if (path.length === 0) {\\r\\n        return canonicalChildPath;\\r\\n    }\\r\\n    else {\\r\\n        return path + '/' + canonicalChildPath;\\r\\n    }\\r\\n}\\r\\n/**\\r\\n * Returns the last component of a path.\\r\\n * '/foo/bar' -> 'bar'\\r\\n * '/foo/bar/baz/' -> 'baz/'\\r\\n * '/a' -> 'a'\\r\\n */\\r\\nfunction lastComponent(path) {\\r\\n    var index = path.lastIndexOf('/', path.length - 2);\\r\\n    if (index === -1) {\\r\\n        return path;\\r\\n    }\\r\\n    else {\\r\\n        return path.slice(index + 1);\\r\\n    }\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nfunction makeUrl(urlPart) {\\r\\n    return \\\"https://\\\" + DEFAULT_HOST + \\\"/v0\\\" + urlPart;\\r\\n}\\r\\nfunction makeQueryString(params) {\\r\\n    var encode = encodeURIComponent;\\r\\n    var queryPart = '?';\\r\\n    for (var key in params) {\\r\\n        if (params.hasOwnProperty(key)) {\\r\\n            // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\\r\\n            var nextPart = encode(key) + '=' + encode(params[key]);\\r\\n            queryPart = queryPart + nextPart + '&';\\r\\n        }\\r\\n    }\\r\\n    // Chop off the extra '&' or '?' on the end\\r\\n    queryPart = queryPart.slice(0, -1);\\r\\n    return queryPart;\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nfunction noXform_(metadata, value) {\\r\\n    return value;\\r\\n}\\r\\n/**\\r\\n * @struct\\r\\n */\\r\\nvar Mapping = /** @class */ (function () {\\r\\n    function Mapping(server, local, writable, xform) {\\r\\n        this.server = server;\\r\\n        this.local = local || server;\\r\\n        this.writable = !!writable;\\r\\n        this.xform = xform || noXform_;\\r\\n    }\\r\\n    return Mapping;\\r\\n}());\\r\\nvar mappings_ = null;\\r\\nfunction xformPath(fullPath) {\\r\\n    if (!isString(fullPath) || fullPath.length < 2) {\\r\\n        return fullPath;\\r\\n    }\\r\\n    else {\\r\\n        return lastComponent(fullPath);\\r\\n    }\\r\\n}\\r\\nfunction getMappings() {\\r\\n    if (mappings_) {\\r\\n        return mappings_;\\r\\n    }\\r\\n    var mappings = [];\\r\\n    mappings.push(new Mapping('bucket'));\\r\\n    mappings.push(new Mapping('generation'));\\r\\n    mappings.push(new Mapping('metageneration'));\\r\\n    mappings.push(new Mapping('name', 'fullPath', true));\\r\\n    function mappingsXformPath(_metadata, fullPath) {\\r\\n        return xformPath(fullPath);\\r\\n    }\\r\\n    var nameMapping = new Mapping('name');\\r\\n    nameMapping.xform = mappingsXformPath;\\r\\n    mappings.push(nameMapping);\\r\\n    /**\\r\\n     * Coerces the second param to a number, if it is defined.\\r\\n     */\\r\\n    function xformSize(_metadata, size) {\\r\\n        if (isDef(size)) {\\r\\n            return Number(size);\\r\\n        }\\r\\n        else {\\r\\n            return size;\\r\\n        }\\r\\n    }\\r\\n    var sizeMapping = new Mapping('size');\\r\\n    sizeMapping.xform = xformSize;\\r\\n    mappings.push(sizeMapping);\\r\\n    mappings.push(new Mapping('timeCreated'));\\r\\n    mappings.push(new Mapping('updated'));\\r\\n    mappings.push(new Mapping('md5Hash', null, true));\\r\\n    mappings.push(new Mapping('cacheControl', null, true));\\r\\n    mappings.push(new Mapping('contentDisposition', null, true));\\r\\n    mappings.push(new Mapping('contentEncoding', null, true));\\r\\n    mappings.push(new Mapping('contentLanguage', null, true));\\r\\n    mappings.push(new Mapping('contentType', null, true));\\r\\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\\r\\n    mappings_ = mappings;\\r\\n    return mappings_;\\r\\n}\\r\\nfunction addRef(metadata, service) {\\r\\n    function generateRef() {\\r\\n        var bucket = metadata['bucket'];\\r\\n        var path = metadata['fullPath'];\\r\\n        var loc = new Location(bucket, path);\\r\\n        return service.makeStorageReference(loc);\\r\\n    }\\r\\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\\r\\n}\\r\\nfunction fromResource(service, resource, mappings) {\\r\\n    var metadata = {};\\r\\n    metadata['type'] = 'file';\\r\\n    var len = mappings.length;\\r\\n    for (var i = 0; i < len; i++) {\\r\\n        var mapping = mappings[i];\\r\\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\\r\\n    }\\r\\n    addRef(metadata, service);\\r\\n    return metadata;\\r\\n}\\r\\nfunction fromResourceString(service, resourceString, mappings) {\\r\\n    var obj = jsonObjectOrNull(resourceString);\\r\\n    if (obj === null) {\\r\\n        return null;\\r\\n    }\\r\\n    var resource = obj;\\r\\n    return fromResource(service, resource, mappings);\\r\\n}\\r\\nfunction downloadUrlFromResourceString(metadata, resourceString) {\\r\\n    var obj = jsonObjectOrNull(resourceString);\\r\\n    if (obj === null) {\\r\\n        return null;\\r\\n    }\\r\\n    if (!isString(obj['downloadTokens'])) {\\r\\n        // This can happen if objects are uploaded through GCS and retrieved\\r\\n        // through list, so we don't want to throw an Error.\\r\\n        return null;\\r\\n    }\\r\\n    var tokens = obj['downloadTokens'];\\r\\n    if (tokens.length === 0) {\\r\\n        return null;\\r\\n    }\\r\\n    var encode = encodeURIComponent;\\r\\n    var tokensList = tokens.split(',');\\r\\n    var urls = tokensList.map(function (token) {\\r\\n        var bucket = metadata['bucket'];\\r\\n        var path = metadata['fullPath'];\\r\\n        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\\r\\n        var base = makeUrl(urlPart);\\r\\n        var queryString = makeQueryString({\\r\\n            alt: 'media',\\r\\n            token: token\\r\\n        });\\r\\n        return base + queryString;\\r\\n    });\\r\\n    return urls[0];\\r\\n}\\r\\nfunction toResourceString(metadata, mappings) {\\r\\n    var resource = {};\\r\\n    var len = mappings.length;\\r\\n    for (var i = 0; i < len; i++) {\\r\\n        var mapping = mappings[i];\\r\\n        if (mapping.writable) {\\r\\n            resource[mapping.server] = metadata[mapping.local];\\r\\n        }\\r\\n    }\\r\\n    return JSON.stringify(resource);\\r\\n}\\r\\nfunction metadataValidator(p) {\\r\\n    if (!isObject(p) || !p) {\\r\\n        throw 'Expected Metadata object.';\\r\\n    }\\r\\n    for (var key in p) {\\r\\n        if (p.hasOwnProperty(key)) {\\r\\n            var val = p[key];\\r\\n            if (key === 'customMetadata') {\\r\\n                if (!isObject(val)) {\\r\\n                    throw 'Expected object for \\\\'customMetadata\\\\' mapping.';\\r\\n                }\\r\\n            }\\r\\n            else {\\r\\n                if (isNonNullObject(val)) {\\r\\n                    throw \\\"Mapping for '\\\" + key + \\\"' cannot be an object.\\\";\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\nvar MAX_RESULTS_KEY = 'maxResults';\\r\\nvar MAX_MAX_RESULTS = 1000;\\r\\nvar PAGE_TOKEN_KEY = 'pageToken';\\r\\nvar PREFIXES_KEY = 'prefixes';\\r\\nvar ITEMS_KEY = 'items';\\r\\nfunction fromBackendResponse(service, bucket, resource) {\\r\\n    var listResult = {\\r\\n        prefixes: [],\\r\\n        items: [],\\r\\n        nextPageToken: resource['nextPageToken']\\r\\n    };\\r\\n    if (resource[PREFIXES_KEY]) {\\r\\n        for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\\r\\n            var path = _a[_i];\\r\\n            var pathWithoutTrailingSlash = path.replace(/\\\\/$/, '');\\r\\n            var reference = service.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\\r\\n            listResult.prefixes.push(reference);\\r\\n        }\\r\\n    }\\r\\n    if (resource[ITEMS_KEY]) {\\r\\n        for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\\r\\n            var item = _c[_b];\\r\\n            var reference = service.makeStorageReference(new Location(bucket, item['name']));\\r\\n            listResult.items.push(reference);\\r\\n        }\\r\\n    }\\r\\n    return listResult;\\r\\n}\\r\\nfunction fromResponseString(service, bucket, resourceString) {\\r\\n    var obj = jsonObjectOrNull(resourceString);\\r\\n    if (obj === null) {\\r\\n        return null;\\r\\n    }\\r\\n    var resource = obj;\\r\\n    return fromBackendResponse(service, bucket, resource);\\r\\n}\\r\\nfunction listOptionsValidator(p) {\\r\\n    if (!isObject(p) || !p) {\\r\\n        throw 'Expected ListOptions object.';\\r\\n    }\\r\\n    for (var key in p) {\\r\\n        if (key === MAX_RESULTS_KEY) {\\r\\n            if (!isInteger(p[MAX_RESULTS_KEY]) ||\\r\\n                p[MAX_RESULTS_KEY] <= 0) {\\r\\n                throw 'Expected maxResults to be a positive number.';\\r\\n            }\\r\\n            if (p[MAX_RESULTS_KEY] > 1000) {\\r\\n                throw \\\"Expected maxResults to be less than or equal to \\\" + MAX_MAX_RESULTS + \\\".\\\";\\r\\n            }\\r\\n        }\\r\\n        else if (key === PAGE_TOKEN_KEY) {\\r\\n            if (p[PAGE_TOKEN_KEY] && !isString(p[PAGE_TOKEN_KEY])) {\\r\\n                throw 'Expected pageToken to be string.';\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            throw 'Unknown option: ' + key;\\r\\n        }\\r\\n    }\\r\\n}\\n\\nvar RequestInfo = /** @class */ (function () {\\r\\n    function RequestInfo(url, method, \\r\\n    /**\\r\\n     * Returns the value with which to resolve the request's promise. Only called\\r\\n     * if the request is successful. Throw from this function to reject the\\r\\n     * returned Request's promise with the thrown error.\\r\\n     * Note: The XhrIo passed to this function may be reused after this callback\\r\\n     * returns. Do not keep a reference to it in any way.\\r\\n     */\\r\\n    handler, timeout) {\\r\\n        this.url = url;\\r\\n        this.method = method;\\r\\n        this.handler = handler;\\r\\n        this.timeout = timeout;\\r\\n        this.urlParams = {};\\r\\n        this.headers = {};\\r\\n        this.body = null;\\r\\n        this.errorHandler = null;\\r\\n        /**\\r\\n         * Called with the current number of bytes uploaded and total size (-1 if not\\r\\n         * computable) of the request body (i.e. used to report upload progress).\\r\\n         */\\r\\n        this.progressCallback = null;\\r\\n        this.successCodes = [200];\\r\\n        this.additionalRetryCodes = [];\\r\\n    }\\r\\n    return RequestInfo;\\r\\n}());\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\\r\\n */\\r\\nfunction handlerCheck(cndn) {\\r\\n    if (!cndn) {\\r\\n        throw unknown();\\r\\n    }\\r\\n}\\r\\nfunction metadataHandler(service, mappings) {\\r\\n    function handler(xhr, text) {\\r\\n        var metadata = fromResourceString(service, text, mappings);\\r\\n        handlerCheck(metadata !== null);\\r\\n        return metadata;\\r\\n    }\\r\\n    return handler;\\r\\n}\\r\\nfunction listHandler(service, bucket) {\\r\\n    function handler(xhr, text) {\\r\\n        var listResult = fromResponseString(service, bucket, text);\\r\\n        handlerCheck(listResult !== null);\\r\\n        return listResult;\\r\\n    }\\r\\n    return handler;\\r\\n}\\r\\nfunction downloadUrlHandler(service, mappings) {\\r\\n    function handler(xhr, text) {\\r\\n        var metadata = fromResourceString(service, text, mappings);\\r\\n        handlerCheck(metadata !== null);\\r\\n        return downloadUrlFromResourceString(metadata, text);\\r\\n    }\\r\\n    return handler;\\r\\n}\\r\\nfunction sharedErrorHandler(location) {\\r\\n    function errorHandler(xhr, err) {\\r\\n        var newErr;\\r\\n        if (xhr.getStatus() === 401) {\\r\\n            newErr = unauthenticated();\\r\\n        }\\r\\n        else {\\r\\n            if (xhr.getStatus() === 402) {\\r\\n                newErr = quotaExceeded(location.bucket);\\r\\n            }\\r\\n            else {\\r\\n                if (xhr.getStatus() === 403) {\\r\\n                    newErr = unauthorized(location.path);\\r\\n                }\\r\\n                else {\\r\\n                    newErr = err;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        newErr.setServerResponseProp(err.serverResponseProp());\\r\\n        return newErr;\\r\\n    }\\r\\n    return errorHandler;\\r\\n}\\r\\nfunction objectErrorHandler(location) {\\r\\n    var shared = sharedErrorHandler(location);\\r\\n    function errorHandler(xhr, err) {\\r\\n        var newErr = shared(xhr, err);\\r\\n        if (xhr.getStatus() === 404) {\\r\\n            newErr = objectNotFound(location.path);\\r\\n        }\\r\\n        newErr.setServerResponseProp(err.serverResponseProp());\\r\\n        return newErr;\\r\\n    }\\r\\n    return errorHandler;\\r\\n}\\r\\nfunction getMetadata(service, location, mappings) {\\r\\n    var urlPart = location.fullServerUrl();\\r\\n    var url = makeUrl(urlPart);\\r\\n    var method = 'GET';\\r\\n    var timeout = service.maxOperationRetryTime;\\r\\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\\r\\n    requestInfo.errorHandler = objectErrorHandler(location);\\r\\n    return requestInfo;\\r\\n}\\r\\nfunction list(service, location, delimiter, pageToken, maxResults) {\\r\\n    var urlParams = {};\\r\\n    if (location.isRoot) {\\r\\n        urlParams['prefix'] = '';\\r\\n    }\\r\\n    else {\\r\\n        urlParams['prefix'] = location.path + '/';\\r\\n    }\\r\\n    if (delimiter && delimiter.length > 0) {\\r\\n        urlParams['delimiter'] = delimiter;\\r\\n    }\\r\\n    if (pageToken) {\\r\\n        urlParams['pageToken'] = pageToken;\\r\\n    }\\r\\n    if (maxResults) {\\r\\n        urlParams['maxResults'] = maxResults;\\r\\n    }\\r\\n    var urlPart = location.bucketOnlyServerUrl();\\r\\n    var url = makeUrl(urlPart);\\r\\n    var method = 'GET';\\r\\n    var timeout = service.maxOperationRetryTime;\\r\\n    var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\\r\\n    requestInfo.urlParams = urlParams;\\r\\n    requestInfo.errorHandler = sharedErrorHandler(location);\\r\\n    return requestInfo;\\r\\n}\\r\\nfunction getDownloadUrl(service, location, mappings) {\\r\\n    var urlPart = location.fullServerUrl();\\r\\n    var url = makeUrl(urlPart);\\r\\n    var method = 'GET';\\r\\n    var timeout = service.maxOperationRetryTime;\\r\\n    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\\r\\n    requestInfo.errorHandler = objectErrorHandler(location);\\r\\n    return requestInfo;\\r\\n}\\r\\nfunction updateMetadata(service, location, metadata, mappings) {\\r\\n    var urlPart = location.fullServerUrl();\\r\\n    var url = makeUrl(urlPart);\\r\\n    var method = 'PATCH';\\r\\n    var body = toResourceString(metadata, mappings);\\r\\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\\r\\n    var timeout = service.maxOperationRetryTime;\\r\\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\\r\\n    requestInfo.headers = headers;\\r\\n    requestInfo.body = body;\\r\\n    requestInfo.errorHandler = objectErrorHandler(location);\\r\\n    return requestInfo;\\r\\n}\\r\\nfunction deleteObject(service, location) {\\r\\n    var urlPart = location.fullServerUrl();\\r\\n    var url = makeUrl(urlPart);\\r\\n    var method = 'DELETE';\\r\\n    var timeout = service.maxOperationRetryTime;\\r\\n    function handler(_xhr, _text) { }\\r\\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\\r\\n    requestInfo.successCodes = [200, 204];\\r\\n    requestInfo.errorHandler = objectErrorHandler(location);\\r\\n    return requestInfo;\\r\\n}\\r\\nfunction determineContentType_(metadata, blob) {\\r\\n    return ((metadata && metadata['contentType']) ||\\r\\n        (blob && blob.type()) ||\\r\\n        'application/octet-stream');\\r\\n}\\r\\nfunction metadataForUpload_(location, blob, metadata) {\\r\\n    var metadataClone = Object.assign({}, metadata);\\r\\n    metadataClone['fullPath'] = location.path;\\r\\n    metadataClone['size'] = blob.size();\\r\\n    if (!metadataClone['contentType']) {\\r\\n        metadataClone['contentType'] = determineContentType_(null, blob);\\r\\n    }\\r\\n    return metadataClone;\\r\\n}\\r\\nfunction multipartUpload(service, location, mappings, blob, metadata) {\\r\\n    var urlPart = location.bucketOnlyServerUrl();\\r\\n    var headers = {\\r\\n        'X-Goog-Upload-Protocol': 'multipart'\\r\\n    };\\r\\n    function genBoundary() {\\r\\n        var str = '';\\r\\n        for (var i = 0; i < 2; i++) {\\r\\n            str = str + Math.random().toString().slice(2);\\r\\n        }\\r\\n        return str;\\r\\n    }\\r\\n    var boundary = genBoundary();\\r\\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\\r\\n    var metadata_ = metadataForUpload_(location, blob, metadata);\\r\\n    var metadataString = toResourceString(metadata_, mappings);\\r\\n    var preBlobPart = '--' +\\r\\n        boundary +\\r\\n        '\\\\r\\\\n' +\\r\\n        'Content-Type: application/json; charset=utf-8\\\\r\\\\n\\\\r\\\\n' +\\r\\n        metadataString +\\r\\n        '\\\\r\\\\n--' +\\r\\n        boundary +\\r\\n        '\\\\r\\\\n' +\\r\\n        'Content-Type: ' +\\r\\n        metadata_['contentType'] +\\r\\n        '\\\\r\\\\n\\\\r\\\\n';\\r\\n    var postBlobPart = '\\\\r\\\\n--' + boundary + '--';\\r\\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\\r\\n    if (body === null) {\\r\\n        throw cannotSliceBlob();\\r\\n    }\\r\\n    var urlParams = { name: metadata_['fullPath'] };\\r\\n    var url = makeUrl(urlPart);\\r\\n    var method = 'POST';\\r\\n    var timeout = service.maxUploadRetryTime;\\r\\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\\r\\n    requestInfo.urlParams = urlParams;\\r\\n    requestInfo.headers = headers;\\r\\n    requestInfo.body = body.uploadData();\\r\\n    requestInfo.errorHandler = sharedErrorHandler(location);\\r\\n    return requestInfo;\\r\\n}\\r\\n/**\\r\\n * @param current The number of bytes that have been uploaded so far.\\r\\n * @param total The total number of bytes in the upload.\\r\\n * @param opt_finalized True if the server has finished the upload.\\r\\n * @param opt_metadata The upload metadata, should\\r\\n *     only be passed if opt_finalized is true.\\r\\n * @struct\\r\\n */\\r\\nvar ResumableUploadStatus = /** @class */ (function () {\\r\\n    function ResumableUploadStatus(current, total, finalized, metadata) {\\r\\n        this.current = current;\\r\\n        this.total = total;\\r\\n        this.finalized = !!finalized;\\r\\n        this.metadata = metadata || null;\\r\\n    }\\r\\n    return ResumableUploadStatus;\\r\\n}());\\r\\nfunction checkResumeHeader_(xhr, allowed) {\\r\\n    var status = null;\\r\\n    try {\\r\\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\\r\\n    }\\r\\n    catch (e) {\\r\\n        handlerCheck(false);\\r\\n    }\\r\\n    var allowedStatus = allowed || ['active'];\\r\\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\\r\\n    return status;\\r\\n}\\r\\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\\r\\n    var urlPart = location.bucketOnlyServerUrl();\\r\\n    var metadataForUpload = metadataForUpload_(location, blob, metadata);\\r\\n    var urlParams = { name: metadataForUpload['fullPath'] };\\r\\n    var url = makeUrl(urlPart);\\r\\n    var method = 'POST';\\r\\n    var headers = {\\r\\n        'X-Goog-Upload-Protocol': 'resumable',\\r\\n        'X-Goog-Upload-Command': 'start',\\r\\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\\r\\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\\r\\n        'Content-Type': 'application/json; charset=utf-8'\\r\\n    };\\r\\n    var body = toResourceString(metadataForUpload, mappings);\\r\\n    var timeout = service.maxUploadRetryTime;\\r\\n    function handler(xhr) {\\r\\n        checkResumeHeader_(xhr);\\r\\n        var url;\\r\\n        try {\\r\\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\\r\\n        }\\r\\n        catch (e) {\\r\\n            handlerCheck(false);\\r\\n        }\\r\\n        handlerCheck(isString(url));\\r\\n        return url;\\r\\n    }\\r\\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\\r\\n    requestInfo.urlParams = urlParams;\\r\\n    requestInfo.headers = headers;\\r\\n    requestInfo.body = body;\\r\\n    requestInfo.errorHandler = sharedErrorHandler(location);\\r\\n    return requestInfo;\\r\\n}\\r\\n/**\\r\\n * @param url From a call to fbs.requests.createResumableUpload.\\r\\n */\\r\\nfunction getResumableUploadStatus(service, location, url, blob) {\\r\\n    var headers = { 'X-Goog-Upload-Command': 'query' };\\r\\n    function handler(xhr) {\\r\\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\\r\\n        var sizeString = null;\\r\\n        try {\\r\\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\\r\\n        }\\r\\n        catch (e) {\\r\\n            handlerCheck(false);\\r\\n        }\\r\\n        if (!sizeString) {\\r\\n            // null or empty string\\r\\n            handlerCheck(false);\\r\\n        }\\r\\n        var size = Number(sizeString);\\r\\n        handlerCheck(!isNaN(size));\\r\\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\\r\\n    }\\r\\n    var method = 'POST';\\r\\n    var timeout = service.maxUploadRetryTime;\\r\\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\\r\\n    requestInfo.headers = headers;\\r\\n    requestInfo.errorHandler = sharedErrorHandler(location);\\r\\n    return requestInfo;\\r\\n}\\r\\n/**\\r\\n * Any uploads via the resumable upload API must transfer a number of bytes\\r\\n * that is a multiple of this number.\\r\\n */\\r\\nvar resumableUploadChunkSize = 256 * 1024;\\r\\n/**\\r\\n * @param url From a call to fbs.requests.createResumableUpload.\\r\\n * @param chunkSize Number of bytes to upload.\\r\\n * @param status The previous status.\\r\\n *     If not passed or null, we start from the beginning.\\r\\n * @throws fbs.Error If the upload is already complete, the passed in status\\r\\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\\r\\n *     for upload.\\r\\n */\\r\\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\\r\\n    // TODO(andysoto): standardize on internal asserts\\r\\n    // assert(!(opt_status && opt_status.finalized));\\r\\n    var status_ = new ResumableUploadStatus(0, 0);\\r\\n    if (status) {\\r\\n        status_.current = status.current;\\r\\n        status_.total = status.total;\\r\\n    }\\r\\n    else {\\r\\n        status_.current = 0;\\r\\n        status_.total = blob.size();\\r\\n    }\\r\\n    if (blob.size() !== status_.total) {\\r\\n        throw serverFileWrongSize();\\r\\n    }\\r\\n    var bytesLeft = status_.total - status_.current;\\r\\n    var bytesToUpload = bytesLeft;\\r\\n    if (chunkSize > 0) {\\r\\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\\r\\n    }\\r\\n    var startByte = status_.current;\\r\\n    var endByte = startByte + bytesToUpload;\\r\\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\\r\\n    var headers = {\\r\\n        'X-Goog-Upload-Command': uploadCommand,\\r\\n        'X-Goog-Upload-Offset': status_.current\\r\\n    };\\r\\n    var body = blob.slice(startByte, endByte);\\r\\n    if (body === null) {\\r\\n        throw cannotSliceBlob();\\r\\n    }\\r\\n    function handler(xhr, text) {\\r\\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\\r\\n        // the 'x-range-md5' header comes back with status code 308 responses.\\r\\n        // We'll only be able to bail out though, because you can't re-upload a\\r\\n        // range that you previously uploaded.\\r\\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\\r\\n        var newCurrent = status_.current + bytesToUpload;\\r\\n        var size = blob.size();\\r\\n        var metadata;\\r\\n        if (uploadStatus === 'final') {\\r\\n            metadata = metadataHandler(service, mappings)(xhr, text);\\r\\n        }\\r\\n        else {\\r\\n            metadata = null;\\r\\n        }\\r\\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\\r\\n    }\\r\\n    var method = 'POST';\\r\\n    var timeout = service.maxUploadRetryTime;\\r\\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\\r\\n    requestInfo.headers = headers;\\r\\n    requestInfo.body = body.uploadData();\\r\\n    requestInfo.progressCallback = progressCallback || null;\\r\\n    requestInfo.errorHandler = sharedErrorHandler(location);\\r\\n    return requestInfo;\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * @struct\\r\\n */\\r\\nvar Observer = /** @class */ (function () {\\r\\n    function Observer(nextOrObserver, error, complete) {\\r\\n        var asFunctions = isFunction(nextOrObserver) ||\\r\\n            isDef(error) ||\\r\\n            isDef(complete);\\r\\n        if (asFunctions) {\\r\\n            this.next = nextOrObserver;\\r\\n            this.error = error || null;\\r\\n            this.complete = complete || null;\\r\\n        }\\r\\n        else {\\r\\n            var observer = nextOrObserver;\\r\\n            this.next = observer.next || null;\\r\\n            this.error = observer.error || null;\\r\\n            this.complete = observer.complete || null;\\r\\n        }\\r\\n    }\\r\\n    return Observer;\\r\\n}());\\n\\nvar UploadTaskSnapshot = /** @class */ (function () {\\r\\n    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\\r\\n        this.bytesTransferred = bytesTransferred;\\r\\n        this.totalBytes = totalBytes;\\r\\n        this.state = state;\\r\\n        this.metadata = metadata;\\r\\n        this.task = task;\\r\\n        this.ref = ref;\\r\\n    }\\r\\n    return UploadTaskSnapshot;\\r\\n}());\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * @param name Name of the function.\\r\\n * @param specs Argument specs.\\r\\n * @param passed The actual arguments passed to the function.\\r\\n * @throws {fbs.Error} If the arguments are invalid.\\r\\n */\\r\\nfunction validate(name, specs, passed) {\\r\\n    var minArgs = specs.length;\\r\\n    var maxArgs = specs.length;\\r\\n    for (var i = 0; i < specs.length; i++) {\\r\\n        if (specs[i].optional) {\\r\\n            minArgs = i;\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n    var validLength = minArgs <= passed.length && passed.length <= maxArgs;\\r\\n    if (!validLength) {\\r\\n        throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\\r\\n    }\\r\\n    for (var i = 0; i < passed.length; i++) {\\r\\n        try {\\r\\n            specs[i].validator(passed[i]);\\r\\n        }\\r\\n        catch (e) {\\r\\n            if (e instanceof Error) {\\r\\n                throw invalidArgument(i, name, e.message);\\r\\n            }\\r\\n            else {\\r\\n                throw invalidArgument(i, name, e);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n/**\\r\\n * @struct\\r\\n */\\r\\nvar ArgSpec = /** @class */ (function () {\\r\\n    function ArgSpec(validator, optional) {\\r\\n        var self = this;\\r\\n        this.validator = function (p) {\\r\\n            if (self.optional && !isJustDef(p)) {\\r\\n                return;\\r\\n            }\\r\\n            validator(p);\\r\\n        };\\r\\n        this.optional = !!optional;\\r\\n    }\\r\\n    return ArgSpec;\\r\\n}());\\r\\nfunction and_(v1, v2) {\\r\\n    return function (p) {\\r\\n        v1(p);\\r\\n        v2(p);\\r\\n    };\\r\\n}\\r\\nfunction stringSpec(validator, optional) {\\r\\n    function stringValidator(p) {\\r\\n        if (!isString(p)) {\\r\\n            throw 'Expected string.';\\r\\n        }\\r\\n    }\\r\\n    var chainedValidator;\\r\\n    if (validator) {\\r\\n        chainedValidator = and_(stringValidator, validator);\\r\\n    }\\r\\n    else {\\r\\n        chainedValidator = stringValidator;\\r\\n    }\\r\\n    return new ArgSpec(chainedValidator, optional);\\r\\n}\\r\\nfunction uploadDataSpec() {\\r\\n    function validator(p) {\\r\\n        var valid = p instanceof Uint8Array ||\\r\\n            p instanceof ArrayBuffer ||\\r\\n            (isNativeBlobDefined() && p instanceof Blob);\\r\\n        if (!valid) {\\r\\n            throw 'Expected Blob or File.';\\r\\n        }\\r\\n    }\\r\\n    return new ArgSpec(validator);\\r\\n}\\r\\nfunction metadataSpec(optional) {\\r\\n    return new ArgSpec(metadataValidator, optional);\\r\\n}\\r\\nfunction listOptionSpec(optional) {\\r\\n    return new ArgSpec(listOptionsValidator, optional);\\r\\n}\\r\\nfunction nonNegativeNumberSpec() {\\r\\n    function validator(p) {\\r\\n        var valid = isNumber(p) && p >= 0;\\r\\n        if (!valid) {\\r\\n            throw 'Expected a number 0 or greater.';\\r\\n        }\\r\\n    }\\r\\n    return new ArgSpec(validator);\\r\\n}\\r\\nfunction looseObjectSpec(validator, optional) {\\r\\n    function isLooseObjectValidator(p) {\\r\\n        var isLooseObject = p === null || (isDef(p) && p instanceof Object);\\r\\n        if (!isLooseObject) {\\r\\n            throw 'Expected an Object.';\\r\\n        }\\r\\n        if (validator !== undefined && validator !== null) {\\r\\n            validator(p);\\r\\n        }\\r\\n    }\\r\\n    return new ArgSpec(isLooseObjectValidator, optional);\\r\\n}\\r\\nfunction nullFunctionSpec(optional) {\\r\\n    function validator(p) {\\r\\n        var valid = p === null || isFunction(p);\\r\\n        if (!valid) {\\r\\n            throw 'Expected a Function.';\\r\\n        }\\r\\n    }\\r\\n    return new ArgSpec(validator, optional);\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * Returns a function that invokes f with its arguments asynchronously as a\\r\\n * microtask, i.e. as soon as possible after the current script returns back\\r\\n * into browser code.\\r\\n */\\r\\n// eslint-disable-next-line @typescript-eslint/ban-types\\r\\nfunction async(f) {\\r\\n    return function () {\\r\\n        var argsToForward = [];\\r\\n        for (var _i = 0; _i < arguments.length; _i++) {\\r\\n            argsToForward[_i] = arguments[_i];\\r\\n        }\\r\\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\\r\\n        Promise.resolve().then(function () { return f.apply(void 0, argsToForward); });\\r\\n    };\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\\r\\n * upload and manage callbacks for various events.\\r\\n */\\r\\nvar UploadTask = /** @class */ (function () {\\r\\n    /**\\r\\n     * @param ref The firebaseStorage.Reference object this task came\\r\\n     *     from, untyped to avoid cyclic dependencies.\\r\\n     * @param blob The blob to upload.\\r\\n     */\\r\\n    function UploadTask(ref, service, location, mappings, blob, metadata) {\\r\\n        var _this = this;\\r\\n        if (metadata === void 0) { metadata = null; }\\r\\n        this.transferred_ = 0;\\r\\n        this.needToFetchStatus_ = false;\\r\\n        this.needToFetchMetadata_ = false;\\r\\n        this.observers_ = [];\\r\\n        this.error_ = null;\\r\\n        this.uploadUrl_ = null;\\r\\n        this.request_ = null;\\r\\n        this.chunkMultiplier_ = 1;\\r\\n        this.resolve_ = null;\\r\\n        this.reject_ = null;\\r\\n        this.ref_ = ref;\\r\\n        this.service_ = service;\\r\\n        this.location_ = location;\\r\\n        this.blob_ = blob;\\r\\n        this.metadata_ = metadata;\\r\\n        this.mappings_ = mappings;\\r\\n        this.resumable_ = this.shouldDoResumable_(this.blob_);\\r\\n        this.state_ = InternalTaskState.RUNNING;\\r\\n        this.errorHandler_ = function (error) {\\r\\n            _this.request_ = null;\\r\\n            _this.chunkMultiplier_ = 1;\\r\\n            if (error.codeEquals(Code.CANCELED)) {\\r\\n                _this.needToFetchStatus_ = true;\\r\\n                _this.completeTransitions_();\\r\\n            }\\r\\n            else {\\r\\n                _this.error_ = error;\\r\\n                _this.transition_(InternalTaskState.ERROR);\\r\\n            }\\r\\n        };\\r\\n        this.metadataErrorHandler_ = function (error) {\\r\\n            _this.request_ = null;\\r\\n            if (error.codeEquals(Code.CANCELED)) {\\r\\n                _this.completeTransitions_();\\r\\n            }\\r\\n            else {\\r\\n                _this.error_ = error;\\r\\n                _this.transition_(InternalTaskState.ERROR);\\r\\n            }\\r\\n        };\\r\\n        this.promise_ = new Promise(function (resolve, reject) {\\r\\n            _this.resolve_ = resolve;\\r\\n            _this.reject_ = reject;\\r\\n            _this.start_();\\r\\n        });\\r\\n        // Prevent uncaught rejections on the internal promise from bubbling out\\r\\n        // to the top level with a dummy handler.\\r\\n        this.promise_.then(null, function () { });\\r\\n    }\\r\\n    UploadTask.prototype.makeProgressCallback_ = function () {\\r\\n        var _this = this;\\r\\n        var sizeBefore = this.transferred_;\\r\\n        return function (loaded) { return _this.updateProgress_(sizeBefore + loaded); };\\r\\n    };\\r\\n    UploadTask.prototype.shouldDoResumable_ = function (blob) {\\r\\n        return blob.size() > 256 * 1024;\\r\\n    };\\r\\n    UploadTask.prototype.start_ = function () {\\r\\n        if (this.state_ !== InternalTaskState.RUNNING) {\\r\\n            // This can happen if someone pauses us in a resume callback, for example.\\r\\n            return;\\r\\n        }\\r\\n        if (this.request_ !== null) {\\r\\n            return;\\r\\n        }\\r\\n        if (this.resumable_) {\\r\\n            if (this.uploadUrl_ === null) {\\r\\n                this.createResumable_();\\r\\n            }\\r\\n            else {\\r\\n                if (this.needToFetchStatus_) {\\r\\n                    this.fetchStatus_();\\r\\n                }\\r\\n                else {\\r\\n                    if (this.needToFetchMetadata_) {\\r\\n                        // Happens if we miss the metadata on upload completion.\\r\\n                        this.fetchMetadata_();\\r\\n                    }\\r\\n                    else {\\r\\n                        this.continueUpload_();\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            this.oneShotUpload_();\\r\\n        }\\r\\n    };\\r\\n    UploadTask.prototype.resolveToken_ = function (callback) {\\r\\n        var _this = this;\\r\\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\\r\\n        this.service_.getAuthToken().then(function (authToken) {\\r\\n            switch (_this.state_) {\\r\\n                case InternalTaskState.RUNNING:\\r\\n                    callback(authToken);\\r\\n                    break;\\r\\n                case InternalTaskState.CANCELING:\\r\\n                    _this.transition_(InternalTaskState.CANCELED);\\r\\n                    break;\\r\\n                case InternalTaskState.PAUSING:\\r\\n                    _this.transition_(InternalTaskState.PAUSED);\\r\\n                    break;\\r\\n            }\\r\\n        });\\r\\n    };\\r\\n    // TODO(andysoto): assert false\\r\\n    UploadTask.prototype.createResumable_ = function () {\\r\\n        var _this = this;\\r\\n        this.resolveToken_(function (authToken) {\\r\\n            var requestInfo = createResumableUpload(_this.service_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\\r\\n            var createRequest = _this.service_.makeRequest(requestInfo, authToken);\\r\\n            _this.request_ = createRequest;\\r\\n            createRequest.getPromise().then(function (url) {\\r\\n                _this.request_ = null;\\r\\n                _this.uploadUrl_ = url;\\r\\n                _this.needToFetchStatus_ = false;\\r\\n                _this.completeTransitions_();\\r\\n            }, _this.errorHandler_);\\r\\n        });\\r\\n    };\\r\\n    UploadTask.prototype.fetchStatus_ = function () {\\r\\n        var _this = this;\\r\\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\\r\\n        var url = this.uploadUrl_;\\r\\n        this.resolveToken_(function (authToken) {\\r\\n            var requestInfo = getResumableUploadStatus(_this.service_, _this.location_, url, _this.blob_);\\r\\n            var statusRequest = _this.service_.makeRequest(requestInfo, authToken);\\r\\n            _this.request_ = statusRequest;\\r\\n            statusRequest.getPromise().then(function (status) {\\r\\n                status = status;\\r\\n                _this.request_ = null;\\r\\n                _this.updateProgress_(status.current);\\r\\n                _this.needToFetchStatus_ = false;\\r\\n                if (status.finalized) {\\r\\n                    _this.needToFetchMetadata_ = true;\\r\\n                }\\r\\n                _this.completeTransitions_();\\r\\n            }, _this.errorHandler_);\\r\\n        });\\r\\n    };\\r\\n    UploadTask.prototype.continueUpload_ = function () {\\r\\n        var _this = this;\\r\\n        var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\\r\\n        var status = new ResumableUploadStatus(this.transferred_, this.blob_.size());\\r\\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\\r\\n        var url = this.uploadUrl_;\\r\\n        this.resolveToken_(function (authToken) {\\r\\n            var requestInfo;\\r\\n            try {\\r\\n                requestInfo = continueResumableUpload(_this.location_, _this.service_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\\r\\n            }\\r\\n            catch (e) {\\r\\n                _this.error_ = e;\\r\\n                _this.transition_(InternalTaskState.ERROR);\\r\\n                return;\\r\\n            }\\r\\n            var uploadRequest = _this.service_.makeRequest(requestInfo, authToken);\\r\\n            _this.request_ = uploadRequest;\\r\\n            uploadRequest\\r\\n                .getPromise()\\r\\n                .then(function (newStatus) {\\r\\n                _this.increaseMultiplier_();\\r\\n                _this.request_ = null;\\r\\n                _this.updateProgress_(newStatus.current);\\r\\n                if (newStatus.finalized) {\\r\\n                    _this.metadata_ = newStatus.metadata;\\r\\n                    _this.transition_(InternalTaskState.SUCCESS);\\r\\n                }\\r\\n                else {\\r\\n                    _this.completeTransitions_();\\r\\n                }\\r\\n            }, _this.errorHandler_);\\r\\n        });\\r\\n    };\\r\\n    UploadTask.prototype.increaseMultiplier_ = function () {\\r\\n        var currentSize = resumableUploadChunkSize * this.chunkMultiplier_;\\r\\n        // Max chunk size is 32M.\\r\\n        if (currentSize < 32 * 1024 * 1024) {\\r\\n            this.chunkMultiplier_ *= 2;\\r\\n        }\\r\\n    };\\r\\n    UploadTask.prototype.fetchMetadata_ = function () {\\r\\n        var _this = this;\\r\\n        this.resolveToken_(function (authToken) {\\r\\n            var requestInfo = getMetadata(_this.service_, _this.location_, _this.mappings_);\\r\\n            var metadataRequest = _this.service_.makeRequest(requestInfo, authToken);\\r\\n            _this.request_ = metadataRequest;\\r\\n            metadataRequest.getPromise().then(function (metadata) {\\r\\n                _this.request_ = null;\\r\\n                _this.metadata_ = metadata;\\r\\n                _this.transition_(InternalTaskState.SUCCESS);\\r\\n            }, _this.metadataErrorHandler_);\\r\\n        });\\r\\n    };\\r\\n    UploadTask.prototype.oneShotUpload_ = function () {\\r\\n        var _this = this;\\r\\n        this.resolveToken_(function (authToken) {\\r\\n            var requestInfo = multipartUpload(_this.service_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\\r\\n            var multipartRequest = _this.service_.makeRequest(requestInfo, authToken);\\r\\n            _this.request_ = multipartRequest;\\r\\n            multipartRequest.getPromise().then(function (metadata) {\\r\\n                _this.request_ = null;\\r\\n                _this.metadata_ = metadata;\\r\\n                _this.updateProgress_(_this.blob_.size());\\r\\n                _this.transition_(InternalTaskState.SUCCESS);\\r\\n            }, _this.errorHandler_);\\r\\n        });\\r\\n    };\\r\\n    UploadTask.prototype.updateProgress_ = function (transferred) {\\r\\n        var old = this.transferred_;\\r\\n        this.transferred_ = transferred;\\r\\n        // A progress update can make the \\\"transferred\\\" value smaller (e.g. a\\r\\n        // partial upload not completed by server, after which the \\\"transferred\\\"\\r\\n        // value may reset to the value at the beginning of the request).\\r\\n        if (this.transferred_ !== old) {\\r\\n            this.notifyObservers_();\\r\\n        }\\r\\n    };\\r\\n    UploadTask.prototype.transition_ = function (state) {\\r\\n        if (this.state_ === state) {\\r\\n            return;\\r\\n        }\\r\\n        switch (state) {\\r\\n            case InternalTaskState.CANCELING:\\r\\n                // TODO(andysoto):\\r\\n                // assert(this.state_ === InternalTaskState.RUNNING ||\\r\\n                //        this.state_ === InternalTaskState.PAUSING);\\r\\n                this.state_ = state;\\r\\n                if (this.request_ !== null) {\\r\\n                    this.request_.cancel();\\r\\n                }\\r\\n                break;\\r\\n            case InternalTaskState.PAUSING:\\r\\n                // TODO(andysoto):\\r\\n                // assert(this.state_ === InternalTaskState.RUNNING);\\r\\n                this.state_ = state;\\r\\n                if (this.request_ !== null) {\\r\\n                    this.request_.cancel();\\r\\n                }\\r\\n                break;\\r\\n            case InternalTaskState.RUNNING:\\r\\n                // TODO(andysoto):\\r\\n                // assert(this.state_ === InternalTaskState.PAUSED ||\\r\\n                //        this.state_ === InternalTaskState.PAUSING);\\r\\n                var wasPaused = this.state_ === InternalTaskState.PAUSED;\\r\\n                this.state_ = state;\\r\\n                if (wasPaused) {\\r\\n                    this.notifyObservers_();\\r\\n                    this.start_();\\r\\n                }\\r\\n                break;\\r\\n            case InternalTaskState.PAUSED:\\r\\n                // TODO(andysoto):\\r\\n                // assert(this.state_ === InternalTaskState.PAUSING);\\r\\n                this.state_ = state;\\r\\n                this.notifyObservers_();\\r\\n                break;\\r\\n            case InternalTaskState.CANCELED:\\r\\n                // TODO(andysoto):\\r\\n                // assert(this.state_ === InternalTaskState.PAUSED ||\\r\\n                //        this.state_ === InternalTaskState.CANCELING);\\r\\n                this.error_ = canceled();\\r\\n                this.state_ = state;\\r\\n                this.notifyObservers_();\\r\\n                break;\\r\\n            case InternalTaskState.ERROR:\\r\\n                // TODO(andysoto):\\r\\n                // assert(this.state_ === InternalTaskState.RUNNING ||\\r\\n                //        this.state_ === InternalTaskState.PAUSING ||\\r\\n                //        this.state_ === InternalTaskState.CANCELING);\\r\\n                this.state_ = state;\\r\\n                this.notifyObservers_();\\r\\n                break;\\r\\n            case InternalTaskState.SUCCESS:\\r\\n                // TODO(andysoto):\\r\\n                // assert(this.state_ === InternalTaskState.RUNNING ||\\r\\n                //        this.state_ === InternalTaskState.PAUSING ||\\r\\n                //        this.state_ === InternalTaskState.CANCELING);\\r\\n                this.state_ = state;\\r\\n                this.notifyObservers_();\\r\\n                break;\\r\\n        }\\r\\n    };\\r\\n    UploadTask.prototype.completeTransitions_ = function () {\\r\\n        switch (this.state_) {\\r\\n            case InternalTaskState.PAUSING:\\r\\n                this.transition_(InternalTaskState.PAUSED);\\r\\n                break;\\r\\n            case InternalTaskState.CANCELING:\\r\\n                this.transition_(InternalTaskState.CANCELED);\\r\\n                break;\\r\\n            case InternalTaskState.RUNNING:\\r\\n                this.start_();\\r\\n                break;\\r\\n        }\\r\\n    };\\r\\n    Object.defineProperty(UploadTask.prototype, \\\"snapshot\\\", {\\r\\n        get: function () {\\r\\n            var externalState = taskStateFromInternalTaskState(this.state_);\\r\\n            return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    /**\\r\\n     * Adds a callback for an event.\\r\\n     * @param type The type of event to listen for.\\r\\n     */\\r\\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\\r\\n        function typeValidator() {\\r\\n            if (type !== TaskEvent.STATE_CHANGED) {\\r\\n                throw \\\"Expected one of the event types: [\\\" + TaskEvent.STATE_CHANGED + \\\"].\\\";\\r\\n            }\\r\\n        }\\r\\n        var nextOrObserverMessage = 'Expected a function or an Object with one of ' +\\r\\n            '`next`, `error`, `complete` properties.';\\r\\n        var nextValidator = nullFunctionSpec(true).validator;\\r\\n        var observerValidator = looseObjectSpec(null, true).validator;\\r\\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\\r\\n        function nextOrObserverValidator(p) {\\r\\n            try {\\r\\n                nextValidator(p);\\r\\n                return;\\r\\n            }\\r\\n            catch (e) { }\\r\\n            try {\\r\\n                observerValidator(p);\\r\\n                var anyDefined = isJustDef(p['next']) ||\\r\\n                    isJustDef(p['error']) ||\\r\\n                    isJustDef(p['complete']);\\r\\n                if (!anyDefined) {\\r\\n                    throw '';\\r\\n                }\\r\\n                return;\\r\\n            }\\r\\n            catch (e) {\\r\\n                throw nextOrObserverMessage;\\r\\n            }\\r\\n        }\\r\\n        var specs = [\\r\\n            stringSpec(typeValidator),\\r\\n            looseObjectSpec(nextOrObserverValidator, true),\\r\\n            nullFunctionSpec(true),\\r\\n            nullFunctionSpec(true)\\r\\n        ];\\r\\n        validate('on', specs, arguments);\\r\\n        var self = this;\\r\\n        function makeBinder(specs) {\\r\\n            function binder(nextOrObserver, error, complete) {\\r\\n                if (specs !== null) {\\r\\n                    validate('on', specs, arguments);\\r\\n                }\\r\\n                var observer = new Observer(nextOrObserver, error, completed);\\r\\n                self.addObserver_(observer);\\r\\n                return function () {\\r\\n                    self.removeObserver_(observer);\\r\\n                };\\r\\n            }\\r\\n            return binder;\\r\\n        }\\r\\n        function binderNextOrObserverValidator(p) {\\r\\n            if (p === null) {\\r\\n                throw nextOrObserverMessage;\\r\\n            }\\r\\n            nextOrObserverValidator(p);\\r\\n        }\\r\\n        var binderSpecs = [\\r\\n            looseObjectSpec(binderNextOrObserverValidator),\\r\\n            nullFunctionSpec(true),\\r\\n            nullFunctionSpec(true)\\r\\n        ];\\r\\n        var typeOnly = !(isJustDef(nextOrObserver) ||\\r\\n            isJustDef(error) ||\\r\\n            isJustDef(completed));\\r\\n        if (typeOnly) {\\r\\n            return makeBinder(binderSpecs);\\r\\n        }\\r\\n        else {\\r\\n            return makeBinder(null)(nextOrObserver, error, completed);\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * This object behaves like a Promise, and resolves with its snapshot data\\r\\n     * when the upload completes.\\r\\n     * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\\r\\n     * @param onRejected The rejection callback.\\r\\n     */\\r\\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\\r\\n        // These casts are needed so that TypeScript can infer the types of the\\r\\n        // resulting Promise.\\r\\n        return this.promise_.then(onFulfilled, onRejected);\\r\\n    };\\r\\n    /**\\r\\n     * Equivalent to calling `then(null, onRejected)`.\\r\\n     */\\r\\n    UploadTask.prototype.catch = function (onRejected) {\\r\\n        return this.then(null, onRejected);\\r\\n    };\\r\\n    /**\\r\\n     * Adds the given observer.\\r\\n     */\\r\\n    UploadTask.prototype.addObserver_ = function (observer) {\\r\\n        this.observers_.push(observer);\\r\\n        this.notifyObserver_(observer);\\r\\n    };\\r\\n    /**\\r\\n     * Removes the given observer.\\r\\n     */\\r\\n    UploadTask.prototype.removeObserver_ = function (observer) {\\r\\n        var i = this.observers_.indexOf(observer);\\r\\n        if (i !== -1) {\\r\\n            this.observers_.splice(i, 1);\\r\\n        }\\r\\n    };\\r\\n    UploadTask.prototype.notifyObservers_ = function () {\\r\\n        var _this = this;\\r\\n        this.finishPromise_();\\r\\n        var observers = this.observers_.slice();\\r\\n        observers.forEach(function (observer) {\\r\\n            _this.notifyObserver_(observer);\\r\\n        });\\r\\n    };\\r\\n    UploadTask.prototype.finishPromise_ = function () {\\r\\n        if (this.resolve_ !== null) {\\r\\n            var triggered = true;\\r\\n            switch (taskStateFromInternalTaskState(this.state_)) {\\r\\n                case TaskState.SUCCESS:\\r\\n                    async(this.resolve_.bind(null, this.snapshot))();\\r\\n                    break;\\r\\n                case TaskState.CANCELED:\\r\\n                case TaskState.ERROR:\\r\\n                    var toCall = this.reject_;\\r\\n                    async(toCall.bind(null, this.error_))();\\r\\n                    break;\\r\\n                default:\\r\\n                    triggered = false;\\r\\n                    break;\\r\\n            }\\r\\n            if (triggered) {\\r\\n                this.resolve_ = null;\\r\\n                this.reject_ = null;\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    UploadTask.prototype.notifyObserver_ = function (observer) {\\r\\n        var externalState = taskStateFromInternalTaskState(this.state_);\\r\\n        switch (externalState) {\\r\\n            case TaskState.RUNNING:\\r\\n            case TaskState.PAUSED:\\r\\n                if (observer.next) {\\r\\n                    async(observer.next.bind(observer, this.snapshot))();\\r\\n                }\\r\\n                break;\\r\\n            case TaskState.SUCCESS:\\r\\n                if (observer.complete) {\\r\\n                    async(observer.complete.bind(observer))();\\r\\n                }\\r\\n                break;\\r\\n            case TaskState.CANCELED:\\r\\n            case TaskState.ERROR:\\r\\n                if (observer.error) {\\r\\n                    async(observer.error.bind(observer, this.error_))();\\r\\n                }\\r\\n                break;\\r\\n            default:\\r\\n                // TODO(andysoto): assert(false);\\r\\n                if (observer.error) {\\r\\n                    async(observer.error.bind(observer, this.error_))();\\r\\n                }\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * Resumes a paused task. Has no effect on a currently running or failed task.\\r\\n     * @return True if the operation took effect, false if ignored.\\r\\n     */\\r\\n    UploadTask.prototype.resume = function () {\\r\\n        validate('resume', [], arguments);\\r\\n        var valid = this.state_ === InternalTaskState.PAUSED ||\\r\\n            this.state_ === InternalTaskState.PAUSING;\\r\\n        if (valid) {\\r\\n            this.transition_(InternalTaskState.RUNNING);\\r\\n        }\\r\\n        return valid;\\r\\n    };\\r\\n    /**\\r\\n     * Pauses a currently running task. Has no effect on a paused or failed task.\\r\\n     * @return True if the operation took effect, false if ignored.\\r\\n     */\\r\\n    UploadTask.prototype.pause = function () {\\r\\n        validate('pause', [], arguments);\\r\\n        var valid = this.state_ === InternalTaskState.RUNNING;\\r\\n        if (valid) {\\r\\n            this.transition_(InternalTaskState.PAUSING);\\r\\n        }\\r\\n        return valid;\\r\\n    };\\r\\n    /**\\r\\n     * Cancels a currently running or paused task. Has no effect on a complete or\\r\\n     * failed task.\\r\\n     * @return True if the operation took effect, false if ignored.\\r\\n     */\\r\\n    UploadTask.prototype.cancel = function () {\\r\\n        validate('cancel', [], arguments);\\r\\n        var valid = this.state_ === InternalTaskState.RUNNING ||\\r\\n            this.state_ === InternalTaskState.PAUSING;\\r\\n        if (valid) {\\r\\n            this.transition_(InternalTaskState.CANCELING);\\r\\n        }\\r\\n        return valid;\\r\\n    };\\r\\n    return UploadTask;\\r\\n}());\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2019 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * Provides methods to interact with a bucket in the Firebase Storage service.\\r\\n * @param location An fbs.location, or the URL at\\r\\n *     which to base this object, in one of the following forms:\\r\\n *         gs://<bucket>/<object-path>\\r\\n *         http[s]://firebasestorage.googleapis.com/\\r\\n *                     <api-version>/b/<bucket>/o/<object-path>\\r\\n *     Any query or fragment strings will be ignored in the http[s]\\r\\n *     format. If no value is passed, the storage object will use a URL based on\\r\\n *     the project ID of the base firebase.App instance.\\r\\n */\\r\\nvar Reference = /** @class */ (function () {\\r\\n    function Reference(service, location) {\\r\\n        this.service = service;\\r\\n        if (location instanceof Location) {\\r\\n            this.location = location;\\r\\n        }\\r\\n        else {\\r\\n            this.location = Location.makeFromUrl(location);\\r\\n        }\\r\\n    }\\r\\n    /**\\r\\n     * @return The URL for the bucket and path this object references,\\r\\n     *     in the form gs://<bucket>/<object-path>\\r\\n     * @override\\r\\n     */\\r\\n    Reference.prototype.toString = function () {\\r\\n        validate('toString', [], arguments);\\r\\n        return 'gs://' + this.location.bucket + '/' + this.location.path;\\r\\n    };\\r\\n    Reference.prototype.newRef = function (service, location) {\\r\\n        return new Reference(service, location);\\r\\n    };\\r\\n    Reference.prototype.mappings = function () {\\r\\n        return getMappings();\\r\\n    };\\r\\n    /**\\r\\n     * @return A reference to the object obtained by\\r\\n     *     appending childPath, removing any duplicate, beginning, or trailing\\r\\n     *     slashes.\\r\\n     */\\r\\n    Reference.prototype.child = function (childPath) {\\r\\n        validate('child', [stringSpec()], arguments);\\r\\n        var newPath = child(this.location.path, childPath);\\r\\n        var location = new Location(this.location.bucket, newPath);\\r\\n        return this.newRef(this.service, location);\\r\\n    };\\r\\n    Object.defineProperty(Reference.prototype, \\\"parent\\\", {\\r\\n        /**\\r\\n         * @return A reference to the parent of the\\r\\n         *     current object, or null if the current object is the root.\\r\\n         */\\r\\n        get: function () {\\r\\n            var newPath = parent(this.location.path);\\r\\n            if (newPath === null) {\\r\\n                return null;\\r\\n            }\\r\\n            var location = new Location(this.location.bucket, newPath);\\r\\n            return this.newRef(this.service, location);\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(Reference.prototype, \\\"root\\\", {\\r\\n        /**\\r\\n         * @return An reference to the root of this\\r\\n         *     object's bucket.\\r\\n         */\\r\\n        get: function () {\\r\\n            var location = new Location(this.location.bucket, '');\\r\\n            return this.newRef(this.service, location);\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(Reference.prototype, \\\"bucket\\\", {\\r\\n        get: function () {\\r\\n            return this.location.bucket;\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(Reference.prototype, \\\"fullPath\\\", {\\r\\n        get: function () {\\r\\n            return this.location.path;\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(Reference.prototype, \\\"name\\\", {\\r\\n        get: function () {\\r\\n            return lastComponent(this.location.path);\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(Reference.prototype, \\\"storage\\\", {\\r\\n        get: function () {\\r\\n            return this.service;\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    /**\\r\\n     * Uploads a blob to this object's location.\\r\\n     * @param data The blob to upload.\\r\\n     * @return An UploadTask that lets you control and\\r\\n     *     observe the upload.\\r\\n     */\\r\\n    Reference.prototype.put = function (data, metadata) {\\r\\n        if (metadata === void 0) { metadata = null; }\\r\\n        validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\\r\\n        this.throwIfRoot_('put');\\r\\n        return new UploadTask(this, this.service, this.location, this.mappings(), new FbsBlob(data), metadata);\\r\\n    };\\r\\n    /**\\r\\n     * Uploads a string to this object's location.\\r\\n     * @param value The string to upload.\\r\\n     * @param format The format of the string to upload.\\r\\n     * @return An UploadTask that lets you control and\\r\\n     *     observe the upload.\\r\\n     */\\r\\n    Reference.prototype.putString = function (value, format, metadata) {\\r\\n        if (format === void 0) { format = StringFormat.RAW; }\\r\\n        validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);\\r\\n        this.throwIfRoot_('putString');\\r\\n        var data = dataFromString(format, value);\\r\\n        var metadataClone = Object.assign({}, metadata);\\r\\n        if (!isDef(metadataClone['contentType']) &&\\r\\n            isDef(data.contentType)) {\\r\\n            metadataClone['contentType'] = data.contentType;\\r\\n        }\\r\\n        return new UploadTask(this, this.service, this.location, this.mappings(), new FbsBlob(data.data, true), metadataClone);\\r\\n    };\\r\\n    /**\\r\\n     * Deletes the object at this location.\\r\\n     * @return A promise that resolves if the deletion succeeds.\\r\\n     */\\r\\n    Reference.prototype.delete = function () {\\r\\n        var _this = this;\\r\\n        validate('delete', [], arguments);\\r\\n        this.throwIfRoot_('delete');\\r\\n        return this.service.getAuthToken().then(function (authToken) {\\r\\n            var requestInfo = deleteObject(_this.service, _this.location);\\r\\n            return _this.service.makeRequest(requestInfo, authToken).getPromise();\\r\\n        });\\r\\n    };\\r\\n    /**\\r\\n     * List all items (files) and prefixes (folders) under this storage reference.\\r\\n     *\\r\\n     * This is a helper method for calling list() repeatedly until there are\\r\\n     * no more results. The default pagination size is 1000.\\r\\n     *\\r\\n     * Note: The results may not be consistent if objects are changed while this\\r\\n     * operation is running.\\r\\n     *\\r\\n     * Warning: listAll may potentially consume too many resources if there are\\r\\n     * too many results.\\r\\n     *\\r\\n     * @return A Promise that resolves with all the items and prefixes under\\r\\n     *      the current storage reference. `prefixes` contains references to\\r\\n     *      sub-directories and `items` contains references to objects in this\\r\\n     *      folder. `nextPageToken` is never returned.\\r\\n     */\\r\\n    Reference.prototype.listAll = function () {\\r\\n        validate('listAll', [], arguments);\\r\\n        var accumulator = {\\r\\n            prefixes: [],\\r\\n            items: []\\r\\n        };\\r\\n        return this.listAllHelper(accumulator).then(function () { return accumulator; });\\r\\n    };\\r\\n    Reference.prototype.listAllHelper = function (accumulator, pageToken) {\\r\\n        return tslib.__awaiter(this, void 0, void 0, function () {\\r\\n            var opt, nextPage;\\r\\n            var _a, _b;\\r\\n            return tslib.__generator(this, function (_c) {\\r\\n                switch (_c.label) {\\r\\n                    case 0:\\r\\n                        opt = {\\r\\n                            // maxResults is 1000 by default.\\r\\n                            pageToken: pageToken\\r\\n                        };\\r\\n                        return [4 /*yield*/, this.list(opt)];\\r\\n                    case 1:\\r\\n                        nextPage = _c.sent();\\r\\n                        (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\\r\\n                        (_b = accumulator.items).push.apply(_b, nextPage.items);\\r\\n                        if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];\\r\\n                        return [4 /*yield*/, this.listAllHelper(accumulator, nextPage.nextPageToken)];\\r\\n                    case 2:\\r\\n                        _c.sent();\\r\\n                        _c.label = 3;\\r\\n                    case 3: return [2 /*return*/];\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    };\\r\\n    /**\\r\\n     * List items (files) and prefixes (folders) under this storage reference.\\r\\n     *\\r\\n     * List API is only available for Firebase Rules Version 2.\\r\\n     *\\r\\n     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\\r\\n     * delimited folder structure.\\r\\n     * Refer to GCS's List API if you want to learn more.\\r\\n     *\\r\\n     * To adhere to Firebase Rules's Semantics, Firebase Storage does not\\r\\n     * support objects whose paths end with \\\"/\\\" or contain two consecutive\\r\\n     * \\\"/\\\"s. Firebase Storage List API will filter these unsupported objects.\\r\\n     * list() may fail if there are too many unsupported objects in the bucket.\\r\\n     *\\r\\n     * @param options See ListOptions for details.\\r\\n     * @return A Promise that resolves with the items and prefixes.\\r\\n     *      `prefixes` contains references to sub-folders and `items`\\r\\n     *      contains references to objects in this folder. `nextPageToken`\\r\\n     *      can be used to get the rest of the results.\\r\\n     */\\r\\n    Reference.prototype.list = function (options) {\\r\\n        validate('list', [listOptionSpec(true)], arguments);\\r\\n        var self = this;\\r\\n        return this.service.getAuthToken().then(function (authToken) {\\r\\n            var op = options || {};\\r\\n            var requestInfo = list(self.service, self.location, \\r\\n            /*delimiter= */ '/', op.pageToken, op.maxResults);\\r\\n            return self.service.makeRequest(requestInfo, authToken).getPromise();\\r\\n        });\\r\\n    };\\r\\n    /**\\r\\n     *     A promise that resolves with the metadata for this object. If this\\r\\n     *     object doesn't exist or metadata cannot be retreived, the promise is\\r\\n     *     rejected.\\r\\n     */\\r\\n    Reference.prototype.getMetadata = function () {\\r\\n        var _this = this;\\r\\n        validate('getMetadata', [], arguments);\\r\\n        this.throwIfRoot_('getMetadata');\\r\\n        return this.service.getAuthToken().then(function (authToken) {\\r\\n            var requestInfo = getMetadata(_this.service, _this.location, _this.mappings());\\r\\n            return _this.service.makeRequest(requestInfo, authToken).getPromise();\\r\\n        });\\r\\n    };\\r\\n    /**\\r\\n     * Updates the metadata for this object.\\r\\n     * @param metadata The new metadata for the object.\\r\\n     *     Only values that have been explicitly set will be changed. Explicitly\\r\\n     *     setting a value to null will remove the metadata.\\r\\n     * @return A promise that resolves\\r\\n     *     with the new metadata for this object.\\r\\n     *     @see firebaseStorage.Reference.prototype.getMetadata\\r\\n     */\\r\\n    Reference.prototype.updateMetadata = function (metadata) {\\r\\n        var _this = this;\\r\\n        validate('updateMetadata', [metadataSpec()], arguments);\\r\\n        this.throwIfRoot_('updateMetadata');\\r\\n        return this.service.getAuthToken().then(function (authToken) {\\r\\n            var requestInfo = updateMetadata(_this.service, _this.location, metadata, _this.mappings());\\r\\n            return _this.service.makeRequest(requestInfo, authToken).getPromise();\\r\\n        });\\r\\n    };\\r\\n    /**\\r\\n     * @return A promise that resolves with the download\\r\\n     *     URL for this object.\\r\\n     */\\r\\n    Reference.prototype.getDownloadURL = function () {\\r\\n        var _this = this;\\r\\n        validate('getDownloadURL', [], arguments);\\r\\n        this.throwIfRoot_('getDownloadURL');\\r\\n        return this.service.getAuthToken().then(function (authToken) {\\r\\n            var requestInfo = getDownloadUrl(_this.service, _this.location, _this.mappings());\\r\\n            return _this.service\\r\\n                .makeRequest(requestInfo, authToken)\\r\\n                .getPromise()\\r\\n                .then(function (url) {\\r\\n                if (url === null) {\\r\\n                    throw noDownloadURL();\\r\\n                }\\r\\n                return url;\\r\\n            });\\r\\n        });\\r\\n    };\\r\\n    Reference.prototype.throwIfRoot_ = function (name) {\\r\\n        if (this.location.path === '') {\\r\\n            throw invalidRootOperation(name);\\r\\n        }\\r\\n    };\\r\\n    return Reference;\\r\\n}());\\n\\n/**\\r\\n * A request whose promise always fails.\\r\\n * @struct\\r\\n * @template T\\r\\n */\\r\\nvar FailRequest = /** @class */ (function () {\\r\\n    function FailRequest(error) {\\r\\n        this.promise_ = Promise.reject(error);\\r\\n    }\\r\\n    /** @inheritDoc */\\r\\n    FailRequest.prototype.getPromise = function () {\\r\\n        return this.promise_;\\r\\n    };\\r\\n    /** @inheritDoc */\\r\\n    FailRequest.prototype.cancel = function (_appDelete) {\\r\\n    };\\r\\n    return FailRequest;\\r\\n}());\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * @param f May be invoked\\r\\n *     before the function returns.\\r\\n * @param callback Get all the arguments passed to the function\\r\\n *     passed to f, including the initial boolean.\\r\\n */\\r\\nfunction start(f, \\r\\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\\r\\ncallback, timeout) {\\r\\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\\r\\n    // type instead of a bunch of functions with state shared in the closure)\\r\\n    var waitSeconds = 1;\\r\\n    // Would type this as \\\"number\\\" but that doesn't work for Node so \\u00af\\\\_(\\u30c4)_/\\u00af\\r\\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\\r\\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\\r\\n    var timeoutId = null;\\r\\n    var hitTimeout = false;\\r\\n    var cancelState = 0;\\r\\n    function canceled() {\\r\\n        return cancelState === 2;\\r\\n    }\\r\\n    var triggeredCallback = false;\\r\\n    // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\\r\\n    // the no-explicit-any rule when ESlint releases it.\\r\\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\\r\\n    function triggerCallback() {\\r\\n        var args = [];\\r\\n        for (var _i = 0; _i < arguments.length; _i++) {\\r\\n            args[_i] = arguments[_i];\\r\\n        }\\r\\n        if (!triggeredCallback) {\\r\\n            triggeredCallback = true;\\r\\n            callback.apply(null, args);\\r\\n        }\\r\\n    }\\r\\n    function callWithDelay(millis) {\\r\\n        timeoutId = setTimeout(function () {\\r\\n            timeoutId = null;\\r\\n            f(handler, canceled());\\r\\n        }, millis);\\r\\n    }\\r\\n    // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\\r\\n    // the no-explicit-any rule when ESlint releases it.\\r\\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\\r\\n    function handler(success) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        if (triggeredCallback) {\\r\\n            return;\\r\\n        }\\r\\n        if (success) {\\r\\n            triggerCallback.call.apply(triggerCallback, tslib.__spreadArrays([null, success], args));\\r\\n            return;\\r\\n        }\\r\\n        var mustStop = canceled() || hitTimeout;\\r\\n        if (mustStop) {\\r\\n            triggerCallback.call.apply(triggerCallback, tslib.__spreadArrays([null, success], args));\\r\\n            return;\\r\\n        }\\r\\n        if (waitSeconds < 64) {\\r\\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\\r\\n            waitSeconds *= 2;\\r\\n        }\\r\\n        var waitMillis;\\r\\n        if (cancelState === 1) {\\r\\n            cancelState = 2;\\r\\n            waitMillis = 0;\\r\\n        }\\r\\n        else {\\r\\n            waitMillis = (waitSeconds + Math.random()) * 1000;\\r\\n        }\\r\\n        callWithDelay(waitMillis);\\r\\n    }\\r\\n    var stopped = false;\\r\\n    function stop(wasTimeout) {\\r\\n        if (stopped) {\\r\\n            return;\\r\\n        }\\r\\n        stopped = true;\\r\\n        if (triggeredCallback) {\\r\\n            return;\\r\\n        }\\r\\n        if (timeoutId !== null) {\\r\\n            if (!wasTimeout) {\\r\\n                cancelState = 2;\\r\\n            }\\r\\n            clearTimeout(timeoutId);\\r\\n            callWithDelay(0);\\r\\n        }\\r\\n        else {\\r\\n            if (!wasTimeout) {\\r\\n                cancelState = 1;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    callWithDelay(0);\\r\\n    setTimeout(function () {\\r\\n        hitTimeout = true;\\r\\n        stop(true);\\r\\n    }, timeout);\\r\\n    return stop;\\r\\n}\\r\\n/**\\r\\n * Stops the retry loop from repeating.\\r\\n * If the function is currently \\\"in between\\\" retries, it is invoked immediately\\r\\n * with the second parameter as \\\"true\\\". Otherwise, it will be invoked once more\\r\\n * after the current invocation finishes iff the current invocation would have\\r\\n * triggered another retry.\\r\\n */\\r\\nfunction stop(id) {\\r\\n    id(false);\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * @struct\\r\\n * @template T\\r\\n */\\r\\nvar NetworkRequest = /** @class */ (function () {\\r\\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\\r\\n        var _this = this;\\r\\n        this.pendingXhr_ = null;\\r\\n        this.backoffId_ = null;\\r\\n        this.canceled_ = false;\\r\\n        this.appDelete_ = false;\\r\\n        this.url_ = url;\\r\\n        this.method_ = method;\\r\\n        this.headers_ = headers;\\r\\n        this.body_ = body;\\r\\n        this.successCodes_ = successCodes.slice();\\r\\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\\r\\n        this.callback_ = callback;\\r\\n        this.errorCallback_ = errorCallback;\\r\\n        this.progressCallback_ = progressCallback;\\r\\n        this.timeout_ = timeout;\\r\\n        this.pool_ = pool;\\r\\n        this.promise_ = new Promise(function (resolve, reject) {\\r\\n            _this.resolve_ = resolve;\\r\\n            _this.reject_ = reject;\\r\\n            _this.start_();\\r\\n        });\\r\\n    }\\r\\n    /**\\r\\n     * Actually starts the retry loop.\\r\\n     */\\r\\n    NetworkRequest.prototype.start_ = function () {\\r\\n        var self = this;\\r\\n        function doTheRequest(backoffCallback, canceled) {\\r\\n            if (canceled) {\\r\\n                backoffCallback(false, new RequestEndStatus(false, null, true));\\r\\n                return;\\r\\n            }\\r\\n            var xhr = self.pool_.createXhrIo();\\r\\n            self.pendingXhr_ = xhr;\\r\\n            function progressListener(progressEvent) {\\r\\n                var loaded = progressEvent.loaded;\\r\\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\\r\\n                if (self.progressCallback_ !== null) {\\r\\n                    self.progressCallback_(loaded, total);\\r\\n                }\\r\\n            }\\r\\n            if (self.progressCallback_ !== null) {\\r\\n                xhr.addUploadProgressListener(progressListener);\\r\\n            }\\r\\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\\r\\n            xhr\\r\\n                .send(self.url_, self.method_, self.body_, self.headers_)\\r\\n                .then(function (xhr) {\\r\\n                if (self.progressCallback_ !== null) {\\r\\n                    xhr.removeUploadProgressListener(progressListener);\\r\\n                }\\r\\n                self.pendingXhr_ = null;\\r\\n                xhr = xhr;\\r\\n                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\\r\\n                var status = xhr.getStatus();\\r\\n                if (!hitServer || self.isRetryStatusCode_(status)) {\\r\\n                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\\r\\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\\r\\n                    return;\\r\\n                }\\r\\n                var successCode = self.successCodes_.indexOf(status) !== -1;\\r\\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\\r\\n            });\\r\\n        }\\r\\n        /**\\r\\n         * @param requestWentThrough True if the request eventually went\\r\\n         *     through, false if it hit the retry limit or was canceled.\\r\\n         */\\r\\n        function backoffDone(requestWentThrough, status) {\\r\\n            var resolve = self.resolve_;\\r\\n            var reject = self.reject_;\\r\\n            var xhr = status.xhr;\\r\\n            if (status.wasSuccessCode) {\\r\\n                try {\\r\\n                    var result = self.callback_(xhr, xhr.getResponseText());\\r\\n                    if (isJustDef(result)) {\\r\\n                        resolve(result);\\r\\n                    }\\r\\n                    else {\\r\\n                        resolve();\\r\\n                    }\\r\\n                }\\r\\n                catch (e) {\\r\\n                    reject(e);\\r\\n                }\\r\\n            }\\r\\n            else {\\r\\n                if (xhr !== null) {\\r\\n                    var err = unknown();\\r\\n                    err.setServerResponseProp(xhr.getResponseText());\\r\\n                    if (self.errorCallback_) {\\r\\n                        reject(self.errorCallback_(xhr, err));\\r\\n                    }\\r\\n                    else {\\r\\n                        reject(err);\\r\\n                    }\\r\\n                }\\r\\n                else {\\r\\n                    if (status.canceled) {\\r\\n                        var err = self.appDelete_ ? appDeleted() : canceled();\\r\\n                        reject(err);\\r\\n                    }\\r\\n                    else {\\r\\n                        var err = retryLimitExceeded();\\r\\n                        reject(err);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        if (this.canceled_) {\\r\\n            backoffDone(false, new RequestEndStatus(false, null, true));\\r\\n        }\\r\\n        else {\\r\\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\\r\\n        }\\r\\n    };\\r\\n    /** @inheritDoc */\\r\\n    NetworkRequest.prototype.getPromise = function () {\\r\\n        return this.promise_;\\r\\n    };\\r\\n    /** @inheritDoc */\\r\\n    NetworkRequest.prototype.cancel = function (appDelete) {\\r\\n        this.canceled_ = true;\\r\\n        this.appDelete_ = appDelete || false;\\r\\n        if (this.backoffId_ !== null) {\\r\\n            stop(this.backoffId_);\\r\\n        }\\r\\n        if (this.pendingXhr_ !== null) {\\r\\n            this.pendingXhr_.abort();\\r\\n        }\\r\\n    };\\r\\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\\r\\n        // The codes for which to retry came from this page:\\r\\n        // https://cloud.google.com/storage/docs/exponential-backoff\\r\\n        var isFiveHundredCode = status >= 500 && status < 600;\\r\\n        var extraRetryCodes = [\\r\\n            // Request Timeout: web server didn't receive full request in time.\\r\\n            408,\\r\\n            // Too Many Requests: you're getting rate-limited, basically.\\r\\n            429\\r\\n        ];\\r\\n        var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\\r\\n        var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\\r\\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\\r\\n    };\\r\\n    return NetworkRequest;\\r\\n}());\\r\\n/**\\r\\n * A collection of information about the result of a network request.\\r\\n * @param opt_canceled Defaults to false.\\r\\n * @struct\\r\\n */\\r\\nvar RequestEndStatus = /** @class */ (function () {\\r\\n    function RequestEndStatus(wasSuccessCode, xhr, canceled) {\\r\\n        this.wasSuccessCode = wasSuccessCode;\\r\\n        this.xhr = xhr;\\r\\n        this.canceled = !!canceled;\\r\\n    }\\r\\n    return RequestEndStatus;\\r\\n}());\\r\\nfunction addAuthHeader_(headers, authToken) {\\r\\n    if (authToken !== null && authToken.length > 0) {\\r\\n        headers['Authorization'] = 'Firebase ' + authToken;\\r\\n    }\\r\\n}\\r\\nfunction addVersionHeader_(headers) {\\r\\n    var version = typeof firebase__default['default'] !== 'undefined' ? firebase__default['default'].SDK_VERSION : 'AppManager';\\r\\n    headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\\r\\n}\\r\\nfunction addGmpidHeader_(headers, appId) {\\r\\n    if (appId) {\\r\\n        headers['X-Firebase-GMPID'] = appId;\\r\\n    }\\r\\n}\\r\\n/**\\r\\n * @template T\\r\\n */\\r\\nfunction makeRequest(requestInfo, appId, authToken, pool) {\\r\\n    var queryPart = makeQueryString(requestInfo.urlParams);\\r\\n    var url = requestInfo.url + queryPart;\\r\\n    var headers = Object.assign({}, requestInfo.headers);\\r\\n    addGmpidHeader_(headers, appId);\\r\\n    addAuthHeader_(headers, authToken);\\r\\n    addVersionHeader_(headers);\\r\\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\\r\\n}\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * A service that provides firebaseStorage.Reference instances.\\r\\n * @param opt_url gs:// url to a custom Storage Bucket\\r\\n *\\r\\n * @struct\\r\\n */\\r\\nvar StorageService = /** @class */ (function () {\\r\\n    function StorageService(app, authProvider, pool, url) {\\r\\n        var _a;\\r\\n        this.bucket_ = null;\\r\\n        this.appId_ = null;\\r\\n        this.deleted_ = false;\\r\\n        this.app_ = app;\\r\\n        this.authProvider_ = authProvider;\\r\\n        this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;\\r\\n        this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;\\r\\n        this.requests_ = new Set();\\r\\n        this.pool_ = pool;\\r\\n        if (url != null) {\\r\\n            this.bucket_ = Location.makeFromBucketSpec(url);\\r\\n        }\\r\\n        else {\\r\\n            this.bucket_ = StorageService.extractBucket_((_a = this.app_) === null || _a === void 0 ? void 0 : _a.options);\\r\\n        }\\r\\n        this.internals_ = new ServiceInternals(this);\\r\\n    }\\r\\n    StorageService.extractBucket_ = function (config) {\\r\\n        var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\\r\\n        if (bucketString == null) {\\r\\n            return null;\\r\\n        }\\r\\n        return Location.makeFromBucketSpec(bucketString);\\r\\n    };\\r\\n    StorageService.prototype.getAuthToken = function () {\\r\\n        return tslib.__awaiter(this, void 0, void 0, function () {\\r\\n            var auth, tokenData;\\r\\n            return tslib.__generator(this, function (_a) {\\r\\n                switch (_a.label) {\\r\\n                    case 0:\\r\\n                        auth = this.authProvider_.getImmediate({ optional: true });\\r\\n                        if (!auth) return [3 /*break*/, 2];\\r\\n                        return [4 /*yield*/, auth.getToken()];\\r\\n                    case 1:\\r\\n                        tokenData = _a.sent();\\r\\n                        if (tokenData !== null) {\\r\\n                            return [2 /*return*/, tokenData.accessToken];\\r\\n                        }\\r\\n                        _a.label = 2;\\r\\n                    case 2: return [2 /*return*/, null];\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    };\\r\\n    /**\\r\\n     * Stop running requests and prevent more from being created.\\r\\n     */\\r\\n    StorageService.prototype.deleteApp = function () {\\r\\n        this.deleted_ = true;\\r\\n        this.app_ = null;\\r\\n        this.requests_.forEach(function (request) { return request.cancel(); });\\r\\n        this.requests_.clear();\\r\\n    };\\r\\n    /**\\r\\n     * Returns a new firebaseStorage.Reference object referencing this StorageService\\r\\n     * at the given Location.\\r\\n     * @param loc The Location.\\r\\n     * @return A firebaseStorage.Reference.\\r\\n     */\\r\\n    StorageService.prototype.makeStorageReference = function (loc) {\\r\\n        return new Reference(this, loc);\\r\\n    };\\r\\n    StorageService.prototype.makeRequest = function (requestInfo, authToken) {\\r\\n        var _this = this;\\r\\n        if (!this.deleted_) {\\r\\n            var request_1 = makeRequest(requestInfo, this.appId_, authToken, this.pool_);\\r\\n            this.requests_.add(request_1);\\r\\n            // Request removes itself from set when complete.\\r\\n            request_1.getPromise().then(function () { return _this.requests_.delete(request_1); }, function () { return _this.requests_.delete(request_1); });\\r\\n            return request_1;\\r\\n        }\\r\\n        else {\\r\\n            return new FailRequest(appDeleted());\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * Returns a firebaseStorage.Reference for the given path in the default\\r\\n     * bucket.\\r\\n     */\\r\\n    StorageService.prototype.ref = function (path) {\\r\\n        function validator(path) {\\r\\n            if (typeof path !== 'string') {\\r\\n                throw 'Path is not a string.';\\r\\n            }\\r\\n            if (/^[A-Za-z]+:\\\\/\\\\//.test(path)) {\\r\\n                throw 'Expected child path but got a URL, use refFromURL instead.';\\r\\n            }\\r\\n        }\\r\\n        validate('ref', [stringSpec(validator, true)], arguments);\\r\\n        if (this.bucket_ == null) {\\r\\n            throw new Error('No Storage Bucket defined in Firebase Options.');\\r\\n        }\\r\\n        var ref = new Reference(this, this.bucket_);\\r\\n        if (path != null) {\\r\\n            return ref.child(path);\\r\\n        }\\r\\n        else {\\r\\n            return ref;\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\\r\\n     * which must be a gs:// or http[s]:// URL.\\r\\n     */\\r\\n    StorageService.prototype.refFromURL = function (url) {\\r\\n        function validator(p) {\\r\\n            if (typeof p !== 'string') {\\r\\n                throw 'Path is not a string.';\\r\\n            }\\r\\n            if (!/^[A-Za-z]+:\\\\/\\\\//.test(p)) {\\r\\n                throw 'Expected full URL but got a child path, use ref instead.';\\r\\n            }\\r\\n            try {\\r\\n                Location.makeFromUrl(p);\\r\\n            }\\r\\n            catch (e) {\\r\\n                throw 'Expected valid full URL but got an invalid one.';\\r\\n            }\\r\\n        }\\r\\n        validate('refFromURL', [stringSpec(validator, false)], arguments);\\r\\n        return new Reference(this, url);\\r\\n    };\\r\\n    Object.defineProperty(StorageService.prototype, \\\"maxUploadRetryTime\\\", {\\r\\n        get: function () {\\r\\n            return this.maxUploadRetryTime_;\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    StorageService.prototype.setMaxUploadRetryTime = function (time) {\\r\\n        validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\\r\\n        this.maxUploadRetryTime_ = time;\\r\\n    };\\r\\n    Object.defineProperty(StorageService.prototype, \\\"maxOperationRetryTime\\\", {\\r\\n        get: function () {\\r\\n            return this.maxOperationRetryTime_;\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    StorageService.prototype.setMaxOperationRetryTime = function (time) {\\r\\n        validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\\r\\n        this.maxOperationRetryTime_ = time;\\r\\n    };\\r\\n    Object.defineProperty(StorageService.prototype, \\\"app\\\", {\\r\\n        get: function () {\\r\\n            return this.app_;\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(StorageService.prototype, \\\"INTERNAL\\\", {\\r\\n        get: function () {\\r\\n            return this.internals_;\\r\\n        },\\r\\n        enumerable: false,\\r\\n        configurable: true\\r\\n    });\\r\\n    return StorageService;\\r\\n}());\\r\\n/**\\r\\n * @struct\\r\\n */\\r\\nvar ServiceInternals = /** @class */ (function () {\\r\\n    function ServiceInternals(service) {\\r\\n        this.service_ = service;\\r\\n    }\\r\\n    /**\\r\\n     * Called when the associated app is deleted.\\r\\n     */\\r\\n    ServiceInternals.prototype.delete = function () {\\r\\n        this.service_.deleteApp();\\r\\n        return Promise.resolve();\\r\\n    };\\r\\n    return ServiceInternals;\\r\\n}());\\n\\nvar name = \\\"@firebase/storage\\\";\\nvar version = \\\"0.3.43\\\";\\n\\n/**\\r\\n * @license\\r\\n * Copyright 2017 Google LLC\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *   http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n/**\\r\\n * Type constant for Firebase Storage.\\r\\n */\\r\\nvar STORAGE_TYPE = 'storage';\\r\\nfunction factory(container, url) {\\r\\n    // Dependencies\\r\\n    var app = container.getProvider('app').getImmediate();\\r\\n    var authProvider = container.getProvider('auth-internal');\\r\\n    return new StorageService(app, authProvider, new XhrIoPool(), url);\\r\\n}\\r\\nfunction registerStorage(instance) {\\r\\n    var namespaceExports = {\\r\\n        // no-inline\\r\\n        TaskState: TaskState,\\r\\n        TaskEvent: TaskEvent,\\r\\n        StringFormat: StringFormat,\\r\\n        Storage: StorageService,\\r\\n        Reference: Reference\\r\\n    };\\r\\n    instance.INTERNAL.registerComponent(new component.Component(STORAGE_TYPE, factory, \\\"PUBLIC\\\" /* PUBLIC */)\\r\\n        .setServiceProps(namespaceExports)\\r\\n        .setMultipleInstances(true));\\r\\n    instance.registerVersion(name, version);\\r\\n}\\r\\nregisterStorage(firebase__default['default']);\\n\\nexports.registerStorage = registerStorage;\\n//# sourceMappingURL=index.cjs.js.map\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"unknown\",\"FirebaseStorageError\",\"Code\",\"UNKNOWN\",\"message\",\"canceled\",\"CANCELED\",\"cannotSliceBlob\",\"CANNOT_SLICE_BLOB\",\"invalidArgument\",\"index\",\"fnName\",\"INVALID_ARGUMENT\",\"appDeleted\",\"APP_DELETED\",\"invalidFormat\",\"format\",\"INVALID_FORMAT\",\"internalError\",\"INTERNAL_ERROR\",\"formatValidator\",\"stringFormat\",\"StringFormat\",\"RAW\",\"BASE64\",\"BASE64URL\",\"DATA_URL\",\"dataFromString\",\"stringData\",\"StringData\",\"utf8Bytes_\",\"base64Bytes_\",\"parts\",\"DataURLParts\",\"base64\",\"decoded\",\"decodeURIComponent\",\"value\",\"e\",\"contentType\",\"b\",\"i\",\"length\",\"c\",\"charCodeAt\",\"push\",\"lo\",\"hi\",\"Uint8Array\",\"hasMinus\",\"indexOf\",\"hasUnder\",\"invalidChar\",\"hasPlus\",\"hasSlash\",\"replace\",\"bytes\",\"atob\",\"array\",\"taskStateFromInternalTaskState\",\"state\",\"InternalTaskState\",\"RUNNING\",\"PAUSING\",\"CANCELING\",\"TaskState\",\"PAUSED\",\"SUCCESS\",\"ERROR\",\"isJustDef\",\"p\",\"isObject\",\"isString\",\"String\",\"isNumber\",\"Number\",\"isNativeBlob\",\"isNativeBlobDefined\",\"Blob\",\"getBlob\",\"args\",\"_i\",\"arguments\",\"BlobBuilder\",\"WebKitBlobBuilder\",\"undefined\",\"bb\",\"append\",\"Error\",\"jsonObjectOrNull\",\"s\",\"obj\",\"JSON\",\"parse\",\"Array\",\"isArray\",\"child\",\"path\",\"childPath\",\"canonicalChildPath\",\"split\",\"filter\",\"component\",\"join\",\"lastComponent\",\"lastIndexOf\",\"slice\",\"makeUrl\",\"urlPart\",\"makeQueryString\",\"params\",\"encode\",\"encodeURIComponent\",\"queryPart\",\"key\",\"hasOwnProperty\",\"nextPart\",\"noXform_\",\"metadata\",\"getMappings\",\"mappings_\",\"mappings\",\"Mapping\",\"nameMapping\",\"xform\",\"mappingsXformPath\",\"_metadata\",\"fullPath\",\"sizeMapping\",\"xformSize\",\"size\",\"addRef\",\"service\",\"Object\",\"defineProperty\",\"get\",\"generateRef\",\"loc\",\"Location\",\"bucket\",\"makeStorageReference\",\"fromResourceString\",\"resourceString\",\"len\",\"mapping\",\"local\",\"server\",\"downloadUrlFromResourceString\",\"tokens\",\"tokensList\",\"map\",\"urls\",\"token\",\"base\",\"queryString\",\"alt\",\"toResourceString\",\"resource\",\"writable\",\"stringify\",\"metadataValidator\",\"val\",\"listOptionsValidator\",\"MAX_RESULTS_KEY\",\"isInteger\",\"PAGE_TOKEN_KEY\",\"handlerCheck\",\"cndn\",\"metadataHandler\",\"handler\",\"xhr\",\"text\",\"listHandler\",\"listResult\",\"prefixes\",\"items\",\"nextPageToken\",\"_a\",\"pathWithoutTrailingSlash\",\"reference\",\"_b\",\"_c\",\"item\",\"downloadUrlHandler\",\"sharedErrorHandler\",\"location\",\"errorHandler\",\"err\",\"getStatus\",\"UNAUTHENTICATED\",\"QUOTA_EXCEEDED\",\"UNAUTHORIZED\",\"newErr\",\"setServerResponseProp\",\"serverResponseProp\",\"objectErrorHandler\",\"shared\",\"OBJECT_NOT_FOUND\",\"getMetadata\",\"fullServerUrl\",\"url\",\"timeout\",\"maxOperationRetryTime\",\"requestInfo\",\"RequestInfo\",\"method\",\"getDownloadUrl\",\"deleteObject\",\"_xhr\",\"_text\",\"successCodes\",\"metadataForUpload_\",\"blob\",\"metadataClone\",\"assign\",\"type\",\"multipartUpload\",\"bucketOnlyServerUrl\",\"headers\",\"str\",\"Math\",\"random\",\"toString\",\"boundary\",\"metadata_\",\"metadataString\",\"body\",\"FbsBlob\",\"urlParams\",\"name\",\"maxUploadRetryTime\",\"uploadData\",\"checkResumeHeader_\",\"allowed\",\"status\",\"getResponseHeader\",\"allowedStatus\",\"createResumableUpload\",\"metadataForUpload\",\"getResumableUploadStatus\",\"sizeString\",\"isNaN\",\"ResumableUploadStatus\",\"continueResumableUpload\",\"chunkSize\",\"progressCallback\",\"status_\",\"current\",\"total\",\"SERVER_FILE_WRONG_SIZE\",\"bytesToUpload\",\"bytesLeft\",\"min\",\"startByte\",\"uploadCommand\",\"uploadStatus\",\"newCurrent\",\"validate\",\"specs\",\"passed\",\"minArgs\",\"maxArgs\",\"optional\",\"countPart\",\"plural\",\"INVALID_ARGUMENT_COUNT\",\"validator\",\"and_\",\"v1\",\"v2\",\"stringSpec\",\"stringValidator\",\"chainedValidator\",\"ArgSpec\",\"uploadDataSpec\",\"ArrayBuffer\",\"nonNegativeNumberSpec\",\"looseObjectSpec\",\"isLooseObjectValidator\",\"nullFunctionSpec\",\"async\",\"f\",\"argsToForward\",\"Promise\",\"resolve\",\"then\",\"apply\",\"start\",\"callback\",\"triggerCallback\",\"triggeredCallback\",\"callWithDelay\",\"millis\",\"timeoutId\",\"setTimeout\",\"cancelState\",\"success\",\"call\",\"tslib\",\"__spreadArrays\",\"hitTimeout\",\"waitSeconds\",\"waitMillis\",\"stop\",\"wasTimeout\",\"stopped\",\"clearTimeout\",\"makeRequest\",\"appId\",\"authToken\",\"pool\",\"version\",\"firebase__default\",\"SDK_VERSION\",\"NetworkRequest\",\"additionalRetryCodes\",\"factory\",\"container\",\"app\",\"getProvider\",\"getImmediate\",\"authProvider\",\"StorageService\",\"XhrIoPool\",\"registerStorage\",\"instance\",\"namespaceExports\",\"TaskEvent\",\"Storage\",\"Reference\",\"INTERNAL\",\"registerComponent\",\"setServiceProps\",\"Component\",\"STORAGE_TYPE\",\"setMultipleInstances\",\"registerVersion\",\"firebase\",\"code\",\"code_\",\"message_\",\"serverResponse_\",\"name_\",\"prototype\",\"codeProp\",\"FirebaseStorageError.prototype.codeProp\",\"codeEquals\",\"FirebaseStorageError.prototype.codeEquals\",\"FirebaseStorageError.prototype.serverResponseProp\",\"FirebaseStorageError.prototype.setServerResponseProp\",\"serverResponse\",\"enumerable\",\"configurable\",\"BUCKET_NOT_FOUND\",\"PROJECT_NOT_FOUND\",\"RETRY_LIMIT_EXCEEDED\",\"INVALID_CHECKSUM\",\"INVALID_EVENT_NAME\",\"INVALID_URL\",\"INVALID_DEFAULT_BUCKET\",\"NO_DEFAULT_BUCKET\",\"NO_DOWNLOAD_URL\",\"INVALID_ROOT_OPERATION\",\"data\",\"dataURL\",\"matches\",\"match\",\"middle\",\"end\",\"substring\",\"rest\",\"STATE_CHANGED\",\"ErrorCode\",\"NetworkXhrIo\",\"_this\",\"sent_\",\"xhr_\",\"XMLHttpRequest\",\"errorCode_\",\"NO_ERROR\",\"sendPromise_\",\"addEventListener\",\"ABORT\",\"NETWORK_ERROR\",\"send\",\"NetworkXhrIo.prototype.send\",\"open\",\"setRequestHeader\",\"getErrorCode\",\"NetworkXhrIo.prototype.getErrorCode\",\"NetworkXhrIo.prototype.getStatus\",\"getResponseText\",\"NetworkXhrIo.prototype.getResponseText\",\"responseText\",\"abort\",\"NetworkXhrIo.prototype.abort\",\"NetworkXhrIo.prototype.getResponseHeader\",\"header\",\"addUploadProgressListener\",\"NetworkXhrIo.prototype.addUploadProgressListener\",\"listener\",\"upload\",\"removeUploadProgressListener\",\"NetworkXhrIo.prototype.removeUploadProgressListener\",\"removeEventListener\",\"createXhrIo\",\"XhrIoPool.prototype.createXhrIo\",\"elideCopy\",\"blobType\",\"data_\",\"byteLength\",\"set\",\"size_\",\"type_\",\"FbsBlob.prototype.size\",\"FbsBlob.prototype.type\",\"FbsBlob.prototype.slice\",\"endByte\",\"realBlob\",\"webkitSlice\",\"mozSlice\",\"sliced\",\"buffer\",\"FbsBlob.getBlob\",\"blobby\",\"uint8Arrays\",\"finalLength_1\",\"forEach\",\"merged_1\",\"index_1\",\"FbsBlob.prototype.uploadData\",\"path_\",\"Location.prototype.fullServerUrl\",\"Location.prototype.bucketOnlyServerUrl\",\"makeFromBucketSpec\",\"Location.makeFromBucketSpec\",\"bucketString\",\"bucketLocation\",\"makeFromUrl\",\"Location.makeFromUrl\",\"httpModify\",\"firebaseStorageHost\",\"DEFAULT_HOST\",\"groups\",\"regex\",\"gsRegex\",\"indices\",\"gsIndices\",\"postModify\",\"gsModify\",\"charAt\",\"firebaseStorageRegExp\",\"RegExp\",\"firebaseStorageIndices\",\"cloudStorageRegExp\",\"cloudStorageIndices\",\"group\",\"captures\",\"exec\",\"bucketValue\",\"pathValue\",\"finalized\",\"Observer\",\"nextOrObserver\",\"error\",\"complete\",\"next\",\"UploadTaskSnapshot\",\"bytesTransferred\",\"totalBytes\",\"task\",\"ref\",\"self\",\"this.validator\",\"UploadTask\",\"transferred_\",\"needToFetchMetadata_\",\"needToFetchStatus_\",\"observers_\",\"request_\",\"uploadUrl_\",\"error_\",\"chunkMultiplier_\",\"reject_\",\"resolve_\",\"ref_\",\"service_\",\"location_\",\"blob_\",\"resumable_\",\"shouldDoResumable_\",\"state_\",\"errorHandler_\",\"this.errorHandler_\",\"completeTransitions_\",\"transition_\",\"metadataErrorHandler_\",\"this.metadataErrorHandler_\",\"promise_\",\"reject\",\"start_\",\"makeProgressCallback_\",\"UploadTask.prototype.makeProgressCallback_\",\"sizeBefore\",\"loaded\",\"updateProgress_\",\"UploadTask.prototype.shouldDoResumable_\",\"UploadTask.prototype.start_\",\"createResumable_\",\"fetchStatus_\",\"fetchMetadata_\",\"continueUpload_\",\"oneShotUpload_\",\"resolveToken_\",\"UploadTask.prototype.resolveToken_\",\"getAuthToken\",\"UploadTask.prototype.createResumable_\",\"createRequest\",\"getPromise\",\"UploadTask.prototype.fetchStatus_\",\"statusRequest\",\"UploadTask.prototype.continueUpload_\",\"resumableUploadChunkSize\",\"uploadRequest\",\"newStatus\",\"increaseMultiplier_\",\"UploadTask.prototype.increaseMultiplier_\",\"UploadTask.prototype.fetchMetadata_\",\"metadataRequest\",\"UploadTask.prototype.oneShotUpload_\",\"multipartRequest\",\"UploadTask.prototype.updateProgress_\",\"transferred\",\"old\",\"notifyObservers_\",\"UploadTask.prototype.transition_\",\"cancel\",\"wasPaused\",\"UploadTask.prototype.completeTransitions_\",\"externalState\",\"on\",\"UploadTask.prototype.on\",\"completed\",\"nextOrObserverValidator\",\"nextValidator\",\"observerValidator\",\"nextOrObserverMessage\",\"makeBinder\",\"binder\",\"observer\",\"addObserver_\",\"removeObserver_\",\"typeValidator\",\"binderSpecs\",\"binderNextOrObserverValidator\",\"UploadTask.prototype.then\",\"onFulfilled\",\"onRejected\",\"catch\",\"UploadTask.prototype.catch\",\"UploadTask.prototype.addObserver_\",\"notifyObserver_\",\"UploadTask.prototype.removeObserver_\",\"splice\",\"UploadTask.prototype.notifyObservers_\",\"finishPromise_\",\"observers\",\"UploadTask.prototype.finishPromise_\",\"triggered\",\"bind\",\"snapshot\",\"UploadTask.prototype.notifyObserver_\",\"resume\",\"UploadTask.prototype.resume\",\"valid\",\"pause\",\"UploadTask.prototype.pause\",\"UploadTask.prototype.cancel\",\"Reference.prototype.toString\",\"newRef\",\"Reference.prototype.newRef\",\"Reference.prototype.mappings\",\"Reference.prototype.child\",\"newPath\",\"put\",\"Reference.prototype.put\",\"throwIfRoot_\",\"putString\",\"Reference.prototype.putString\",\"delete\",\"Reference.prototype.delete\",\"listAll\",\"Reference.prototype.listAll\",\"accumulator\",\"listAllHelper\",\"Reference.prototype.listAllHelper\",\"pageToken\",\"__awaiter\",\"opt\",\"nextPage\",\"__generator\",\"label\",\"list\",\"sent\",\"Reference.prototype.list\",\"options\",\"op\",\"maxResults\",\"isRoot\",\"delimiter\",\"Reference.prototype.getMetadata\",\"updateMetadata\",\"Reference.prototype.updateMetadata\",\"getDownloadURL\",\"Reference.prototype.getDownloadURL\",\"Reference.prototype.throwIfRoot_\",\"FailRequest\",\"FailRequest.prototype.getPromise\",\"FailRequest.prototype.cancel\",\"_appDelete\",\"errorCallback\",\"backoffId_\",\"pendingXhr_\",\"appDelete_\",\"canceled_\",\"url_\",\"method_\",\"headers_\",\"body_\",\"successCodes_\",\"additionalRetryCodes_\",\"callback_\",\"errorCallback_\",\"progressCallback_\",\"timeout_\",\"pool_\",\"NetworkRequest.prototype.start_\",\"doTheRequest\",\"backoffCallback\",\"progressListener\",\"progressEvent\",\"lengthComputable\",\"RequestEndStatus\",\"hitServer\",\"isRetryStatusCode_\",\"wasCanceled\",\"successCode\",\"backoffDone\",\"requestWentThrough\",\"wasSuccessCode\",\"result\",\"NetworkRequest.prototype.getPromise\",\"NetworkRequest.prototype.cancel\",\"appDelete\",\"NetworkRequest.prototype.isRetryStatusCode_\",\"isFiveHundredCode\",\"isExtraRetryCode\",\"extraRetryCodes\",\"isRequestSpecificRetryCode\",\"appId_\",\"bucket_\",\"deleted_\",\"app_\",\"authProvider_\",\"maxOperationRetryTime_\",\"DEFAULT_MAX_OPERATION_RETRY_TIME\",\"maxUploadRetryTime_\",\"DEFAULT_MAX_UPLOAD_RETRY_TIME\",\"requests_\",\"Set\",\"extractBucket_\",\"internals_\",\"ServiceInternals\",\"StorageService.extractBucket_\",\"config\",\"StorageService.prototype.getAuthToken\",\"auth\",\"tokenData\",\"getToken\",\"accessToken\",\"deleteApp\",\"StorageService.prototype.deleteApp\",\"request\",\"clear\",\"StorageService.prototype.makeStorageReference\",\"StorageService.prototype.makeRequest\",\"request_1\",\"add\",\"StorageService.prototype.ref\",\"test\",\"refFromURL\",\"StorageService.prototype.refFromURL\",\"setMaxUploadRetryTime\",\"StorageService.prototype.setMaxUploadRetryTime\",\"time\",\"setMaxOperationRetryTime\",\"StorageService.prototype.setMaxOperationRetryTime\",\"ServiceInternals.prototype.delete\"]\n}\n"]